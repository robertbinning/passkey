"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.testDataProvider = void 0;
var defaultDataProvider_1 = require("./defaultDataProvider");
/**
 * A dataProvider meant to be used in tests only. You can override any of its methods by passing a partial dataProvider.
 *
 * @example
 * const dataProvider = testDataProvider({
 *    getOne: async () => ({ data: { id: 123, title: 'foo' }})
 * })
 */
var testDataProvider = function (overrides) { return (__assign(__assign({}, defaultDataProvider_1.defaultDataProvider), overrides)); };
exports.testDataProvider = testDataProvider;
//# sourceMappingURL=testDataProvider.js.map