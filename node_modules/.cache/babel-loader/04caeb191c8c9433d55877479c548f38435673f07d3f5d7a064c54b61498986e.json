{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, memo } from 'react';\nimport { AppBar as MuiAppBar, Toolbar, useMediaQuery } from '@mui/material';\nimport { useLocales } from 'ra-core';\nimport { SidebarToggleButton } from './SidebarToggleButton';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { UserMenu } from './UserMenu';\nimport { HideOnScroll } from './HideOnScroll';\nimport { TitlePortal } from './TitlePortal';\nimport { LocalesMenuButton } from '../button';\nimport { useThemesContext } from '../theme/useThemesContext';\nimport { ToggleThemeButton } from '../button/ToggleThemeButton';\n/**\n * The AppBar component renders a custom MuiAppBar.\n *\n * @param {Object} props\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.color The color of the AppBar\n * @param {Element | boolean} props.userMenu A custom user menu component for the AppBar. <UserMenu/> component by default. Pass false to disable.\n *\n * @example // add a custom button to the AppBar\n *\n * const MyAppBar = () => (\n *   <AppBar>\n *     <TitlePortal />\n *     <MyCustomButton />\n *   </AppBar>\n * );\n *\n * @example // without a user menu\n *\n * const MyAppBar = () => <AppBar userMenu={false} />;\n */\nexport var AppBar = memo(function (props) {\n  var alwaysOn = props.alwaysOn,\n    children = props.children,\n    className = props.className,\n    _a = props.color,\n    color = _a === void 0 ? 'secondary' : _a,\n    _b = props.toolbar,\n    toolbar = _b === void 0 ? defaultToolbarElement : _b,\n    _c = props.userMenu,\n    userMenu = _c === void 0 ? DefaultUserMenu : _c,\n    _d = props.container,\n    Container = _d === void 0 ? alwaysOn ? 'div' : HideOnScroll : _d,\n    rest = __rest(props, [\"alwaysOn\", \"children\", \"className\", \"color\", \"toolbar\", \"userMenu\", \"container\"]);\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return React.createElement(Container, {\n    className: className\n  }, React.createElement(StyledAppBar, __assign({\n    className: AppBarClasses.appBar,\n    color: color\n  }, rest), React.createElement(Toolbar, {\n    disableGutters: true,\n    variant: isXSmall ? 'regular' : 'dense',\n    className: AppBarClasses.toolbar\n  }, React.createElement(SidebarToggleButton, {\n    className: AppBarClasses.menuButton\n  }), Children.count(children) === 0 ? React.createElement(TitlePortal, {\n    className: AppBarClasses.title\n  }) : children, toolbar, typeof userMenu === 'boolean' ? userMenu === true ? React.createElement(UserMenu, null) : null : userMenu)));\n});\nvar DefaultToolbar = function () {\n  var locales = useLocales();\n  var darkTheme = useThemesContext().darkTheme;\n  return React.createElement(React.Fragment, null, locales && locales.length > 1 ? React.createElement(LocalesMenuButton, null) : null, darkTheme && React.createElement(ToggleThemeButton, null), React.createElement(LoadingIndicator, null));\n};\nvar defaultToolbarElement = React.createElement(DefaultToolbar, null);\nvar DefaultUserMenu = React.createElement(UserMenu, null);\nvar PREFIX = 'RaAppBar';\nexport var AppBarClasses = {\n  appBar: \"\".concat(PREFIX, \"-appBar\"),\n  toolbar: \"\".concat(PREFIX, \"-toolbar\"),\n  menuButton: \"\".concat(PREFIX, \"-menuButton\"),\n  menuButtonIconClosed: \"\".concat(PREFIX, \"-menuButtonIconClosed\"),\n  menuButtonIconOpen: \"\".concat(PREFIX, \"-menuButtonIconOpen\"),\n  title: \"\".concat(PREFIX, \"-title\")\n};\nvar StyledAppBar = styled(MuiAppBar, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b, _c;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(AppBarClasses.toolbar)] = (_c = {\n    padding: \"0 \".concat(theme.spacing(1))\n  }, _c[theme.breakpoints.down('md')] = {\n    minHeight: theme.spacing(6)\n  }, _c), _b[\"& .\".concat(AppBarClasses.menuButton)] = {\n    marginRight: '0.2em'\n  }, _b[\"& .\".concat(AppBarClasses.title)] = {}, _b;\n});","map":{"version":3,"names":["React","styled","Children","memo","AppBar","MuiAppBar","Toolbar","useMediaQuery","useLocales","SidebarToggleButton","LoadingIndicator","UserMenu","HideOnScroll","TitlePortal","LocalesMenuButton","useThemesContext","ToggleThemeButton","props","alwaysOn","children","className","_a","color","_b","toolbar","defaultToolbarElement","_c","userMenu","DefaultUserMenu","_d","container","Container","rest","__rest","isXSmall","theme","breakpoints","down","createElement","StyledAppBar","__assign","AppBarClasses","appBar","disableGutters","variant","menuButton","count","title","DefaultToolbar","locales","darkTheme","Fragment","length","PREFIX","concat","menuButtonIconClosed","menuButtonIconOpen","name","overridesResolver","styles","root","padding","spacing","minHeight","marginRight"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/layout/AppBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, memo } from 'react';\nimport {\n    AppBar as MuiAppBar,\n    AppBarProps as MuiAppBarProps,\n    Toolbar,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport { useLocales } from 'ra-core';\n\nimport { SidebarToggleButton } from './SidebarToggleButton';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { UserMenu } from './UserMenu';\nimport { HideOnScroll } from './HideOnScroll';\nimport { TitlePortal } from './TitlePortal';\nimport { LocalesMenuButton } from '../button';\nimport { useThemesContext } from '../theme/useThemesContext';\nimport { ToggleThemeButton } from '../button/ToggleThemeButton';\n\n/**\n * The AppBar component renders a custom MuiAppBar.\n *\n * @param {Object} props\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.color The color of the AppBar\n * @param {Element | boolean} props.userMenu A custom user menu component for the AppBar. <UserMenu/> component by default. Pass false to disable.\n *\n * @example // add a custom button to the AppBar\n *\n * const MyAppBar = () => (\n *   <AppBar>\n *     <TitlePortal />\n *     <MyCustomButton />\n *   </AppBar>\n * );\n *\n * @example // without a user menu\n *\n * const MyAppBar = () => <AppBar userMenu={false} />;\n */\nexport const AppBar: FC<AppBarProps> = memo(props => {\n    const {\n        alwaysOn,\n        children,\n        className,\n        color = 'secondary',\n        toolbar = defaultToolbarElement,\n        userMenu = DefaultUserMenu,\n        container: Container = alwaysOn ? 'div' : HideOnScroll,\n        ...rest\n    } = props;\n\n    const isXSmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('sm')\n    );\n\n    return (\n        <Container className={className}>\n            <StyledAppBar\n                className={AppBarClasses.appBar}\n                color={color}\n                {...rest}\n            >\n                <Toolbar\n                    disableGutters\n                    variant={isXSmall ? 'regular' : 'dense'}\n                    className={AppBarClasses.toolbar}\n                >\n                    <SidebarToggleButton className={AppBarClasses.menuButton} />\n                    {Children.count(children) === 0 ? (\n                        <TitlePortal className={AppBarClasses.title} />\n                    ) : (\n                        children\n                    )}\n                    {toolbar}\n                    {typeof userMenu === 'boolean' ? (\n                        userMenu === true ? (\n                            <UserMenu />\n                        ) : null\n                    ) : (\n                        userMenu\n                    )}\n                </Toolbar>\n            </StyledAppBar>\n        </Container>\n    );\n});\n\nconst DefaultToolbar = () => {\n    const locales = useLocales();\n    const { darkTheme } = useThemesContext();\n    return (\n        <>\n            {locales && locales.length > 1 ? <LocalesMenuButton /> : null}\n            {darkTheme && <ToggleThemeButton />}\n            <LoadingIndicator />\n        </>\n    );\n};\n\nconst defaultToolbarElement = <DefaultToolbar />;\n\nconst DefaultUserMenu = <UserMenu />;\n\nexport interface AppBarProps extends MuiAppBarProps {\n    /**\n     * This prop is injected by Layout. You should not use it directly unless\n     * you are using a custom layout.\n     * If you are using the default layout, use `<Layout appBarAlwaysOn>` instead.\n     */\n    alwaysOn?: boolean;\n    container?: React.ElementType<any>;\n    toolbar?: JSX.Element;\n    userMenu?: JSX.Element | boolean;\n}\n\nconst PREFIX = 'RaAppBar';\n\nexport const AppBarClasses = {\n    appBar: `${PREFIX}-appBar`,\n    toolbar: `${PREFIX}-toolbar`,\n    menuButton: `${PREFIX}-menuButton`,\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\n    title: `${PREFIX}-title`,\n};\n\nconst StyledAppBar = styled(MuiAppBar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${AppBarClasses.toolbar}`]: {\n        padding: `0 ${theme.spacing(1)}`,\n        [theme.breakpoints.down('md')]: {\n            minHeight: theme.spacing(6),\n        },\n    },\n    [`& .${AppBarClasses.menuButton}`]: {\n        marginRight: '0.2em',\n    },\n    [`& .${AppBarClasses.title}`]: {},\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}