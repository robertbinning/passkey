{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { EditBase, InferredElement, useResourceContext, useEditContext, getElementsFromRecords } from 'ra-core';\nimport { capitalize, singularize } from 'inflection';\nimport { EditView } from './EditView';\nimport { editFieldTypes } from './editFieldTypes';\nexport var EditGuesser = function (props) {\n  var resource = props.resource,\n    id = props.id,\n    mutationMode = props.mutationMode,\n    mutationOptions = props.mutationOptions,\n    queryOptions = props.queryOptions,\n    redirect = props.redirect,\n    transform = props.transform,\n    disableAuthentication = props.disableAuthentication,\n    rest = __rest(props, [\"resource\", \"id\", \"mutationMode\", \"mutationOptions\", \"queryOptions\", \"redirect\", \"transform\", \"disableAuthentication\"]);\n  return React.createElement(EditBase, {\n    resource: resource,\n    id: id,\n    mutationMode: mutationMode,\n    mutationOptions: mutationOptions,\n    queryOptions: queryOptions,\n    redirect: redirect,\n    transform: transform,\n    disableAuthentication: disableAuthentication\n  }, React.createElement(EditViewGuesser, __assign({}, rest)));\n};\nvar EditViewGuesser = function (props) {\n  var resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error(\"<EditGuesser> was called outside of a ResourceContext and without a resource prop. You must set the resource prop.\");\n  }\n  var record = useEditContext().record;\n  var _a = useState(null),\n    child = _a[0],\n    setChild = _a[1];\n  var _b = props.enableLog,\n    enableLog = _b === void 0 ? process.env.NODE_ENV === 'development' : _b,\n    rest = __rest(props, [\"enableLog\"]);\n  useEffect(function () {\n    setChild(null);\n  }, [resource]);\n  useEffect(function () {\n    if (record && !child) {\n      var inferredElements = getElementsFromRecords([record], editFieldTypes);\n      var inferredChild = new InferredElement(editFieldTypes.form, null, inferredElements);\n      setChild(inferredChild.getElement());\n      if (!enableLog) return;\n      var representation = inferredChild.getRepresentation();\n      var components = ['Edit'].concat(Array.from(new Set(Array.from(representation.matchAll(/<([^/\\s>]+)/g)).map(function (match) {\n        return match[1];\n      }).filter(function (component) {\n        return component !== 'span';\n      })))).sort();\n      // eslint-disable-next-line no-console\n      console.log(\"Guessed Edit:\\n\\nimport { \".concat(components.join(', '), \" } from 'react-admin';\\n\\nexport const \").concat(capitalize(singularize(resource)), \"Edit = () => (\\n    <Edit>\\n\").concat(representation, \"\\n    </Edit>\\n);\"));\n    }\n  }, [record, child, resource, enableLog]);\n  return React.createElement(EditView, __assign({}, rest), child);\n};","map":{"version":3,"names":["React","useEffect","useState","EditBase","InferredElement","useResourceContext","useEditContext","getElementsFromRecords","capitalize","singularize","EditView","editFieldTypes","EditGuesser","props","resource","id","mutationMode","mutationOptions","queryOptions","redirect","transform","disableAuthentication","rest","__rest","createElement","EditViewGuesser","__assign","Error","record","_a","child","setChild","_b","enableLog","process","env","NODE_ENV","inferredElements","inferredChild","form","getElement","representation","getRepresentation","components","concat","Array","from","Set","matchAll","map","match","filter","component","sort","console","log","join"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/detail/EditGuesser.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, useEffect, useState } from 'react';\nimport {\n    EditBase,\n    InferredElement,\n    useResourceContext,\n    useEditContext,\n    getElementsFromRecords,\n    RaRecord,\n} from 'ra-core';\nimport { capitalize, singularize } from 'inflection';\n\nimport { EditProps } from './Edit';\nimport { EditView } from './EditView';\nimport { editFieldTypes } from './editFieldTypes';\n\nexport const EditGuesser = <RecordType extends RaRecord = any>(\n    props: EditGuesserProps<RecordType>\n) => {\n    const {\n        resource,\n        id,\n        mutationMode,\n        mutationOptions,\n        queryOptions,\n        redirect,\n        transform,\n        disableAuthentication,\n        ...rest\n    } = props;\n    return (\n        <EditBase<RecordType>\n            resource={resource}\n            id={id}\n            mutationMode={mutationMode}\n            mutationOptions={mutationOptions}\n            queryOptions={queryOptions}\n            redirect={redirect}\n            transform={transform}\n            disableAuthentication={disableAuthentication}\n        >\n            <EditViewGuesser {...rest} />\n        </EditBase>\n    );\n};\n\ninterface EditGuesserProps<RecordType extends RaRecord = any>\n    extends Omit<EditProps<RecordType>, 'children'> {}\n\nconst EditViewGuesser = <RecordType extends RaRecord = any>(\n    props: EditGuesserProps<RecordType>\n) => {\n    const resource = useResourceContext(props);\n\n    if (!resource) {\n        throw new Error(\n            `<EditGuesser> was called outside of a ResourceContext and without a resource prop. You must set the resource prop.`\n        );\n    }\n\n    const { record } = useEditContext();\n    const [child, setChild] = useState<ReactNode>(null);\n    const { enableLog = process.env.NODE_ENV === 'development', ...rest } =\n        props;\n\n    useEffect(() => {\n        setChild(null);\n    }, [resource]);\n\n    useEffect(() => {\n        if (record && !child) {\n            const inferredElements = getElementsFromRecords(\n                [record],\n                editFieldTypes\n            );\n            const inferredChild = new InferredElement(\n                editFieldTypes.form,\n                null,\n                inferredElements\n            );\n            setChild(inferredChild.getElement());\n\n            if (!enableLog) return;\n\n            const representation = inferredChild.getRepresentation();\n\n            const components = ['Edit']\n                .concat(\n                    Array.from(\n                        new Set(\n                            Array.from(representation.matchAll(/<([^/\\s>]+)/g))\n                                .map(match => match[1])\n                                .filter(component => component !== 'span')\n                        )\n                    )\n                )\n                .sort();\n\n            // eslint-disable-next-line no-console\n            console.log(\n                `Guessed Edit:\n\nimport { ${components.join(', ')} } from 'react-admin';\n\nexport const ${capitalize(singularize(resource))}Edit = () => (\n    <Edit>\n${representation}\n    </Edit>\n);`\n            );\n        }\n    }, [record, child, resource, enableLog]);\n\n    return <EditView {...rest}>{child}</EditView>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}