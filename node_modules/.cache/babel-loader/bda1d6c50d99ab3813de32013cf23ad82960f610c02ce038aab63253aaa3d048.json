{"ast":null,"code":"var _a;\nimport * as React from 'react';\nimport { memo } from 'react';\nimport clsx from 'clsx';\nimport { Button, Menu, MenuItem, Tooltip, IconButton, useMediaQuery } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport SortIcon from '@mui/icons-material/Sort';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { useListSortContext, useTranslate, useTranslateLabel, shallowEqual } from 'ra-core';\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions = () => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\nvar SortButton = function (props) {\n  var fields = props.fields,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.sort.sort_by' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    sx = props.sx,\n    className = props.className;\n  var _c = useListSortContext(),\n    resource = _c.resource,\n    sort = _c.sort,\n    setSort = _c.setSort;\n  var translate = useTranslate();\n  var translateLabel = useTranslateLabel();\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  var _d = React.useState(null),\n    anchorEl = _d[0],\n    setAnchorEl = _d[1];\n  var handleClick = function (event) {\n    setAnchorEl(event.currentTarget);\n  };\n  var handleClose = function () {\n    setAnchorEl(null);\n  };\n  var handleChangeSort = function (event) {\n    var field = event.currentTarget.dataset.sort;\n    if (!field) {\n      throw new Error('<SortButton> MenuItems should have a data-sort attribute');\n    }\n    setSort({\n      field: field,\n      order: field === sort.field ? inverseOrder(sort.order) : 'ASC'\n    });\n    setAnchorEl(null);\n  };\n  var buttonLabel = translate(label, {\n    field: translateLabel({\n      resource: resource,\n      source: sort.field\n    }),\n    order: translate(\"ra.sort.\".concat(sort.order)),\n    _: label\n  });\n  return React.createElement(Root, {\n    sx: sx,\n    className: clsx(className, classNames.root)\n  }, isXSmall ? React.createElement(Tooltip, {\n    title: buttonLabel\n  }, React.createElement(IconButton, {\n    \"aria-label\": buttonLabel,\n    color: \"primary\",\n    onClick: handleClick,\n    size: \"large\"\n  }, icon)) : React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"primary\",\n    onClick: handleClick,\n    startIcon: icon,\n    endIcon: React.createElement(ArrowDropDownIcon, null),\n    size: \"small\"\n  }, buttonLabel), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, fields.map(function (field) {\n    return React.createElement(MenuItem, {\n      onClick: handleChangeSort,\n      \"data-sort\": field,\n      key: field\n    }, translateLabel({\n      resource: resource,\n      source: field\n    }), ' ', translate(\"ra.sort.\".concat(sort.field === field ? inverseOrder(sort.order) : 'ASC')));\n  })));\n};\nvar defaultIcon = React.createElement(SortIcon, null);\nvar inverseOrder = function (sort) {\n  return sort === 'ASC' ? 'DESC' : 'ASC';\n};\nvar arePropsEqual = function (prevProps, nextProps) {\n  return shallowEqual(prevProps.fields, nextProps.fields);\n};\nvar PREFIX = 'RaSortButton';\nvar classNames = {\n  root: \"\".concat(PREFIX, \"-root\")\n};\nvar Root = styled('span', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {}, _a[\".\".concat(classNames.root)] = {}, _a['& .MuiButton-sizeSmall'] = {\n  // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\n  lineHeight: 1.5\n}, _a['& .MuiButton-endIcon'] = {\n  ml: 0\n}, _a));\nexport default memo(SortButton, arePropsEqual);","map":{"version":3,"names":["React","memo","clsx","Button","Menu","MenuItem","Tooltip","IconButton","useMediaQuery","styled","SortIcon","ArrowDropDownIcon","useListSortContext","useTranslate","useTranslateLabel","shallowEqual","SortButton","props","fields","_a","label","_b","icon","defaultIcon","sx","className","_c","resource","sort","setSort","translate","translateLabel","isXSmall","theme","breakpoints","down","_d","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleChangeSort","field","dataset","Error","order","inverseOrder","buttonLabel","source","concat","_","createElement","Root","classNames","root","title","color","onClick","size","startIcon","endIcon","id","keepMounted","open","Boolean","onClose","map","key","arePropsEqual","prevProps","nextProps","PREFIX","name","overridesResolver","styles","lineHeight","ml"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/button/SortButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, memo } from 'react';\nimport clsx from 'clsx';\nimport {\n    Button,\n    Menu,\n    MenuItem,\n    Tooltip,\n    IconButton,\n    useMediaQuery,\n    Theme,\n    SxProps,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport SortIcon from '@mui/icons-material/Sort';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport {\n    useListSortContext,\n    useTranslate,\n    useTranslateLabel,\n    shallowEqual,\n} from 'ra-core';\n\n/**\n * A button allowing to change the sort field and order.\n *\n * To be used inside a ListContext (e.g. inside a <List> or <ReferenceManyField>)\n *\n * Expects one 'fields' prop, containing an array of field strings that shall\n * be used and displayed for sorting.\n *\n * When users clicks on the <SortButton>, they see a dropdown list with the\n * proposed sorting fields. Once they click on one of these fields, the related\n * list refreshes, re-sorted.\n *\n * @example\n *\n * import * as React from 'react';\n * import { TopToolbar, SortButton, CreateButton, ExportButton } from 'react-admin';\n *\n * const ListActions = () => (\n *     <TopToolbar>\n *         <SortButton fields={['reference', 'sales', 'stock']} />\n *         <CreateButton />\n *         <ExportButton />\n *     </TopToolbar>\n * );\n */\nconst SortButton = (props: SortButtonProps) => {\n    const {\n        fields,\n        label = 'ra.sort.sort_by',\n        icon = defaultIcon,\n        sx,\n        className,\n    } = props;\n    const { resource, sort, setSort } = useListSortContext();\n    const translate = useTranslate();\n    const translateLabel = useTranslateLabel();\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleChangeSort = (\n        event: React.MouseEvent<HTMLLIElement, MouseEvent>\n    ) => {\n        const field = event.currentTarget.dataset.sort;\n        if (!field) {\n            throw new Error(\n                '<SortButton> MenuItems should have a data-sort attribute'\n            );\n        }\n        setSort({\n            field,\n            order: field === sort.field ? inverseOrder(sort.order) : 'ASC',\n        });\n        setAnchorEl(null);\n    };\n\n    const buttonLabel = translate(label, {\n        field: translateLabel({\n            resource,\n            source: sort.field,\n        }),\n        order: translate(`ra.sort.${sort.order}`),\n        _: label,\n    });\n\n    return (\n        <Root sx={sx} className={clsx(className, classNames.root)}>\n            {isXSmall ? (\n                <Tooltip title={buttonLabel}>\n                    <IconButton\n                        aria-label={buttonLabel}\n                        color=\"primary\"\n                        onClick={handleClick}\n                        size=\"large\"\n                    >\n                        {icon}\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Button\n                    aria-controls=\"simple-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"primary\"\n                    onClick={handleClick}\n                    startIcon={icon}\n                    endIcon={<ArrowDropDownIcon />}\n                    size=\"small\"\n                >\n                    {buttonLabel}\n                </Button>\n            )}\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {fields.map(field => (\n                    <MenuItem\n                        onClick={handleChangeSort}\n                        data-sort={field}\n                        key={field}\n                    >\n                        {translateLabel({\n                            resource,\n                            source: field,\n                        })}{' '}\n                        {translate(\n                            `ra.sort.${\n                                sort.field === field\n                                    ? inverseOrder(sort.order)\n                                    : 'ASC'\n                            }`\n                        )}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </Root>\n    );\n};\n\nconst defaultIcon = <SortIcon />;\n\nconst inverseOrder = (sort: string) => (sort === 'ASC' ? 'DESC' : 'ASC');\n\nconst arePropsEqual = (prevProps, nextProps) =>\n    shallowEqual(prevProps.fields, nextProps.fields);\n\nexport interface SortButtonProps {\n    className?: string;\n    fields: string[];\n    icon?: ReactElement;\n    label?: string;\n    resource?: string;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaSortButton';\n\nconst classNames = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled('span', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`.${classNames.root}`]: {},\n    '& .MuiButton-sizeSmall': {\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\n        lineHeight: 1.5,\n    },\n    '& .MuiButton-endIcon': { ml: 0 },\n});\n\nexport default memo(SortButton, arePropsEqual);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAuBC,IAAI,QAAQ,OAAO;AAC1C,OAAOC,IAAI,MAAM,MAAM;AACvB,SACIC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,OAAO,EACPC,UAAU,EACVC,aAAa,QAGV,eAAe;AACtB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SACIC,kBAAkB,EAClBC,YAAY,EACZC,iBAAiB,EACjBC,YAAY,QACT,SAAS;AAEhB;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAMC,UAAU,GAAG,SAAAA,CAACC,KAAsB;EAElC,IAAAC,MAAM,GAKND,KAAK,CAAAC,MALC;IACNC,EAAA,GAIAF,KAAK,CAAAG,KAJoB;IAAzBA,KAAK,GAAAD,EAAA,cAAG,iBAAiB,GAAAA,EAAA;IACzBE,EAAA,GAGAJ,KAAK,CAAAK,IAHa;IAAlBA,IAAI,GAAAD,EAAA,cAAGE,WAAW,GAAAF,EAAA;IAClBG,EAAE,GAEFP,KAAK,CAAAO,EAFH;IACFC,SAAS,GACTR,KAAK,CAAAQ,SADI;EAEP,IAAAC,EAAA,GAA8Bd,kBAAkB,EAAE;IAAhDe,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IAAEC,IAAI,GAAAF,EAAA,CAAAE,IAAA;IAAEC,OAAO,GAAAH,EAAA,CAAAG,OAAyB;EACxD,IAAMC,SAAS,GAAGjB,YAAY,EAAE;EAChC,IAAMkB,cAAc,GAAGjB,iBAAiB,EAAE;EAC1C,IAAMkB,QAAQ,GAAGxB,aAAa,CAAC,UAACyB,KAAY;IACxC,OAAAA,KAAK,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAA5B,CAA4B,CAC/B;EACK,IAAAC,EAAA,GAA0BpC,KAAK,CAACqC,QAAQ,CAAqB,IAAI,CAAC;IAAjEC,QAAQ,GAAAF,EAAA;IAAEG,WAAW,GAAAH,EAAA,GAA4C;EACxE,IAAMI,WAAW,GAAG,SAAAA,CAACC,KAA0C;IAC3DF,WAAW,CAACE,KAAK,CAACC,aAAa,CAAC;EACpC,CAAC;EAED,IAAMC,WAAW,GAAG,SAAAA,CAAA;IAChBJ,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAMK,gBAAgB,GAAG,SAAAA,CACrBH,KAAkD;IAElD,IAAMI,KAAK,GAAGJ,KAAK,CAACC,aAAa,CAACI,OAAO,CAAClB,IAAI;IAC9C,IAAI,CAACiB,KAAK,EAAE;MACR,MAAM,IAAIE,KAAK,CACX,0DAA0D,CAC7D;;IAELlB,OAAO,CAAC;MACJgB,KAAK,EAAAA,KAAA;MACLG,KAAK,EAAEH,KAAK,KAAKjB,IAAI,CAACiB,KAAK,GAAGI,YAAY,CAACrB,IAAI,CAACoB,KAAK,CAAC,GAAG;KAC5D,CAAC;IACFT,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAMW,WAAW,GAAGpB,SAAS,CAACV,KAAK,EAAE;IACjCyB,KAAK,EAAEd,cAAc,CAAC;MAClBJ,QAAQ,EAAAA,QAAA;MACRwB,MAAM,EAAEvB,IAAI,CAACiB;KAChB,CAAC;IACFG,KAAK,EAAElB,SAAS,CAAC,WAAAsB,MAAA,CAAWxB,IAAI,CAACoB,KAAK,CAAE,CAAC;IACzCK,CAAC,EAAEjC;GACN,CAAC;EAEF,OACIpB,KAAA,CAAAsD,aAAA,CAACC,IAAI;IAAC/B,EAAE,EAAEA,EAAE;IAAEC,SAAS,EAAEvB,IAAI,CAACuB,SAAS,EAAE+B,UAAU,CAACC,IAAI;EAAC,GACpDzB,QAAQ,GACLhC,KAAA,CAAAsD,aAAA,CAAChD,OAAO;IAACoD,KAAK,EAAER;EAAW,GACvBlD,KAAA,CAAAsD,aAAA,CAAC/C,UAAU;IAAA,cACK2C,WAAW;IACvBS,KAAK,EAAC,SAAS;IACfC,OAAO,EAAEpB,WAAW;IACpBqB,IAAI,EAAC;EAAO,GAEXvC,IAAI,CACI,CACP,GAEVtB,KAAA,CAAAsD,aAAA,CAACnD,MAAM;IAAA,iBACW,aAAa;IAAA,iBACb,MAAM;IACpBwD,KAAK,EAAC,SAAS;IACfC,OAAO,EAAEpB,WAAW;IACpBsB,SAAS,EAAExC,IAAI;IACfyC,OAAO,EAAE/D,KAAA,CAAAsD,aAAA,CAAC3C,iBAAiB,OAAG;IAC9BkD,IAAI,EAAC;EAAO,GAEXX,WAAW,CAEnB,EACDlD,KAAA,CAAAsD,aAAA,CAAClD,IAAI;IACD4D,EAAE,EAAC,aAAa;IAChB1B,QAAQ,EAAEA,QAAQ;IAClB2B,WAAW;IACXC,IAAI,EAAEC,OAAO,CAAC7B,QAAQ,CAAC;IACvB8B,OAAO,EAAEzB;EAAW,GAEnBzB,MAAM,CAACmD,GAAG,CAAC,UAAAxB,KAAK;IAAI,OACjB7C,KAAA,CAAAsD,aAAA,CAACjD,QAAQ;MACLuD,OAAO,EAAEhB,gBAAgB;MAAA,aACdC,KAAK;MAChByB,GAAG,EAAEzB;IAAK,GAETd,cAAc,CAAC;MACZJ,QAAQ,EAAAA,QAAA;MACRwB,MAAM,EAAEN;KACX,CAAC,EAAE,GAAG,EACNf,SAAS,CACN,WAAAsB,MAAA,CACIxB,IAAI,CAACiB,KAAK,KAAKA,KAAK,GACdI,YAAY,CAACrB,IAAI,CAACoB,KAAK,CAAC,GACxB,KAAK,CACb,CACL,CACM;EAjBM,CAkBpB,CAAC,CACC,CACJ;AAEf,CAAC;AAED,IAAMzB,WAAW,GAAGvB,KAAA,CAAAsD,aAAA,CAAC5C,QAAQ,OAAG;AAEhC,IAAMuC,YAAY,GAAG,SAAAA,CAACrB,IAAY;EAAK,OAACA,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK;AAAhC,CAAiC;AAExE,IAAM2C,aAAa,GAAG,SAAAA,CAACC,SAAS,EAAEC,SAAS;EACvC,OAAA1D,YAAY,CAACyD,SAAS,CAACtD,MAAM,EAAEuD,SAAS,CAACvD,MAAM,CAAC;AAAhD,CAAgD;AAWpD,IAAMwD,MAAM,GAAG,cAAc;AAE7B,IAAMlB,UAAU,GAAG;EACfC,IAAI,EAAE,GAAAL,MAAA,CAAGsB,MAAM;CAClB;AAED,IAAMnB,IAAI,GAAG9C,MAAM,CAAC,MAAM,EAAE;EACxBkE,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,SAAAA,CAAC3D,KAAK,EAAE4D,MAAM;IAAK,OAAAA,MAAM,CAACpB,IAAI;EAAX;CACzC,CAAC,EAAAtC,EAAA,OACEA,EAAA,CAAC,IAAAiC,MAAA,CAAII,UAAU,CAACC,IAAI,CAAE,IAAG,EAAE,EAC3BtC,EAAA,0BAAwB,GAAE;EACtB;EACA2D,UAAU,EAAE;CACf,EACD3D,EAAA,wBAAsB,GAAE;EAAE4D,EAAE,EAAE;AAAC,CAAE,E,IACnC;AAEF,eAAe9E,IAAI,CAACe,UAAU,EAAEuD,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}