{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children } from 'react';\nimport { Toolbar as MuiToolbar, useMediaQuery } from '@mui/material';\nimport clsx from 'clsx';\nimport { SaveButton, DeleteButton } from '../button';\n/**\n * The Toolbar displayed at the bottom of forms.\n *\n * @example Always enable the <SaveButton />\n *\n * import * as React from 'react';\n * import {\n *     Create,\n *     DateInput,\n *     TextInput,\n *     SimpleForm,\n *     Toolbar,\n *     SaveButton,\n *     required,\n * } from 'react-admin';\n *\n * const now = new Date();\n * const defaultSort = { field: 'title', order: 'ASC' };\n *\n * const MyToolbar = props => (\n *     <Toolbar {...props} >\n *         <SaveButton alwaysEnable />\n *     </Toolbar>\n * );\n *\n * const CommentCreate = () => (\n *     <Create>\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\n *             <TextInput\n *                 source=\"author.name\"\n *                 fullWidth\n *             />\n *             <DateInput source=\"created_at\" defaultValue={now} />\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\n *\n */\nexport var Toolbar = function (props) {\n  var _a;\n  var children = props.children,\n    className = props.className,\n    resource = props.resource,\n    rest = __rest(props, [\"children\", \"className\", \"resource\"]);\n  var isXs = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return React.createElement(StyledToolbar, __assign({\n    className: clsx((_a = {}, _a[ToolbarClasses.mobileToolbar] = isXs, _a[ToolbarClasses.desktopToolbar] = !isXs, _a), className),\n    role: \"toolbar\"\n  }, rest), Children.count(children) === 0 ? React.createElement(\"div\", {\n    className: ToolbarClasses.defaultToolbar\n  }, React.createElement(SaveButton, null), React.createElement(DeleteButton, {\n    resource: resource\n  })) : children);\n};\nvar PREFIX = 'RaToolbar';\nexport var ToolbarClasses = {\n  desktopToolbar: \"\".concat(PREFIX, \"-desktopToolbar\"),\n  mobileToolbar: \"\".concat(PREFIX, \"-mobileToolbar\"),\n  defaultToolbar: \"\".concat(PREFIX, \"-defaultToolbar\")\n};\nvar StyledToolbar = styled(MuiToolbar, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[900]\n  }, _b[\"&.\".concat(ToolbarClasses.desktopToolbar)] = {}, _b[\"&.\".concat(ToolbarClasses.mobileToolbar)] = {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: '16px',\n    width: '100%',\n    boxSizing: 'border-box',\n    flexShrink: 0,\n    zIndex: 2\n  }, _b[\"& .\".concat(ToolbarClasses.defaultToolbar)] = {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between'\n  }, _b;\n});","map":{"version":3,"names":["React","styled","Children","Toolbar","MuiToolbar","useMediaQuery","clsx","SaveButton","DeleteButton","props","children","className","resource","rest","__rest","isXs","theme","breakpoints","down","createElement","StyledToolbar","__assign","_a","ToolbarClasses","mobileToolbar","desktopToolbar","role","count","defaultToolbar","PREFIX","concat","name","overridesResolver","styles","root","_b","backgroundColor","palette","mode","grey","position","bottom","left","right","padding","width","boxSizing","flexShrink","zIndex","flex","display","justifyContent"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/form/Toolbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, ReactNode } from 'react';\nimport {\n    Toolbar as MuiToolbar,\n    ToolbarProps as MuiToolbarProps,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport clsx from 'clsx';\n\nimport { SaveButton, DeleteButton } from '../button';\n\n/**\n * The Toolbar displayed at the bottom of forms.\n *\n * @example Always enable the <SaveButton />\n *\n * import * as React from 'react';\n * import {\n *     Create,\n *     DateInput,\n *     TextInput,\n *     SimpleForm,\n *     Toolbar,\n *     SaveButton,\n *     required,\n * } from 'react-admin';\n *\n * const now = new Date();\n * const defaultSort = { field: 'title', order: 'ASC' };\n *\n * const MyToolbar = props => (\n *     <Toolbar {...props} >\n *         <SaveButton alwaysEnable />\n *     </Toolbar>\n * );\n *\n * const CommentCreate = () => (\n *     <Create>\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\n *             <TextInput\n *                 source=\"author.name\"\n *                 fullWidth\n *             />\n *             <DateInput source=\"created_at\" defaultValue={now} />\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\n *\n */\nexport const Toolbar = (props: ToolbarProps) => {\n    const { children, className, resource, ...rest } = props;\n\n    const isXs = useMediaQuery<Theme>(theme => theme.breakpoints.down('sm'));\n\n    return (\n        <StyledToolbar\n            className={clsx(\n                {\n                    [ToolbarClasses.mobileToolbar]: isXs,\n                    [ToolbarClasses.desktopToolbar]: !isXs,\n                },\n                className\n            )}\n            role=\"toolbar\"\n            {...rest}\n        >\n            {Children.count(children) === 0 ? (\n                <div className={ToolbarClasses.defaultToolbar}>\n                    <SaveButton />\n                    <DeleteButton resource={resource} />\n                </div>\n            ) : (\n                children\n            )}\n        </StyledToolbar>\n    );\n};\n\nexport interface ToolbarProps extends Omit<MuiToolbarProps, 'classes'> {\n    children?: ReactNode;\n    className?: string;\n    resource?: string;\n}\n\nconst PREFIX = 'RaToolbar';\n\nexport const ToolbarClasses = {\n    desktopToolbar: `${PREFIX}-desktopToolbar`,\n    mobileToolbar: `${PREFIX}-mobileToolbar`,\n    defaultToolbar: `${PREFIX}-defaultToolbar`,\n};\n\nconst StyledToolbar = styled(MuiToolbar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    backgroundColor:\n        theme.palette.mode === 'light'\n            ? theme.palette.grey[100]\n            : theme.palette.grey[900],\n\n    [`&.${ToolbarClasses.desktopToolbar}`]: {},\n\n    [`&.${ToolbarClasses.mobileToolbar}`]: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        padding: '16px',\n        width: '100%',\n        boxSizing: 'border-box',\n        flexShrink: 0,\n        zIndex: 2,\n    },\n\n    [`& .${ToolbarClasses.defaultToolbar}`]: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}