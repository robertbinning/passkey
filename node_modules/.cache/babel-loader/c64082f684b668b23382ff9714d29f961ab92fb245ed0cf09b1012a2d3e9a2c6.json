{"ast":null,"code":"var _jsxFileName = \"/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Register from './pages/register/Register';\nimport Login from './pages/login/Login';\nimport BotsList from './pages/botsList/botsList'; // Ensure the path and case are correct\nimport { AuthProvider, useAuth } from './AuthContext'; // Ensure the path and case are correct\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  return isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 40\n  }, this);\n};\n_s(PrivateRoute, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nconst App = () => /*#__PURE__*/_jsxDEV(AuthProvider, {\n  children: /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/botsList\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          element: /*#__PURE__*/_jsxDEV(BotsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 5\n}, this);\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navigate","Register","Login","BotsList","AuthProvider","useAuth","jsxDEV","_jsxDEV","PrivateRoute","element","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","children","path","_c2","$RefreshReg$"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Register from './pages/register/Register';\nimport Login from './pages/login/Login';\nimport BotsList from './pages/botsList/botsList'; // Ensure the path and case are correct\nimport { AuthProvider, useAuth } from './AuthContext'; // Ensure the path and case are correct\nimport './App.css';\n\nconst PrivateRoute = ({ element }) => {\n    const { isAuthenticated } = useAuth();\n    return isAuthenticated ? element : <Navigate to=\"/login\" />;\n};\n\nconst App = () => (\n    <AuthProvider>\n        <Router>\n            <Routes>\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/register\" element={<Register />} />\n                <Route path=\"/botsList\" element={<PrivateRoute element={<BotsList />} />} />\n                <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n            </Routes>\n        </Router>\n    </AuthProvider>\n);\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,QAAQ,MAAM,2BAA2B,CAAC,CAAC;AAClD,SAASC,YAAY,EAAEC,OAAO,QAAQ,eAAe,CAAC,CAAC;AACvD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAgB,CAAC,GAAGN,OAAO,CAAC,CAAC;EACrC,OAAOM,eAAe,GAAGF,OAAO,gBAAGF,OAAA,CAACP,QAAQ;IAACY,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACN,EAAA,CAHIF,YAAY;EAAA,QACcH,OAAO;AAAA;AAAAY,EAAA,GADjCT,YAAY;AAKlB,MAAMU,GAAG,GAAGA,CAAA,kBACRX,OAAA,CAACH,YAAY;EAAAe,QAAA,eACTZ,OAAA,CAACV,MAAM;IAAAsB,QAAA,eACHZ,OAAA,CAACR,MAAM;MAAAoB,QAAA,gBACHZ,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,QAAQ;QAACX,OAAO,eAAEF,OAAA,CAACL,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CT,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,WAAW;QAACX,OAAO,eAAEF,OAAA,CAACN,QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDT,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,WAAW;QAACX,OAAO,eAAEF,OAAA,CAACC,YAAY;UAACC,OAAO,eAAEF,OAAA,CAACJ,QAAQ;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ET,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,GAAG;QAACX,OAAO,eAAEF,OAAA,CAACP,QAAQ;UAACY,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACjB;AAACK,GAAA,GAXIH,GAAG;AAaT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}