{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination } from '@mui/material';\nimport { useTranslate } from 'ra-core';\nexport var PaginationActions = memo(function (props) {\n  var page = props.page,\n    rowsPerPage = props.rowsPerPage,\n    count = props.count,\n    onPageChange = props.onPageChange,\n    _a = props.size,\n    size = _a === void 0 ? 'small' : _a,\n    className = props.className,\n    rest = __rest(props, [\"page\", \"rowsPerPage\", \"count\", \"onPageChange\", \"size\", \"className\"]);\n  var translate = useTranslate();\n  var nbPages = Math.ceil(count / rowsPerPage) || 1;\n  if (nbPages === 1) {\n    return React.createElement(Root, {\n      className: className\n    });\n  }\n  var getItemAriaLabel = function (type, page, selected) {\n    if (type === 'page') {\n      return selected ? translate('ra.navigation.current_page', {\n        page: page,\n        _: \"page \".concat(page)\n      }) : translate('ra.navigation.page', {\n        page: page,\n        _: \"Go to page \".concat(page)\n      });\n    }\n    return translate(\"ra.navigation.\".concat(type), {\n      _: \"Go to \".concat(type, \" page\")\n    });\n  };\n  return React.createElement(Root, {\n    className: className\n  }, React.createElement(Pagination, __assign({\n    size: size,\n    count: nbPages,\n    // <TablePagination>, the parent, uses 0-based pagination\n    // while <Pagination> uses 1-based pagination\n    page: page + 1,\n    onChange: function (e, page) {\n      return onPageChange(e, page - 1);\n    }\n  }, sanitizeRestProps(rest), {\n    getItemAriaLabel: getItemAriaLabel\n  })));\n});\nvar PREFIX = 'RaPaginationActions';\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function () {\n  return {\n    flexShrink: 0,\n    ml: 4\n  };\n});\nvar sanitizeRestProps = function (_a) {\n  var nextIconButtonProps = _a.nextIconButtonProps,\n    backIconButtonProps = _a.backIconButtonProps,\n    slotProps = _a.slotProps,\n    rest = __rest(_a, [\"nextIconButtonProps\", \"backIconButtonProps\", \"slotProps\"]);\n  return rest;\n};","map":{"version":3,"names":["React","memo","styled","Pagination","useTranslate","PaginationActions","props","page","rowsPerPage","count","onPageChange","_a","size","className","rest","__rest","translate","nbPages","Math","ceil","createElement","Root","getItemAriaLabel","type","selected","_","concat","__assign","onChange","e","sanitizeRestProps","PREFIX","name","overridesResolver","styles","root","flexShrink","ml","nextIconButtonProps","backIconButtonProps","slotProps"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/pagination/PaginationActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo, FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination, PaginationProps } from '@mui/material';\nimport { useTranslate } from 'ra-core';\n\nexport const PaginationActions: FC<PaginationActionsProps> = memo(props => {\n    const {\n        page,\n        rowsPerPage,\n        count,\n        onPageChange,\n        size = 'small',\n        className,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n\n    const nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n    if (nbPages === 1) {\n        return <Root className={className} />;\n    }\n\n    const getItemAriaLabel = (\n        type: 'page' | 'first' | 'last' | 'next' | 'previous',\n        page: number,\n        selected: boolean\n    ) => {\n        if (type === 'page') {\n            return selected\n                ? translate('ra.navigation.current_page', {\n                      page,\n                      _: `page ${page}`,\n                  })\n                : translate('ra.navigation.page', {\n                      page,\n                      _: `Go to page ${page}`,\n                  });\n        }\n        return translate(`ra.navigation.${type}`, { _: `Go to ${type} page` });\n    };\n\n    return (\n        <Root className={className}>\n            <Pagination\n                size={size}\n                count={nbPages}\n                // <TablePagination>, the parent, uses 0-based pagination\n                // while <Pagination> uses 1-based pagination\n                page={page + 1}\n                onChange={(e: any, page) => onPageChange(e, page - 1)}\n                {...sanitizeRestProps(rest)}\n                getItemAriaLabel={getItemAriaLabel}\n            />\n        </Root>\n    );\n});\n\nexport interface PaginationActionsProps extends PaginationProps {\n    page: number;\n    rowsPerPage: number;\n    count: number;\n    onPageChange: (event: MouseEvent, page: number) => void;\n}\n\nconst PREFIX = 'RaPaginationActions';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(() => ({\n    flexShrink: 0,\n    ml: 4,\n}));\n\nconst sanitizeRestProps = ({\n    nextIconButtonProps,\n    backIconButtonProps,\n    slotProps,\n    ...rest\n}: any) => rest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}