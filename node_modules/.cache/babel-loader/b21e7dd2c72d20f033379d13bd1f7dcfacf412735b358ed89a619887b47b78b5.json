{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useFormState } from 'react-hook-form';\nimport { useNotify } from '../notification';\n/**\n * This hook display an error message on submit in Form and SaveButton.\n *\n * We can't do the form validity check in the form submit handler\n * as the form state may not have been updated yet when onSubmit validation mode is enabled\n * or when the form hasn't been touched at all.\n */\nexport var useNotifyIsFormInvalid = function (control, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n  var _a = useFormState(control ? {\n      control: control\n    } : undefined),\n    submitCount = _a.submitCount,\n    errors = _a.errors;\n  var submitCountRef = useRef(submitCount);\n  var notify = useNotify();\n  useEffect(function () {\n    var _a, _b;\n    // Checking the submit count allows us to only display the notification after users\n    // tried to submit\n    if (submitCount > submitCountRef.current && enabled) {\n      submitCountRef.current = submitCount;\n      if (Object.keys(errors).length > 0) {\n        var serverError = typeof ((_b = (_a = errors.root) === null || _a === void 0 ? void 0 : _a.serverError) === null || _b === void 0 ? void 0 : _b.message) === 'string' ? errors.root.serverError.message : undefined;\n        notify(serverError || 'ra.message.invalid_form', {\n          type: 'error'\n        });\n      }\n    }\n  }, [errors, submitCount, notify, enabled]);\n};","map":{"version":3,"names":["useEffect","useRef","useFormState","useNotify","useNotifyIsFormInvalid","control","enabled","_a","undefined","submitCount","errors","submitCountRef","notify","current","Object","keys","length","serverError","_b","root","message","type"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/form/useNotifyIsFormInvalid.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useFormState, Control } from 'react-hook-form';\nimport { useNotify } from '../notification';\n\n/**\n * This hook display an error message on submit in Form and SaveButton.\n *\n * We can't do the form validity check in the form submit handler\n * as the form state may not have been updated yet when onSubmit validation mode is enabled\n * or when the form hasn't been touched at all.\n */\nexport const useNotifyIsFormInvalid = (\n    control?: Control,\n    enabled: boolean = true\n) => {\n    const { submitCount, errors } = useFormState(\n        control ? { control } : undefined\n    );\n    const submitCountRef = useRef(submitCount);\n    const notify = useNotify();\n\n    useEffect(() => {\n        // Checking the submit count allows us to only display the notification after users\n        // tried to submit\n        if (submitCount > submitCountRef.current && enabled) {\n            submitCountRef.current = submitCount;\n\n            if (Object.keys(errors).length > 0) {\n                const serverError =\n                    typeof errors.root?.serverError?.message === 'string'\n                        ? errors.root.serverError.message\n                        : undefined;\n                notify(serverError || 'ra.message.invalid_form', {\n                    type: 'error',\n                });\n            }\n        }\n    }, [errors, submitCount, notify, enabled]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAiB,iBAAiB;AACvD,SAASC,SAAS,QAAQ,iBAAiB;AAE3C;;;;;;;AAOA,OAAO,IAAMC,sBAAsB,GAAG,SAAAA,CAClCC,OAAiB,EACjBC,OAAuB;EAAvB,IAAAA,OAAA;IAAAA,OAAA,OAAuB;EAAA;EAEjB,IAAAC,EAAA,GAA0BL,YAAY,CACxCG,OAAO,GAAG;MAAEA,OAAO,EAAAA;IAAA,CAAE,GAAGG,SAAS,CACpC;IAFOC,WAAW,GAAAF,EAAA,CAAAE,WAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAE1B;EACD,IAAMC,cAAc,GAAGV,MAAM,CAACQ,WAAW,CAAC;EAC1C,IAAMG,MAAM,GAAGT,SAAS,EAAE;EAE1BH,SAAS,CAAC;;IACN;IACA;IACA,IAAIS,WAAW,GAAGE,cAAc,CAACE,OAAO,IAAIP,OAAO,EAAE;MACjDK,cAAc,CAACE,OAAO,GAAGJ,WAAW;MAEpC,IAAIK,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;QAChC,IAAMC,WAAW,GACb,QAAO,CAAAC,EAAA,IAAAX,EAAA,GAAAG,MAAM,CAACS,IAAI,cAAAZ,EAAA,uBAAAA,EAAA,CAAEU,WAAW,cAAAC,EAAA,uBAAAA,EAAA,CAAEE,OAAO,MAAK,QAAQ,GAC/CV,MAAM,CAACS,IAAI,CAACF,WAAW,CAACG,OAAO,GAC/BZ,SAAS;QACnBI,MAAM,CAACK,WAAW,IAAI,yBAAyB,EAAE;UAC7CI,IAAI,EAAE;SACT,CAAC;;;EAGd,CAAC,EAAE,CAACX,MAAM,EAAED,WAAW,EAAEG,MAAM,EAAEN,OAAO,CAAC,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}