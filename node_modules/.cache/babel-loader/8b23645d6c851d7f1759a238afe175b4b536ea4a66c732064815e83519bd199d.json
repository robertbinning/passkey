{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { alpha } from '@mui/material/styles';\nimport { useUpdateMany, useRefresh, useNotify, useUnselectAll, useResourceContext, useListContext } from 'ra-core';\nimport { Button } from './Button';\nexport var BulkUpdateWithUndoButton = function (props) {\n  var selectedIds = useListContext().selectedIds;\n  var notify = useNotify();\n  var resource = useResourceContext(props);\n  var unselectAll = useUnselectAll(resource);\n  var refresh = useRefresh();\n  var data = props.data,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.action.update' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    onClick = props.onClick,\n    _c = props.onSuccess,\n    onSuccess = _c === void 0 ? function () {\n      notify('ra.notification.updated', {\n        type: 'info',\n        messageArgs: {\n          smart_count: selectedIds.length\n        },\n        undoable: true\n      });\n      unselectAll();\n    } : _c,\n    _d = props.onError,\n    onError = _d === void 0 ? function (error) {\n      notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n        type: 'error',\n        messageArgs: {\n          _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n        }\n      });\n      refresh();\n    } : _d,\n    _e = props.mutationOptions,\n    mutationOptions = _e === void 0 ? {} : _e,\n    rest = __rest(props, [\"data\", \"label\", \"icon\", \"onClick\", \"onSuccess\", \"onError\", \"mutationOptions\"]);\n  var mutationMeta = mutationOptions.meta,\n    otherMutationOptions = __rest(mutationOptions, [\"meta\"]);\n  var _f = useUpdateMany(resource, {\n      ids: selectedIds,\n      data: data,\n      meta: mutationMeta\n    }, __assign({\n      onSuccess: onSuccess,\n      onError: onError,\n      mutationMode: 'undoable'\n    }, otherMutationOptions)),\n    updateMany = _f[0],\n    isPending = _f[1].isPending;\n  var handleClick = function (e) {\n    updateMany();\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  };\n  return React.createElement(StyledButton, __assign({\n    onClick: handleClick,\n    label: label,\n    disabled: isPending\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(ActionUpdate, null);\nvar sanitizeRestProps = function (_a) {\n  var label = _a.label,\n    onSuccess = _a.onSuccess,\n    onError = _a.onError,\n    rest = __rest(_a, [\"label\", \"onSuccess\", \"onError\"]);\n  return rest;\n};\nvar PREFIX = 'RaBulkUpdateWithUndoButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"names":["React","styled","ActionUpdate","alpha","useUpdateMany","useRefresh","useNotify","useUnselectAll","useResourceContext","useListContext","Button","BulkUpdateWithUndoButton","props","selectedIds","notify","resource","unselectAll","refresh","data","_a","label","_b","icon","defaultIcon","onClick","_c","onSuccess","type","messageArgs","smart_count","length","undoable","_d","onError","error","message","_","undefined","_e","mutationOptions","rest","__rest","mutationMeta","meta","otherMutationOptions","_f","ids","__assign","mutationMode","updateMany","isPending","handleClick","e","createElement","StyledButton","disabled","sanitizeRestProps","PREFIX","name","overridesResolver","styles","root","theme","color","palette","primary","main","backgroundColor"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/button/BulkUpdateWithUndoButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement } from 'react';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { alpha } from '@mui/material/styles';\nimport {\n    useUpdateMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    useResourceContext,\n    useListContext,\n    RaRecord,\n    UpdateManyParams,\n} from 'ra-core';\nimport { UseMutationOptions } from '@tanstack/react-query';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const BulkUpdateWithUndoButton = (\n    props: BulkUpdateWithUndoButtonProps\n) => {\n    const { selectedIds } = useListContext();\n\n    const notify = useNotify();\n    const resource = useResourceContext(props);\n    const unselectAll = useUnselectAll(resource);\n    const refresh = useRefresh();\n\n    const {\n        data,\n        label = 'ra.action.update',\n        icon = defaultIcon,\n        onClick,\n        onSuccess = () => {\n            notify('ra.notification.updated', {\n                type: 'info',\n                messageArgs: { smart_count: selectedIds.length },\n                undoable: true,\n            });\n            unselectAll();\n        },\n        onError = (error: Error | string) => {\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                {\n                    type: 'error',\n                    messageArgs: {\n                        _:\n                            typeof error === 'string'\n                                ? error\n                                : error && error.message\n                                  ? error.message\n                                  : undefined,\n                    },\n                }\n            );\n            refresh();\n        },\n        mutationOptions = {},\n        ...rest\n    } = props;\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\n\n    const [updateMany, { isPending }] = useUpdateMany(\n        resource,\n        { ids: selectedIds, data, meta: mutationMeta },\n        {\n            onSuccess,\n            onError,\n            mutationMode: 'undoable',\n            ...otherMutationOptions,\n        }\n    );\n\n    const handleClick = e => {\n        updateMany();\n        if (typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n\n    return (\n        <StyledButton\n            onClick={handleClick}\n            label={label}\n            disabled={isPending}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ActionUpdate />;\n\nconst sanitizeRestProps = ({\n    label,\n    onSuccess,\n    onError,\n    ...rest\n}: Omit<BulkUpdateWithUndoButtonProps, 'resource' | 'icon' | 'data'>) => rest;\n\nexport interface BulkUpdateWithUndoButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown,\n> extends ButtonProps {\n    icon?: ReactElement;\n    data: any;\n    onSuccess?: () => void;\n    onError?: (error: any) => void;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        UpdateManyParams<RecordType>\n    > & { meta?: any };\n}\n\nconst PREFIX = 'RaBulkUpdateWithUndoButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.primary.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}