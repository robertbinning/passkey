{"ast":null,"code":"import * as React from 'react';\nimport lodashGet from 'lodash/get';\nimport { I18nContextProvider } from './I18nContextProvider';\nexport var TestTranslationProvider = function (_a) {\n  var translate = _a.translate,\n    messages = _a.messages,\n    children = _a.children;\n  return React.createElement(I18nContextProvider, {\n    value: testI18nProvider({\n      translate: translate,\n      messages: messages\n    })\n  }, children);\n};\nexport var testI18nProvider = function (_a) {\n  var _b = _a === void 0 ? {} : _a,\n    translate = _b.translate,\n    messages = _b.messages;\n  return {\n    translate: messages ? function (key, options) {\n      var message = lodashGet(messages, key);\n      return message ? typeof message === 'function' ? message(options) : message : (options === null || options === void 0 ? void 0 : options._) || key;\n    } : translate || function (key) {\n      return key;\n    },\n    changeLocale: function () {\n      return Promise.resolve();\n    },\n    getLocale: function () {\n      return 'en';\n    }\n  };\n};","map":{"version":3,"names":["React","lodashGet","I18nContextProvider","TestTranslationProvider","_a","translate","messages","children","createElement","value","testI18nProvider","_b","key","options","message","_","changeLocale","Promise","resolve","getLocale"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/i18n/TestTranslationProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport lodashGet from 'lodash/get';\n\nimport { I18nContextProvider } from './I18nContextProvider';\nimport { I18nProvider } from '../types';\n\nexport const TestTranslationProvider = ({\n    translate,\n    messages,\n    children,\n}: any) => (\n    <I18nContextProvider value={testI18nProvider({ translate, messages })}>\n        {children}\n    </I18nContextProvider>\n);\n\nexport interface IMessages\n    extends Record<string, string | ((options?: any) => string) | IMessages> {}\n\nexport const testI18nProvider = ({\n    translate,\n    messages,\n}: {\n    translate?: I18nProvider['translate'];\n    messages?: IMessages;\n} = {}): I18nProvider => {\n    return {\n        translate: messages\n            ? (key, options) => {\n                  const message = lodashGet(messages, key);\n                  return message\n                      ? typeof message === 'function'\n                          ? message(options)\n                          : message\n                      : options?._ || key;\n              }\n            : translate || (key => key),\n        changeLocale: () => Promise.resolve(),\n        getLocale: () => 'en',\n    };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,mBAAmB,QAAQ,uBAAuB;AAG3D,OAAO,IAAMC,uBAAuB,GAAG,SAAAA,CAACC,EAIlC;MAHFC,SAAS,GAAAD,EAAA,CAAAC,SAAA;IACTC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;EACD,OACPP,KAAA,CAAAQ,aAAA,CAACN,mBAAmB;IAACO,KAAK,EAAEC,gBAAgB,CAAC;MAAEL,SAAS,EAAAA,SAAA;MAAEC,QAAQ,EAAAA;IAAA,CAAE;EAAC,GAChEC,QAAQ,CACS;AAHf,CAIV;AAKD,OAAO,IAAMG,gBAAgB,GAAG,SAAAA,CAACN,EAM3B;MAN2BO,EAAA,GAAAP,EAAA,cAM7B,EAAE,GAAAA,EAAA;IALFC,SAAS,GAAAM,EAAA,CAAAN,SAAA;IACTC,QAAQ,GAAAK,EAAA,CAAAL,QAAA;EAKR,OAAO;IACHD,SAAS,EAAEC,QAAQ,GACb,UAACM,GAAG,EAAEC,OAAO;MACT,IAAMC,OAAO,GAAGb,SAAS,CAACK,QAAQ,EAAEM,GAAG,CAAC;MACxC,OAAOE,OAAO,GACR,OAAOA,OAAO,KAAK,UAAU,GACzBA,OAAO,CAACD,OAAO,CAAC,GAChBC,OAAO,GACX,CAAAD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,CAAC,KAAIH,GAAG;IAC3B,CAAC,GACDP,SAAS,IAAK,UAAAO,GAAG;MAAI,OAAAA,GAAG;IAAH,CAAI;IAC/BI,YAAY,EAAE,SAAAA,CAAA;MAAM,OAAAC,OAAO,CAACC,OAAO,EAAE;IAAjB,CAAiB;IACrCC,SAAS,EAAE,SAAAA,CAAA;MAAM,WAAI;IAAJ;GACpB;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}