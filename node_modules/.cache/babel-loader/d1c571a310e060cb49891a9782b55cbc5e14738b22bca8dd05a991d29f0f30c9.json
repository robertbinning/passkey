{"ast":null,"code":"import * as React from 'react';\nimport { useMemo } from 'react';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { AdminRouter } from '../routing';\nimport { AuthContext, convertLegacyAuthProvider } from '../auth';\nimport { DataProviderContext, convertLegacyDataProvider, defaultDataProvider } from '../dataProvider';\nimport { StoreContextProvider, memoryStore } from '../store';\nimport { PreferencesEditorContextProvider } from '../preferences/PreferencesEditorContextProvider';\nimport { I18nContextProvider } from '../i18n';\nimport { ResourceDefinitionContextProvider } from './ResourceDefinitionContext';\nimport { NotificationContextProvider } from '../notification';\nvar defaultStore = memoryStore();\nexport var CoreAdminContext = function (props) {\n  var authProvider = props.authProvider,\n    basename = props.basename,\n    _a = props.dataProvider,\n    dataProvider = _a === void 0 ? defaultDataProvider : _a,\n    i18nProvider = props.i18nProvider,\n    _b = props.store,\n    store = _b === void 0 ? defaultStore : _b,\n    children = props.children,\n    history = props.history,\n    queryClient = props.queryClient;\n  if (!dataProvider) {\n    throw new Error(\"Missing dataProvider prop.\\nReact-admin requires a valid dataProvider function to work.\");\n  }\n  var finalQueryClient = useMemo(function () {\n    return queryClient || new QueryClient();\n  }, [queryClient]);\n  var finalAuthProvider = useMemo(function () {\n    return authProvider instanceof Function ? convertLegacyAuthProvider(authProvider) : authProvider;\n  }, [authProvider]);\n  var finalDataProvider = useMemo(function () {\n    return dataProvider instanceof Function ? convertLegacyDataProvider(dataProvider) : dataProvider;\n  }, [dataProvider]);\n  return React.createElement(AuthContext.Provider, {\n    value: finalAuthProvider\n  }, React.createElement(DataProviderContext.Provider, {\n    value: finalDataProvider\n  }, React.createElement(StoreContextProvider, {\n    value: store\n  }, React.createElement(PreferencesEditorContextProvider, null, React.createElement(QueryClientProvider, {\n    client: finalQueryClient\n  }, React.createElement(AdminRouter, {\n    history: history,\n    basename: basename\n  }, React.createElement(I18nContextProvider, {\n    value: i18nProvider\n  }, React.createElement(NotificationContextProvider, null, React.createElement(ResourceDefinitionContextProvider, null, children)))))))));\n};","map":{"version":3,"names":["React","useMemo","QueryClientProvider","QueryClient","AdminRouter","AuthContext","convertLegacyAuthProvider","DataProviderContext","convertLegacyDataProvider","defaultDataProvider","StoreContextProvider","memoryStore","PreferencesEditorContextProvider","I18nContextProvider","ResourceDefinitionContextProvider","NotificationContextProvider","defaultStore","CoreAdminContext","props","authProvider","basename","_a","dataProvider","i18nProvider","_b","store","children","history","queryClient","Error","finalQueryClient","finalAuthProvider","Function","finalDataProvider","createElement","Provider","value","client"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/ra-core/src/core/CoreAdminContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { History } from 'history';\n\nimport { AdminRouter } from '../routing';\nimport { AuthContext, convertLegacyAuthProvider } from '../auth';\nimport {\n    DataProviderContext,\n    convertLegacyDataProvider,\n    defaultDataProvider,\n} from '../dataProvider';\nimport { StoreContextProvider, Store, memoryStore } from '../store';\nimport { PreferencesEditorContextProvider } from '../preferences/PreferencesEditorContextProvider';\nimport { I18nContextProvider } from '../i18n';\nimport { ResourceDefinitionContextProvider } from './ResourceDefinitionContext';\nimport { NotificationContextProvider } from '../notification';\nimport {\n    AuthProvider,\n    LegacyAuthProvider,\n    I18nProvider,\n    DataProvider,\n    AdminChildren,\n    DashboardComponent,\n    LegacyDataProvider,\n} from '../types';\n\nconst defaultStore = memoryStore();\n\nexport interface CoreAdminContextProps {\n    /**\n     * The authentication provider for security and permissions\n     *\n     * @see https://marmelab.com/react-admin/Authentication.html\n     * @example\n     * import authProvider from './authProvider';\n     *\n     * const App = () => (\n     *     <Admin authProvider={authProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    authProvider?: AuthProvider | LegacyAuthProvider;\n\n    /**\n     * The base path for all URLs generated by react-admin.\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#using-react-admin-in-a-sub-path\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { BrowserRouter } from 'react-router-dom';\n     * import { dataProvider } from './dataProvider';\n     *\n     * const App = () => (\n     *     <BrowserRouter>\n     *         <Admin basename=\"/admin\" dataProvider={dataProvider}>\n     *              ...\n     *         </Admin>\n     *    </BrowserRouter>\n     * );\n     */\n    basename?: string;\n\n    children?: AdminChildren;\n\n    /**\n     * The component to use for the dashboard page (displayed on the `/` route).\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#dashboard\n     * @example\n     * import { Admin } from 'react-admin';\n     * import Dashboard from './Dashboard';\n     * import { dataProvider } from './dataProvider';\n     *\n     * const App = () => (\n     *     <Admin dashboard={Dashboard} dataProvider={dataProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    dashboard?: DashboardComponent;\n\n    /**\n     * The data provider used to communicate with the API\n     *\n     * @see https://marmelab.com/react-admin/DataProviders.html\n     * @example\n     * import { Admin } from 'react-admin';\n     * import simpleRestProvider from 'ra-data-simple-rest';\n     * const dataProvider = simpleRestProvider('http://path.to.my.api/');\n     *\n     * const App = () => (\n     *     <Admin dataProvider={dataProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    dataProvider?: DataProvider | LegacyDataProvider;\n\n    /**\n     * The adapter for storing user preferences\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#store\n     * @example\n     * import { Admin, memoryStore } from 'react-admin';\n     *\n     * const App = () => (\n     *     <Admin dataProvider={dataProvider} store={memoryStore()}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    store?: Store;\n\n    /**\n     * The react-query client\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#queryclient\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { QueryClient } from 'react-query';\n     *\n     * const queryClient = new QueryClient({\n     *     defaultOptions: {\n     *         queries: {\n     *             retry: false,\n     *             structuralSharing: false,\n     *         },\n     *         mutations: {\n     *             retryDelay: 10000,\n     *         },\n     *     },\n     * });\n     *\n     * const App = () => (\n     *     <Admin queryClient={queryClient} dataProvider={...}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    queryClient?: QueryClient;\n\n    /**\n     * @deprecated Wrap your Admin inside a Router to change the routing strategy\n     * @see https://marmelab.com/react-admin/Admin.html#using-a-custom-router\n     */\n    history?: History;\n\n    /**\n     * The internationalization provider for translations\n     *\n     * @see https://marmelab.com/react-admin/Translation.html\n     * @example\n     * // in src/i18nProvider.js\n     * import polyglotI18nProvider from 'ra-i18n-polyglot';\n     * import fr from 'ra-language-french';\n     *\n     * export const i18nProvider = polyglotI18nProvider(() => fr, 'fr');\n     *\n     * // in src/App.js\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { i18nProvider } from './i18nProvider';\n     *\n     * const App = () => (\n     *     <Admin dataProvider={dataProvider} i18nProvider={i18nProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    i18nProvider?: I18nProvider;\n}\n\nexport const CoreAdminContext = (props: CoreAdminContextProps) => {\n    const {\n        authProvider,\n        basename,\n        dataProvider = defaultDataProvider,\n        i18nProvider,\n        store = defaultStore,\n        children,\n        history,\n        queryClient,\n    } = props;\n\n    if (!dataProvider) {\n        throw new Error(`Missing dataProvider prop.\nReact-admin requires a valid dataProvider function to work.`);\n    }\n\n    const finalQueryClient = useMemo(() => queryClient || new QueryClient(), [\n        queryClient,\n    ]);\n\n    const finalAuthProvider = useMemo(\n        () =>\n            authProvider instanceof Function\n                ? convertLegacyAuthProvider(authProvider)\n                : authProvider,\n        [authProvider]\n    );\n\n    const finalDataProvider = useMemo(\n        () =>\n            dataProvider instanceof Function\n                ? convertLegacyDataProvider(dataProvider)\n                : dataProvider,\n        [dataProvider]\n    );\n\n    return (\n        <AuthContext.Provider value={finalAuthProvider}>\n            <DataProviderContext.Provider value={finalDataProvider}>\n                <StoreContextProvider value={store}>\n                    <PreferencesEditorContextProvider>\n                        <QueryClientProvider client={finalQueryClient}>\n                            <AdminRouter history={history} basename={basename}>\n                                <I18nContextProvider value={i18nProvider}>\n                                    <NotificationContextProvider>\n                                        <ResourceDefinitionContextProvider>\n                                            {children}\n                                        </ResourceDefinitionContextProvider>\n                                    </NotificationContextProvider>\n                                </I18nContextProvider>\n                            </AdminRouter>\n                        </QueryClientProvider>\n                    </PreferencesEditorContextProvider>\n                </StoreContextProvider>\n            </DataProviderContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,aAAa;AAG9D,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,WAAW,EAAEC,yBAAyB,QAAQ,SAAS;AAChE,SACIC,mBAAmB,EACnBC,yBAAyB,EACzBC,mBAAmB,QAChB,iBAAiB;AACxB,SAASC,oBAAoB,EAASC,WAAW,QAAQ,UAAU;AACnE,SAASC,gCAAgC,QAAQ,iDAAiD;AAClG,SAASC,mBAAmB,QAAQ,SAAS;AAC7C,SAASC,iCAAiC,QAAQ,6BAA6B;AAC/E,SAASC,2BAA2B,QAAQ,iBAAiB;AAW7D,IAAMC,YAAY,GAAGL,WAAW,EAAE;AAmJlC,OAAO,IAAMM,gBAAgB,GAAG,SAAAA,CAACC,KAA4B;EAErD,IAAAC,YAAY,GAQZD,KAAK,CAAAC,YARO;IACZC,QAAQ,GAORF,KAAK,CAAAE,QAPG;IACRC,EAAA,GAMAH,KAAK,CAAAI,YAN6B;IAAlCA,YAAY,GAAAD,EAAA,cAAGZ,mBAAmB,GAAAY,EAAA;IAClCE,YAAY,GAKZL,KAAK,CAAAK,YALO;IACZC,EAAA,GAIAN,KAAK,CAAAO,KAJe;IAApBA,KAAK,GAAAD,EAAA,cAAGR,YAAY,GAAAQ,EAAA;IACpBE,QAAQ,GAGRR,KAAK,CAAAQ,QAHG;IACRC,OAAO,GAEPT,KAAK,CAAAS,OAFE;IACPC,WAAW,GACXV,KAAK,CAAAU,WADM;EAGf,IAAI,CAACN,YAAY,EAAE;IACf,MAAM,IAAIO,KAAK,CAAC,yFACoC,CAAC;;EAGzD,IAAMC,gBAAgB,GAAG7B,OAAO,CAAC;IAAM,OAAA2B,WAAW,IAAI,IAAIzB,WAAW,EAAE;EAAhC,CAAgC,EAAE,CACrEyB,WAAW,CACd,CAAC;EAEF,IAAMG,iBAAiB,GAAG9B,OAAO,CAC7B;IACI,OAAAkB,YAAY,YAAYa,QAAQ,GAC1B1B,yBAAyB,CAACa,YAAY,CAAC,GACvCA,YAAY;EAFlB,CAEkB,EACtB,CAACA,YAAY,CAAC,CACjB;EAED,IAAMc,iBAAiB,GAAGhC,OAAO,CAC7B;IACI,OAAAqB,YAAY,YAAYU,QAAQ,GAC1BxB,yBAAyB,CAACc,YAAY,CAAC,GACvCA,YAAY;EAFlB,CAEkB,EACtB,CAACA,YAAY,CAAC,CACjB;EAED,OACItB,KAAA,CAAAkC,aAAA,CAAC7B,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAEL;EAAiB,GAC1C/B,KAAA,CAAAkC,aAAA,CAAC3B,mBAAmB,CAAC4B,QAAQ;IAACC,KAAK,EAAEH;EAAiB,GAClDjC,KAAA,CAAAkC,aAAA,CAACxB,oBAAoB;IAAC0B,KAAK,EAAEX;EAAK,GAC9BzB,KAAA,CAAAkC,aAAA,CAACtB,gCAAgC,QAC7BZ,KAAA,CAAAkC,aAAA,CAAChC,mBAAmB;IAACmC,MAAM,EAAEP;EAAgB,GACzC9B,KAAA,CAAAkC,aAAA,CAAC9B,WAAW;IAACuB,OAAO,EAAEA,OAAO;IAAEP,QAAQ,EAAEA;EAAQ,GAC7CpB,KAAA,CAAAkC,aAAA,CAACrB,mBAAmB;IAACuB,KAAK,EAAEb;EAAY,GACpCvB,KAAA,CAAAkC,aAAA,CAACnB,2BAA2B,QACxBf,KAAA,CAAAkC,aAAA,CAACpB,iCAAiC,QAC7BY,QAAQ,CACuB,CACV,CACZ,CACZ,CACI,CACS,CAChB,CACI,CACZ;AAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}