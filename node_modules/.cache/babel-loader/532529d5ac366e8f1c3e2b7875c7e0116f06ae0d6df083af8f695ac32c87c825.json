{"ast":null,"code":"import * as React from 'react';\nimport { useHandleAuthCallback } from 'ra-core';\nimport { Loading } from '..';\nimport { AuthError } from './AuthError';\n/**\n * A standalone page to be used in a route called by external authentication services (e.g. OAuth)\n * after the user has been authenticated.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to show a different waiting screen, start onboarding procedures, etc.).\n *\n * @example\n *     import MyAuthCallbackPage from './MyAuthCallbackPage';\n *     const App = () => (\n *         <Admin authCallbackPage={MyAuthCallbackPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\nexport var AuthCallback = function () {\n  var error = useHandleAuthCallback().error;\n  if (error) {\n    return React.createElement(AuthError, {\n      message: error ? error.message : undefined\n    });\n  }\n  return React.createElement(Loading, null);\n};","map":{"version":3,"names":["React","useHandleAuthCallback","Loading","AuthError","AuthCallback","error","createElement","message","undefined"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/auth/AuthCallback.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useHandleAuthCallback } from 'ra-core';\nimport { Loading } from '..';\nimport { AuthError } from './AuthError';\n\n/**\n * A standalone page to be used in a route called by external authentication services (e.g. OAuth)\n * after the user has been authenticated.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to show a different waiting screen, start onboarding procedures, etc.).\n *\n * @example\n *     import MyAuthCallbackPage from './MyAuthCallbackPage';\n *     const App = () => (\n *         <Admin authCallbackPage={MyAuthCallbackPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\nexport const AuthCallback = () => {\n    const { error } = useHandleAuthCallback();\n    if (error) {\n        return (\n            <AuthError\n                message={\n                    (error as Error) ? (error as Error).message : undefined\n                }\n            />\n        );\n    }\n    return <Loading />;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,SAAS;AAC/C,SAASC,OAAO,QAAQ,IAAI;AAC5B,SAASC,SAAS,QAAQ,aAAa;AAEvC;;;;;;;;;;;;;;;AAeA,OAAO,IAAMC,YAAY,GAAG,SAAAA,CAAA;EAChB,IAAAC,KAAK,GAAKJ,qBAAqB,EAAE,CAAAI,KAA5B;EACb,IAAIA,KAAK,EAAE;IACP,OACIL,KAAA,CAAAM,aAAA,CAACH,SAAS;MACNI,OAAO,EACFF,KAAe,GAAIA,KAAe,CAACE,OAAO,GAAGC;IAAS,EAE7D;;EAGV,OAAOR,KAAA,CAAAM,aAAA,CAACJ,OAAO,OAAG;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}