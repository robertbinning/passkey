{"ast":null,"code":"var _jsxFileName = \"/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/components/PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    currentUser,\n    isAuthenticated\n  } = useAuth();\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  console.log('Current user in PrivateRoute:', currentUser); // Debugging line\n  console.log('Is authenticated in PrivateRoute:', isAuthenticated); // Debugging line\n\n  useEffect(() => {\n    if (currentUser === null && !isAuthenticated) {\n      const timer = setTimeout(() => {\n        setShouldRedirect(true);\n      }, 3000); // Wait for 3 seconds\n\n      return () => clearTimeout(timer); // Cleanup the timer on component unmount\n    }\n  }, [currentUser, isAuthenticated]);\n  if (shouldRedirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  if (currentUser === null && !isAuthenticated) {\n    // Show a loading indicator while checking the session\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please login to continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 39\n  }, this);\n};\n_s(PrivateRoute, \"Yh4hJ+cuZIL5fHf/ByRX2Jf9Q+U=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","currentUser","isAuthenticated","shouldRedirect","setShouldRedirect","console","log","timer","setTimeout","clearTimeout","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/components/PrivateRoute.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext.tsx';\n\nconst PrivateRoute = ({ children }: { children: JSX.Element }) => {\n  const { currentUser, isAuthenticated } = useAuth();\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n\n  console.log('Current user in PrivateRoute:', currentUser); // Debugging line\n  console.log('Is authenticated in PrivateRoute:', isAuthenticated); // Debugging line\n\n  useEffect(() => {\n    if (currentUser === null && !isAuthenticated) {\n      const timer = setTimeout(() => {\n        setShouldRedirect(true);\n      }, 3000); // Wait for 3 seconds\n\n      return () => clearTimeout(timer); // Cleanup the timer on component unmount\n    }\n  }, [currentUser, isAuthenticated]);\n\n  if (shouldRedirect) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (currentUser === null && !isAuthenticated) {\n    // Show a loading indicator while checking the session\n    return <div>Please login to continue</div>;\n  }\n\n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAoC,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM;IAAEC,WAAW;IAAEC;EAAgB,CAAC,GAAGP,OAAO,CAAC,CAAC;EAClD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3DY,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,WAAW,CAAC,CAAC,CAAC;EAC3DI,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,eAAe,CAAC,CAAC,CAAC;;EAEnEV,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,KAAK,IAAI,IAAI,CAACC,eAAe,EAAE;MAC5C,MAAMK,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BJ,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAMK,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,CAACN,WAAW,EAAEC,eAAe,CAAC,CAAC;EAElC,IAAIC,cAAc,EAAE;IAClB,oBAAON,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAIb,WAAW,KAAK,IAAI,IAAI,CAACC,eAAe,EAAE;IAC5C;IACA,oBAAOL,OAAA;MAAAE,QAAA,EAAK;IAAwB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5C;EAEA,OAAOZ,eAAe,GAAGH,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACgB,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACd,EAAA,CA3BIF,YAAY;EAAA,QACyBH,OAAO;AAAA;AAAAoB,EAAA,GAD5CjB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}