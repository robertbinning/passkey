{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Chip, Stack, styled } from '@mui/material';\nimport { sanitizeListRestProps, useListContextWithProps, useResourceContext, RecordContextProvider, RecordRepresentation, useCreatePath } from 'ra-core';\nimport { LinearProgress } from '../layout/LinearProgress';\nimport { Link } from '../Link';\n/**\n * Iterator component to be used to display a list of entities, using a single field\n *\n * @example Display all the orders by the current customer as a list of chips\n * <ReferenceManyField reference=\"orders\" target=\"customer_id\">\n *     <SingleFieldList />\n * </ReferenceManyField>\n\n* @example Choose the field to be used as text label\n * <ReferenceManyField reference=\"orders\" target=\"customer_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"reference\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * @example Customize the link type\n * // By default, it includes a link to the <Edit> page of the related record\n * // (`/orders/:id` in the previous example).\n * // Set the linkType prop to \"show\" to link to the <Show> page instead.\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList linkType=\"show\">\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * @example Disable the link\n * // You can also prevent `<SingleFieldList>` from adding link to children by\n * // setting `linkType` to false.\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList linkType={false}>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n */\nexport var SingleFieldList = function (props) {\n  var className = props.className,\n    children = props.children,\n    empty = props.empty,\n    _a = props.linkType,\n    linkType = _a === void 0 ? 'edit' : _a,\n    _b = props.gap,\n    gap = _b === void 0 ? 1 : _b,\n    _c = props.direction,\n    direction = _c === void 0 ? 'row' : _c,\n    rest = __rest(props, [\"className\", \"children\", \"empty\", \"linkType\", \"gap\", \"direction\"]);\n  var _d = useListContextWithProps(props),\n    data = _d.data,\n    total = _d.total,\n    isPending = _d.isPending;\n  var resource = useResourceContext(props);\n  var createPath = useCreatePath();\n  if (isPending === true) {\n    return React.createElement(LinearProgress, null);\n  }\n  if (data == null || data.length === 0 || total === 0) {\n    if (empty) {\n      return empty;\n    }\n    return null;\n  }\n  return React.createElement(Root, __assign({\n    gap: gap,\n    direction: direction,\n    className: className\n  }, sanitizeListRestProps(rest)), data.map(function (record, rowIndex) {\n    var _a, _b;\n    var resourceLinkPath = !linkType ? false : createPath({\n      resource: resource,\n      type: linkType,\n      id: record.id\n    });\n    if (resourceLinkPath) {\n      return React.createElement(RecordContextProvider, {\n        value: record,\n        key: (_a = record.id) !== null && _a !== void 0 ? _a : \"row\".concat(rowIndex)\n      }, React.createElement(Link, {\n        className: SingleFieldListClasses.link,\n        to: resourceLinkPath,\n        onClick: stopPropagation\n      }, children || React.createElement(DefaultChildComponent, {\n        clickable: true\n      })));\n    }\n    return React.createElement(RecordContextProvider, {\n      value: record,\n      key: (_b = record.id) !== null && _b !== void 0 ? _b : \"row\".concat(rowIndex)\n    }, children || React.createElement(DefaultChildComponent, null));\n  }));\n};\nvar PREFIX = 'RaSingleFieldList';\nexport var SingleFieldListClasses = {\n  link: \"\".concat(PREFIX, \"-link\")\n};\nvar Root = styled(Stack, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    flexWrap: 'wrap'\n  }, _b[\"& .\".concat(SingleFieldListClasses.link)] = {\n    textDecoration: 'none',\n    '& > *': {\n      color: theme.palette.primary.main\n    }\n  }, _b;\n});\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\nvar DefaultChildComponent = function (_a) {\n  var clickable = _a.clickable;\n  return React.createElement(Chip, {\n    sx: {\n      cursor: 'inherit'\n    },\n    size: \"small\",\n    label: React.createElement(RecordRepresentation, null),\n    clickable: clickable\n  });\n};","map":{"version":3,"names":["React","Chip","Stack","styled","sanitizeListRestProps","useListContextWithProps","useResourceContext","RecordContextProvider","RecordRepresentation","useCreatePath","LinearProgress","Link","SingleFieldList","props","className","children","empty","_a","linkType","_b","gap","_c","direction","rest","__rest","_d","data","total","isPending","resource","createPath","createElement","length","Root","__assign","map","record","rowIndex","resourceLinkPath","type","id","value","key","concat","SingleFieldListClasses","link","to","onClick","stopPropagation","DefaultChildComponent","clickable","PREFIX","name","overridesResolver","styles","root","theme","flexWrap","textDecoration","color","palette","primary","main","e","sx","cursor","size","label"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/SingleFieldList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Chip, Stack, StackProps, styled } from '@mui/material';\nimport {\n    sanitizeListRestProps,\n    useListContextWithProps,\n    useResourceContext,\n    RaRecord,\n    RecordContextProvider,\n    RecordRepresentation,\n    useCreatePath,\n} from 'ra-core';\n\nimport { LinearProgress } from '../layout/LinearProgress';\nimport { Link } from '../Link';\n\n/**\n * Iterator component to be used to display a list of entities, using a single field\n *\n * @example Display all the orders by the current customer as a list of chips\n * <ReferenceManyField reference=\"orders\" target=\"customer_id\">\n *     <SingleFieldList />\n * </ReferenceManyField>\n\n* @example Choose the field to be used as text label\n * <ReferenceManyField reference=\"orders\" target=\"customer_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"reference\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * @example Customize the link type\n * // By default, it includes a link to the <Edit> page of the related record\n * // (`/orders/:id` in the previous example).\n * // Set the linkType prop to \"show\" to link to the <Show> page instead.\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList linkType=\"show\">\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * @example Disable the link\n * // You can also prevent `<SingleFieldList>` from adding link to children by\n * // setting `linkType` to false.\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList linkType={false}>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n */\nexport const SingleFieldList = (props: SingleFieldListProps) => {\n    const {\n        className,\n        children,\n        empty,\n        linkType = 'edit',\n        gap = 1,\n        direction = 'row',\n        ...rest\n    } = props;\n    const { data, total, isPending } = useListContextWithProps(props);\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n\n    if (isPending === true) {\n        return <LinearProgress />;\n    }\n\n    if (data == null || data.length === 0 || total === 0) {\n        if (empty) {\n            return empty;\n        }\n\n        return null;\n    }\n\n    return (\n        <Root\n            gap={gap}\n            direction={direction}\n            className={className}\n            {...sanitizeListRestProps(rest)}\n        >\n            {data.map((record, rowIndex) => {\n                const resourceLinkPath = !linkType\n                    ? false\n                    : createPath({\n                          resource,\n                          type: linkType,\n                          id: record.id,\n                      });\n\n                if (resourceLinkPath) {\n                    return (\n                        <RecordContextProvider\n                            value={record}\n                            key={record.id ?? `row${rowIndex}`}\n                        >\n                            <Link\n                                className={SingleFieldListClasses.link}\n                                to={resourceLinkPath}\n                                onClick={stopPropagation}\n                            >\n                                {children || (\n                                    <DefaultChildComponent clickable />\n                                )}\n                            </Link>\n                        </RecordContextProvider>\n                    );\n                }\n\n                return (\n                    <RecordContextProvider\n                        value={record}\n                        key={record.id ?? `row${rowIndex}`}\n                    >\n                        {children || <DefaultChildComponent />}\n                    </RecordContextProvider>\n                );\n            })}\n        </Root>\n    );\n};\n\nexport interface SingleFieldListProps<RecordType extends RaRecord = any>\n    extends StackProps {\n    className?: string;\n    empty?: React.ReactElement;\n    linkType?: string | false;\n    children?: React.ReactNode;\n    // can be injected when using the component without context\n    data?: RecordType[];\n    total?: number;\n    loaded?: boolean;\n}\n\nconst PREFIX = 'RaSingleFieldList';\n\nexport const SingleFieldListClasses = {\n    link: `${PREFIX}-link`,\n};\n\nconst Root = styled(Stack, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexWrap: 'wrap',\n    [`& .${SingleFieldListClasses.link}`]: {\n        textDecoration: 'none',\n        '& > *': {\n            color: theme.palette.primary.main,\n        },\n    },\n}));\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\nconst DefaultChildComponent = ({ clickable }: { clickable?: boolean }) => (\n    <Chip\n        sx={{ cursor: 'inherit' }}\n        size=\"small\"\n        label={<RecordRepresentation />}\n        clickable={clickable}\n    />\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}