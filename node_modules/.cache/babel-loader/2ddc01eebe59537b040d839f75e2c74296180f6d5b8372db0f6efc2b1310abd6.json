{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport { useDeleteWithUndoController, useRecordContext, useResourceContext } from 'ra-core';\nimport { Button } from './Button';\nexport var DeleteWithUndoButton = function (props) {\n  var _a = props.label,\n    label = _a === void 0 ? 'ra.action.delete' : _a,\n    className = props.className,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    onClick = props.onClick,\n    _c = props.redirect,\n    redirect = _c === void 0 ? 'list' : _c,\n    mutationOptions = props.mutationOptions,\n    _d = props.color,\n    color = _d === void 0 ? 'error' : _d,\n    rest = __rest(props, [\"label\", \"className\", \"icon\", \"onClick\", \"redirect\", \"mutationOptions\", \"color\"]);\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n  var _e = useDeleteWithUndoController({\n      record: record,\n      resource: resource,\n      redirect: redirect,\n      onClick: onClick,\n      mutationOptions: mutationOptions\n    }),\n    isPending = _e.isPending,\n    handleDelete = _e.handleDelete;\n  return React.createElement(Button, __assign({\n    onClick: handleDelete,\n    disabled: isPending,\n    label: label,\n    className: clsx('ra-delete-button', className),\n    key: \"button\",\n    color: color\n  }, rest), icon);\n};\nvar defaultIcon = React.createElement(ActionDelete, null);","map":{"version":3,"names":["React","ActionDelete","clsx","useDeleteWithUndoController","useRecordContext","useResourceContext","Button","DeleteWithUndoButton","props","_a","label","className","_b","icon","defaultIcon","onClick","_c","redirect","mutationOptions","_d","color","rest","__rest","record","resource","_e","isPending","handleDelete","createElement","__assign","disabled","key"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/button/DeleteWithUndoButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactEventHandler } from 'react';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport { UseMutationOptions } from '@tanstack/react-query';\nimport {\n    RaRecord,\n    useDeleteWithUndoController,\n    DeleteParams,\n    useRecordContext,\n    useResourceContext,\n    RedirectionSideEffect,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithUndoButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithUndoButtonProps<RecordType>\n) => {\n    const {\n        label = 'ra.action.delete',\n        className,\n        icon = defaultIcon,\n        onClick,\n        redirect = 'list',\n        mutationOptions,\n        color = 'error',\n        ...rest\n    } = props;\n\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n    const { isPending, handleDelete } = useDeleteWithUndoController({\n        record,\n        resource,\n        redirect,\n        onClick,\n        mutationOptions,\n    });\n\n    return (\n        <Button\n            onClick={handleDelete}\n            disabled={isPending}\n            label={label}\n            className={clsx('ra-delete-button', className)}\n            key=\"button\"\n            color={color}\n            {...rest}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithUndoButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown,\n> extends ButtonProps {\n    icon?: ReactElement;\n    onClick?: ReactEventHandler<any>;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAEIC,2BAA2B,EAE3BC,gBAAgB,EAChBC,kBAAkB,QAEf,SAAS;AAEhB,SAASC,MAAM,QAAqB,UAAU;AAE9C,OAAO,IAAMC,oBAAoB,GAAG,SAAAA,CAChCC,KAA4C;EAGxC,IAAAC,EAAA,GAQAD,KAAK,CAAAE,KARqB;IAA1BA,KAAK,GAAAD,EAAA,cAAG,kBAAkB,GAAAA,EAAA;IAC1BE,SAAS,GAOTH,KAAK,CAAAG,SAPI;IACTC,EAAA,GAMAJ,KAAK,CAAAK,IANa;IAAlBA,IAAI,GAAAD,EAAA,cAAGE,WAAW,GAAAF,EAAA;IAClBG,OAAO,GAKPP,KAAK,CAAAO,OALE;IACPC,EAAA,GAIAR,KAAK,CAAAS,QAJY;IAAjBA,QAAQ,GAAAD,EAAA,cAAG,MAAM,GAAAA,EAAA;IACjBE,eAAe,GAGfV,KAAK,CAAAU,eAHU;IACfC,EAAA,GAEAX,KAAK,CAAAY,KAFU;IAAfA,KAAK,GAAAD,EAAA,cAAG,OAAO,GAAAA,EAAA;IACZE,IAAI,GAAAC,MAAA,CACPd,KAAK,EATH,iFASL,CADU;EAGX,IAAMe,MAAM,GAAGnB,gBAAgB,CAACI,KAAK,CAAC;EACtC,IAAMgB,QAAQ,GAAGnB,kBAAkB,CAACG,KAAK,CAAC;EACpC,IAAAiB,EAAA,GAA8BtB,2BAA2B,CAAC;MAC5DoB,MAAM,EAAAA,MAAA;MACNC,QAAQ,EAAAA,QAAA;MACRP,QAAQ,EAAAA,QAAA;MACRF,OAAO,EAAAA,OAAA;MACPG,eAAe,EAAAA;KAClB,CAAC;IANMQ,SAAS,GAAAD,EAAA,CAAAC,SAAA;IAAEC,YAAY,GAAAF,EAAA,CAAAE,YAM7B;EAEF,OACI3B,KAAA,CAAA4B,aAAA,CAACtB,MAAM,EAAAuB,QAAA;IACHd,OAAO,EAAEY,YAAY;IACrBG,QAAQ,EAAEJ,SAAS;IACnBhB,KAAK,EAAEA,KAAK;IACZC,SAAS,EAAET,IAAI,CAAC,kBAAkB,EAAES,SAAS,CAAC;IAC9CoB,GAAG,EAAC,QAAQ;IACZX,KAAK,EAAEA;EAAK,GACRC,IAAI,GAEPR,IAAI,CACA;AAEjB,CAAC;AAED,IAAMC,WAAW,GAAGd,KAAA,CAAA4B,aAAA,CAAC3B,YAAY,OAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}