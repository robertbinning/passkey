{"ast":null,"code":"import * as React from 'react';\nimport { useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useResourceDefinition } from './useResourceDefinition';\n/**\n * Get default string representation of a record\n *\n * @example // No customization\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"#1\"\n *\n * @example // With <Resource name=\"posts\" recordRepresentation=\"title\" />\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"Hello\"\n */\nexport var useGetRecordRepresentation = function (resource) {\n  var recordRepresentation = useResourceDefinition({\n    resource: resource\n  }).recordRepresentation;\n  return useCallback(function (record) {\n    if (!record) return '';\n    if (typeof recordRepresentation === 'function') {\n      return recordRepresentation(record);\n    }\n    if (typeof recordRepresentation === 'string') {\n      return get(record, recordRepresentation);\n    }\n    if (React.isValidElement(recordRepresentation)) {\n      return recordRepresentation;\n    }\n    if ((record === null || record === void 0 ? void 0 : record.name) != null && (record === null || record === void 0 ? void 0 : record.name) !== '') {\n      return record.name;\n    }\n    if ((record === null || record === void 0 ? void 0 : record.title) != null && (record === null || record === void 0 ? void 0 : record.title) !== '') {\n      return record.title;\n    }\n    if ((record === null || record === void 0 ? void 0 : record.label) != null && (record === null || record === void 0 ? void 0 : record.label) !== '') {\n      return record.label;\n    }\n    if ((record === null || record === void 0 ? void 0 : record.reference) != null && (record === null || record === void 0 ? void 0 : record.reference) !== '') {\n      return record.reference;\n    }\n    return \"#\".concat(record.id);\n  }, [recordRepresentation]);\n};","map":{"version":3,"names":["React","useCallback","get","useResourceDefinition","useGetRecordRepresentation","resource","recordRepresentation","record","isValidElement","name","title","label","reference","concat","id"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/core/useGetRecordRepresentation.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, ReactNode } from 'react';\nimport get from 'lodash/get';\n\nimport { useResourceDefinition } from './useResourceDefinition';\n\n/**\n * Get default string representation of a record\n *\n * @example // No customization\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"#1\"\n *\n * @example // With <Resource name=\"posts\" recordRepresentation=\"title\" />\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"Hello\"\n */\nexport const useGetRecordRepresentation = (\n    resource?: string\n): ((record: any) => ReactNode) => {\n    const { recordRepresentation } = useResourceDefinition({ resource });\n    return useCallback(\n        record => {\n            if (!record) return '';\n            if (typeof recordRepresentation === 'function') {\n                return recordRepresentation(record);\n            }\n            if (typeof recordRepresentation === 'string') {\n                return get(record, recordRepresentation);\n            }\n            if (React.isValidElement(recordRepresentation)) {\n                return recordRepresentation;\n            }\n            if (record?.name != null && record?.name !== '') {\n                return record.name;\n            }\n            if (record?.title != null && record?.title !== '') {\n                return record.title;\n            }\n            if (record?.label != null && record?.label !== '') {\n                return record.label;\n            }\n            if (record?.reference != null && record?.reference !== '') {\n                return record.reference;\n            }\n            return `#${record.id}`;\n        },\n        [recordRepresentation]\n    );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAmB,OAAO;AAC9C,OAAOC,GAAG,MAAM,YAAY;AAE5B,SAASC,qBAAqB,QAAQ,yBAAyB;AAE/D;;;;;;;;;;;AAWA,OAAO,IAAMC,0BAA0B,GAAG,SAAAA,CACtCC,QAAiB;EAET,IAAAC,oBAAoB,GAAKH,qBAAqB,CAAC;IAAEE,QAAQ,EAAAA;EAAA,CAAE,CAAC,CAAAC,oBAAxC;EAC5B,OAAOL,WAAW,CACd,UAAAM,MAAM;IACF,IAAI,CAACA,MAAM,EAAE,OAAO,EAAE;IACtB,IAAI,OAAOD,oBAAoB,KAAK,UAAU,EAAE;MAC5C,OAAOA,oBAAoB,CAACC,MAAM,CAAC;;IAEvC,IAAI,OAAOD,oBAAoB,KAAK,QAAQ,EAAE;MAC1C,OAAOJ,GAAG,CAACK,MAAM,EAAED,oBAAoB,CAAC;;IAE5C,IAAIN,KAAK,CAACQ,cAAc,CAACF,oBAAoB,CAAC,EAAE;MAC5C,OAAOA,oBAAoB;;IAE/B,IAAI,CAAAC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,KAAI,IAAI,IAAI,CAAAF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,MAAK,EAAE,EAAE;MAC7C,OAAOF,MAAM,CAACE,IAAI;;IAEtB,IAAI,CAAAF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,KAAK,KAAI,IAAI,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,KAAK,MAAK,EAAE,EAAE;MAC/C,OAAOH,MAAM,CAACG,KAAK;;IAEvB,IAAI,CAAAH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,KAAK,KAAI,IAAI,IAAI,CAAAJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,KAAK,MAAK,EAAE,EAAE;MAC/C,OAAOJ,MAAM,CAACI,KAAK;;IAEvB,IAAI,CAAAJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,SAAS,KAAI,IAAI,IAAI,CAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,SAAS,MAAK,EAAE,EAAE;MACvD,OAAOL,MAAM,CAACK,SAAS;;IAE3B,OAAO,IAAAC,MAAA,CAAIN,MAAM,CAACO,EAAE,CAAE;EAC1B,CAAC,EACD,CAACR,oBAAoB,CAAC,CACzB;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}