{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useEffect, useMemo } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport useAuthProvider from './useAuthProvider';\nimport { useEvent } from '../util';\nvar defaultIdentity = {\n  id: ''\n};\nvar defaultQueryParams = {\n  staleTime: 5 * 60 * 1000\n};\n/**\n * Return the current user identity by calling authProvider.getIdentity() on mount\n *\n * The return value updates according to the call state:\n *\n * - mount: { isPending: true }\n * - success: { identity, refetch: () => {}, isPending: false }\n * - error: { error: Error, isPending: false }\n *\n * The implementation is left to the authProvider.\n *\n * @returns The current user identity. Destructure as { isPending, identity, error, refetch }.\n *\n * @example\n * import { useGetIdentity, useGetOne } from 'react-admin';\n *\n * const PostDetail = ({ id }) => {\n *     const { data: post, isPending: postLoading } = useGetOne('posts', { id });\n *     const { identity, isPending: identityLoading } = useGetIdentity();\n *     if (postLoading || identityLoading) return <>Loading...</>;\n *     if (!post.lockedBy || post.lockedBy === identity.id) {\n *         // post isn't locked, or is locked by me\n *         return <PostEdit post={post} />\n *     } else {\n *         // post is locked by someone else and cannot be edited\n *         return <PostShow post={post} />\n *     }\n * }\n */\nexport var useGetIdentity = function (options) {\n  if (options === void 0) {\n    options = defaultQueryParams;\n  }\n  var authProvider = useAuthProvider();\n  var onSuccess = options.onSuccess,\n    onError = options.onError,\n    onSettled = options.onSettled,\n    queryOptions = __rest(options, [\"onSuccess\", \"onError\", \"onSettled\"]);\n  var result = useQuery(__assign({\n    queryKey: ['auth', 'getIdentity'],\n    queryFn: function (_a) {\n      var signal = _a.signal;\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_b) {\n          if (authProvider && typeof authProvider.getIdentity === 'function') {\n            return [2 /*return*/, authProvider.getIdentity({\n              signal: signal\n            })];\n          } else {\n            return [2 /*return*/, defaultIdentity];\n          }\n          return [2 /*return*/];\n        });\n      });\n    }\n  }, queryOptions));\n  var onSuccessEvent = useEvent(onSuccess !== null && onSuccess !== void 0 ? onSuccess : noop);\n  var onErrorEvent = useEvent(onError !== null && onError !== void 0 ? onError : noop);\n  var onSettledEvent = useEvent(onSettled !== null && onSettled !== void 0 ? onSettled : noop);\n  useEffect(function () {\n    if (result.data === undefined || result.isFetching) return;\n    onSuccessEvent(result.data);\n  }, [onSuccessEvent, result.data, result.isFetching]);\n  useEffect(function () {\n    if (result.error == null || result.isFetching) return;\n    onErrorEvent(result.error);\n  }, [onErrorEvent, result.error, result.isFetching]);\n  useEffect(function () {\n    if (result.status === 'pending' || result.isFetching) return;\n    onSettledEvent(result.data, result.error);\n  }, [onSettledEvent, result.data, result.error, result.status, result.isFetching]);\n  return useMemo(function () {\n    return __assign(__assign({}, result), {\n      identity: result.data\n    });\n  }, [result]);\n};\nexport default useGetIdentity;\nvar noop = function () {};","map":{"version":3,"names":["useEffect","useMemo","useQuery","useAuthProvider","useEvent","defaultIdentity","id","defaultQueryParams","staleTime","useGetIdentity","options","authProvider","onSuccess","onError","onSettled","queryOptions","__rest","result","__assign","queryKey","queryFn","_a","signal","getIdentity","onSuccessEvent","noop","onErrorEvent","onSettledEvent","data","undefined","isFetching","error","status","identity"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/auth/useGetIdentity.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport {\n    useQuery,\n    UseQueryOptions,\n    QueryObserverResult,\n} from '@tanstack/react-query';\n\nimport useAuthProvider from './useAuthProvider';\nimport { UserIdentity } from '../types';\nimport { useEvent } from '../util';\n\nconst defaultIdentity: UserIdentity = {\n    id: '',\n};\nconst defaultQueryParams = {\n    staleTime: 5 * 60 * 1000,\n};\n\n/**\n * Return the current user identity by calling authProvider.getIdentity() on mount\n *\n * The return value updates according to the call state:\n *\n * - mount: { isPending: true }\n * - success: { identity, refetch: () => {}, isPending: false }\n * - error: { error: Error, isPending: false }\n *\n * The implementation is left to the authProvider.\n *\n * @returns The current user identity. Destructure as { isPending, identity, error, refetch }.\n *\n * @example\n * import { useGetIdentity, useGetOne } from 'react-admin';\n *\n * const PostDetail = ({ id }) => {\n *     const { data: post, isPending: postLoading } = useGetOne('posts', { id });\n *     const { identity, isPending: identityLoading } = useGetIdentity();\n *     if (postLoading || identityLoading) return <>Loading...</>;\n *     if (!post.lockedBy || post.lockedBy === identity.id) {\n *         // post isn't locked, or is locked by me\n *         return <PostEdit post={post} />\n *     } else {\n *         // post is locked by someone else and cannot be edited\n *         return <PostShow post={post} />\n *     }\n * }\n */\nexport const useGetIdentity = <ErrorType extends Error = Error>(\n    options: UseGetIdentityOptions<ErrorType> = defaultQueryParams\n): UseGetIdentityResult<ErrorType> => {\n    const authProvider = useAuthProvider();\n    const { onSuccess, onError, onSettled, ...queryOptions } = options;\n\n    const result = useQuery({\n        queryKey: ['auth', 'getIdentity'],\n        queryFn: async ({ signal }) => {\n            if (\n                authProvider &&\n                typeof authProvider.getIdentity === 'function'\n            ) {\n                return authProvider.getIdentity({ signal });\n            } else {\n                return defaultIdentity;\n            }\n        },\n        ...queryOptions,\n    });\n\n    const onSuccessEvent = useEvent(onSuccess ?? noop);\n    const onErrorEvent = useEvent(onError ?? noop);\n    const onSettledEvent = useEvent(onSettled ?? noop);\n\n    useEffect(() => {\n        if (result.data === undefined || result.isFetching) return;\n        onSuccessEvent(result.data);\n    }, [onSuccessEvent, result.data, result.isFetching]);\n\n    useEffect(() => {\n        if (result.error == null || result.isFetching) return;\n        onErrorEvent(result.error);\n    }, [onErrorEvent, result.error, result.isFetching]);\n\n    useEffect(() => {\n        if (result.status === 'pending' || result.isFetching) return;\n        onSettledEvent(result.data, result.error);\n    }, [\n        onSettledEvent,\n        result.data,\n        result.error,\n        result.status,\n        result.isFetching,\n    ]);\n\n    return useMemo(\n        () => ({\n            ...result,\n            identity: result.data,\n        }),\n        [result]\n    );\n};\n\nexport interface UseGetIdentityOptions<ErrorType extends Error = Error>\n    extends Omit<\n        UseQueryOptions<UserIdentity, ErrorType>,\n        'queryKey' | 'queryFn'\n    > {\n    onSuccess?: (data: UserIdentity) => void;\n    onError?: (err: Error) => void;\n    onSettled?: (data?: UserIdentity, error?: Error | null) => void;\n}\n\nexport type UseGetIdentityResult<ErrorType = Error> = QueryObserverResult<\n    UserIdentity,\n    ErrorType\n> & {\n    identity: UserIdentity | undefined;\n};\n\nexport default useGetIdentity;\n\nconst noop = () => {};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}