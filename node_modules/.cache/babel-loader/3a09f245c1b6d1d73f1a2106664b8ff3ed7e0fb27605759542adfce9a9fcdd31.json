{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { defaultDataProvider } from './defaultDataProvider';\n/**\n * A dataProvider meant to be used in tests only. You can override any of its methods by passing a partial dataProvider.\n *\n * @example\n * const dataProvider = testDataProvider({\n *    getOne: async () => ({ data: { id: 123, title: 'foo' }})\n * })\n */\nexport var testDataProvider = function (overrides) {\n  return __assign(__assign({}, defaultDataProvider), overrides);\n};","map":{"version":3,"names":["defaultDataProvider","testDataProvider","overrides","__assign"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/dataProvider/testDataProvider.ts"],"sourcesContent":["import { DataProvider } from '../types';\nimport { defaultDataProvider } from './defaultDataProvider';\n\n/**\n * A dataProvider meant to be used in tests only. You can override any of its methods by passing a partial dataProvider.\n *\n * @example\n * const dataProvider = testDataProvider({\n *    getOne: async () => ({ data: { id: 123, title: 'foo' }})\n * })\n */\nexport const testDataProvider = (\n    overrides?: Partial<DataProvider>\n): DataProvider => ({\n    ...defaultDataProvider,\n    ...overrides,\n});\n"],"mappings":";;;;;;;;;;AACA,SAASA,mBAAmB,QAAQ,uBAAuB;AAE3D;;;;;;;;AAQA,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAC5BC,SAAiC;EAClB,OAAAC,QAAA,CAAAA,QAAA,KACZH,mBAAmB,GACnBE,SAAS;AAFG,CAGjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}