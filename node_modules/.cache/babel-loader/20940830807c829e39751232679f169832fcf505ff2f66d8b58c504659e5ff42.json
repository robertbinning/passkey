{"ast":null,"code":"var _jsxFileName = \"/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/context/botsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotsContext = /*#__PURE__*/createContext(undefined);\nexport const BotsProvider = ({\n  children\n}) => {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [faceList, setFaceList] = useState([]);\n  const [voiceList, setVoiceList] = useState([]);\n  const addBot = bot => {\n    setBots(prevBots => [...prevBots, bot]);\n  };\n  const removeBot = id => {\n    setBots(prevBots => prevBots.filter(bot => bot.id !== id));\n  };\n  const loadFaces = async () => {\n    try {\n      const response = await fetch(\"/faces.json\");\n      const data = await response.json();\n      setFaceList(data);\n    } catch (error) {\n      console.error(\"Failed to load faces\", error);\n    }\n  };\n  const loadVoices = async () => {\n    try {\n      const response = await fetch(\"/voices.json\");\n      const data = await response.json();\n      setVoiceList(data);\n    } catch (error) {\n      console.error(\"Failed to load voices\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Loading faces...\");\n    loadFaces();\n    loadVoices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BotsContext.Provider, {\n    value: {\n      bots,\n      faceList,\n      voiceList,\n      addBot,\n      removeBot,\n      loadFaces\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(BotsProvider, \"1SMix/4UFQPqmQwzExbE7Ijic44=\");\n_c = BotsProvider;\nexport const useBots = () => {\n  _s2();\n  const context = useContext(BotsContext);\n  if (context === undefined) {\n    throw new Error(\"useBots must be used within a BotsProvider\");\n  }\n  return context;\n};\n_s2(useBots, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"BotsProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","BotsContext","undefined","BotsProvider","children","_s","bots","setBots","faceList","setFaceList","voiceList","setVoiceList","addBot","bot","prevBots","removeBot","id","filter","loadFaces","response","fetch","data","json","error","console","loadVoices","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBots","_s2","context","Error","$RefreshReg$"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/context/botsContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { Bot, Feature } from \"../data/types\";\n\ninterface BotsProviderProps {\n  children: React.ReactNode;\n}\n\ninterface BotsContextProps {\n  bots: Bot[];\n  faceList: Feature[];\n  voiceList: Feature[];\n  addBot: (bot: Bot) => void;\n  removeBot: (id: string) => void;\n  loadFaces: () => void;\n}\n\nconst BotsContext = createContext<BotsContextProps | undefined>(undefined);\n\nexport const BotsProvider: React.FC<BotsProviderProps> = ({ children }) => {\n  const [bots, setBots] = useState<Bot[]>([]);\n  const [faceList, setFaceList] = useState<Feature[]>([]);\n  const [voiceList, setVoiceList] = useState<Feature[]>([]);\n\n  const addBot = (bot: Bot) => {\n    setBots((prevBots) => [...prevBots, bot]);\n  };\n\n  const removeBot = (id: string) => {\n    setBots((prevBots) => prevBots.filter(bot => bot.id !== id));\n  };\n\n  const loadFaces = async () => {\n    try {\n      const response = await fetch(\"/faces.json\");\n      const data = await response.json();\n      setFaceList(data);\n    } catch (error) {\n      console.error(\"Failed to load faces\", error);\n    }\n  };\n\n  const loadVoices = async () => {\n    try {\n      const response = await fetch(\"/voices.json\");\n      const data = await response.json();\n      setVoiceList(data);\n    } catch (error) {\n      console.error(\"Failed to load voices\", error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Loading faces...\");\n    loadFaces();\n    loadVoices();\n  }, []);\n\n  return (\n    <BotsContext.Provider value={{ bots, faceList,voiceList , addBot, removeBot, loadFaces }}>\n      {children}\n    </BotsContext.Provider>\n  );\n};\n\nexport const useBots = () => {\n  const context = useContext(BotsContext);\n  if (context === undefined) {\n    throw new Error(\"useBots must be used within a BotsProvider\");\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB9E,MAAMC,WAAW,gBAAGN,aAAa,CAA+BO,SAAS,CAAC;AAE1E,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAY,EAAE,CAAC;EAEzD,MAAMgB,MAAM,GAAIC,GAAQ,IAAK;IAC3BN,OAAO,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,GAAG,CAAC,CAAC;EAC3C,CAAC;EAED,MAAME,SAAS,GAAIC,EAAU,IAAK;IAChCT,OAAO,CAAEO,QAAQ,IAAKA,QAAQ,CAACG,MAAM,CAACJ,GAAG,IAAIA,GAAG,CAACG,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC9D,CAAC;EAED,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCb,WAAW,CAACY,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCX,YAAY,CAACU,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd0B,OAAO,CAACE,GAAG,CAAC,kBAAkB,CAAC;IAC/BR,SAAS,CAAC,CAAC;IACXO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,QAAQ;MAACE,SAAS;MAAGE,MAAM;MAAEG,SAAS;MAAEG;IAAU,CAAE;IAAAd,QAAA,EACtFA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CA5CWF,YAAyC;AAAA8B,EAAA,GAAzC9B,YAAyC;AA8CtD,OAAO,MAAM+B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAImC,OAAO,KAAKlC,SAAS,EAAE;IACzB,MAAM,IAAImC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}