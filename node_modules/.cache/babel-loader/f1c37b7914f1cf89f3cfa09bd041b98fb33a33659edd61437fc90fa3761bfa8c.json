{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n// avoids adding a context in tests\nexport var defaultDataProvider = {\n  create: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('create is not implemented');\n      });\n    });\n  },\n  delete: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('delete not implemented');\n      });\n    });\n  },\n  deleteMany: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('deleteMany is not implemented');\n      });\n    });\n  },\n  getList: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('getList is not implemented');\n      });\n    });\n  },\n  getMany: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('getMany is not implemented');\n      });\n    });\n  },\n  getManyReference: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('getManyReference is not implemented');\n      });\n    });\n  },\n  getOne: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('getOne is not implemented');\n      });\n    });\n  },\n  update: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('update not implemented');\n      });\n    });\n  },\n  updateMany: function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('updateMany not implemented');\n      });\n    });\n  }\n};","map":{"version":3,"names":["defaultDataProvider","create","__awaiter","Error","delete","deleteMany","getList","getMany","getManyReference","getOne","update","updateMany"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/dataProvider/defaultDataProvider.ts"],"sourcesContent":["import { DataProvider } from '../types';\n\n// avoids adding a context in tests\nexport const defaultDataProvider: DataProvider = {\n    create: async () => {\n        throw new Error('create is not implemented');\n    },\n    delete: async () => {\n        throw new Error('delete not implemented');\n    },\n    deleteMany: async () => {\n        throw new Error('deleteMany is not implemented');\n    },\n    getList: async () => {\n        throw new Error('getList is not implemented');\n    },\n    getMany: async () => {\n        throw new Error('getMany is not implemented');\n    },\n    getManyReference: async () => {\n        throw new Error('getManyReference is not implemented');\n    },\n    getOne: async () => {\n        throw new Error('getOne is not implemented');\n    },\n    update: async () => {\n        throw new Error('update not implemented');\n    },\n    updateMany: async () => {\n        throw new Error('updateMany not implemented');\n    },\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,OAAO,IAAMA,mBAAmB,GAAiB;EAC7CC,MAAM,EAAE,SAAAA,CAAA;IAAA,OAAAC,SAAA;;QACJ,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;;;GAC/C;EACDC,MAAM,EAAE,SAAAA,CAAA;IAAA,OAAAF,SAAA;;QACJ,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;;;GAC5C;EACDE,UAAU,EAAE,SAAAA,CAAA;IAAA,OAAAH,SAAA;;QACR,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;;;GACnD;EACDG,OAAO,EAAE,SAAAA,CAAA;IAAA,OAAAJ,SAAA;;QACL,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;;GAChD;EACDI,OAAO,EAAE,SAAAA,CAAA;IAAA,OAAAL,SAAA;;QACL,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;;GAChD;EACDK,gBAAgB,EAAE,SAAAA,CAAA;IAAA,OAAAN,SAAA;;QACd,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;;;GACzD;EACDM,MAAM,EAAE,SAAAA,CAAA;IAAA,OAAAP,SAAA;;QACJ,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;;;GAC/C;EACDO,MAAM,EAAE,SAAAA,CAAA;IAAA,OAAAR,SAAA;;QACJ,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;;;GAC5C;EACDQ,UAAU,EAAE,SAAAA,CAAA;IAAA,OAAAT,SAAA;;QACR,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;;;CAEpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}