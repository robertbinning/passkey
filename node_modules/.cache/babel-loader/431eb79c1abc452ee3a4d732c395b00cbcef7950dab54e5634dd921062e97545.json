{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { Card, CardContent, styled } from '@mui/material';\nimport clsx from 'clsx';\nimport { useEditContext, useResourceDefinition } from 'ra-core';\nimport { EditActions } from './EditActions';\nimport { Title } from '../layout';\nvar defaultActions = React.createElement(EditActions, null);\nexport var EditView = function (props) {\n  var _a;\n  var actions = props.actions,\n    aside = props.aside,\n    children = props.children,\n    className = props.className,\n    _b = props.component,\n    Content = _b === void 0 ? Card : _b,\n    title = props.title,\n    rest = __rest(props, [\"actions\", \"aside\", \"children\", \"className\", \"component\", \"title\"]);\n  var hasShow = useResourceDefinition().hasShow;\n  var _c = useEditContext(),\n    resource = _c.resource,\n    defaultTitle = _c.defaultTitle,\n    record = _c.record;\n  var finalActions = typeof actions === 'undefined' && hasShow ? defaultActions : actions;\n  if (!children) {\n    return null;\n  }\n  return React.createElement(Root, __assign({\n    className: clsx('edit-page', className)\n  }, rest), React.createElement(Title, {\n    title: title,\n    defaultTitle: defaultTitle,\n    preferenceKey: \"\".concat(resource, \".edit.title\")\n  }), finalActions, React.createElement(\"div\", {\n    className: clsx(EditClasses.main, (_a = {}, _a[EditClasses.noActions] = !finalActions, _a))\n  }, React.createElement(Content, {\n    className: EditClasses.card\n  }, record ? children : React.createElement(CardContent, null, \"\\u00A0\")), aside));\n};\nvar PREFIX = 'RaEdit';\nexport var EditClasses = {\n  main: \"\".concat(PREFIX, \"-main\"),\n  noActions: \"\".concat(PREFIX, \"-noActions\"),\n  card: \"\".concat(PREFIX, \"-card\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {}, _a[\"& .\".concat(EditClasses.main)] = {\n  display: 'flex',\n  alignItems: 'flex-start'\n}, _a[\"& .\".concat(EditClasses.noActions)] = {\n  marginTop: '1em'\n}, _a[\"& .\".concat(EditClasses.card)] = {\n  flex: '1 1 auto'\n}, _a));","map":{"version":3,"names":["React","Card","CardContent","styled","clsx","useEditContext","useResourceDefinition","EditActions","Title","defaultActions","createElement","EditView","props","actions","aside","children","className","_b","component","Content","title","rest","__rest","hasShow","_c","resource","defaultTitle","record","finalActions","Root","__assign","preferenceKey","concat","EditClasses","main","_a","noActions","card","PREFIX","name","overridesResolver","styles","root","display","alignItems","marginTop","flex"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/detail/EditView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ElementType } from 'react';\nimport { Card, CardContent, styled, SxProps } from '@mui/material';\nimport clsx from 'clsx';\nimport { useEditContext, useResourceDefinition } from 'ra-core';\n\nimport { EditActions } from './EditActions';\nimport { Title } from '../layout';\n\nconst defaultActions = <EditActions />;\n\nexport const EditView = (props: EditViewProps) => {\n    const {\n        actions,\n        aside,\n        children,\n        className,\n        component: Content = Card,\n        title,\n        ...rest\n    } = props;\n\n    const { hasShow } = useResourceDefinition();\n    const { resource, defaultTitle, record } = useEditContext();\n\n    const finalActions =\n        typeof actions === 'undefined' && hasShow ? defaultActions : actions;\n    if (!children) {\n        return null;\n    }\n    return (\n        <Root className={clsx('edit-page', className)} {...rest}>\n            <Title\n                title={title}\n                defaultTitle={defaultTitle}\n                preferenceKey={`${resource}.edit.title`}\n            />\n            {finalActions}\n            <div\n                className={clsx(EditClasses.main, {\n                    [EditClasses.noActions]: !finalActions,\n                })}\n            >\n                <Content className={EditClasses.card}>\n                    {record ? children : <CardContent>&nbsp;</CardContent>}\n                </Content>\n                {aside}\n            </div>\n        </Root>\n    );\n};\n\nexport interface EditViewProps\n    extends Omit<React.HTMLAttributes<HTMLDivElement>, 'id' | 'title'> {\n    actions?: ReactElement | false;\n    aside?: ReactElement;\n    component?: ElementType;\n    title?: string | ReactElement;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaEdit';\n\nexport const EditClasses = {\n    main: `${PREFIX}-main`,\n    noActions: `${PREFIX}-noActions`,\n    card: `${PREFIX}-card`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    [`& .${EditClasses.main}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n    },\n    [`& .${EditClasses.noActions}`]: {\n        marginTop: '1em',\n    },\n    [`& .${EditClasses.card}`]: {\n        flex: '1 1 auto',\n    },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,IAAI,EAAEC,WAAW,EAAEC,MAAM,QAAiB,eAAe;AAClE,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,SAAS;AAE/D,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,KAAK,QAAQ,WAAW;AAEjC,IAAMC,cAAc,GAAGT,KAAA,CAAAU,aAAA,CAACH,WAAW,OAAG;AAEtC,OAAO,IAAMI,QAAQ,GAAG,SAAAA,CAACC,KAAoB;;EAErC,IAAAC,OAAO,GAOPD,KAAK,CAAAC,OAPE;IACPC,KAAK,GAMLF,KAAK,CAAAE,KANA;IACLC,QAAQ,GAKRH,KAAK,CAAAG,QALG;IACRC,SAAS,GAITJ,KAAK,CAAAI,SAJI;IACTC,EAAA,GAGAL,KAAK,CAAAM,SAHoB;IAAdC,OAAO,GAAAF,EAAA,cAAGhB,IAAI,GAAAgB,EAAA;IACzBG,KAAK,GAELR,KAAK,CAAAQ,KAFA;IACFC,IAAI,GAAAC,MAAA,CACPV,KAAK,EARH,mEAQL,CADU;EAGH,IAAAW,OAAO,GAAKjB,qBAAqB,EAAE,CAAAiB,OAA5B;EACT,IAAAC,EAAA,GAAqCnB,cAAc,EAAE;IAAnDoB,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IAAEC,YAAY,GAAAF,EAAA,CAAAE,YAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAqB;EAE3D,IAAMC,YAAY,GACd,OAAOf,OAAO,KAAK,WAAW,IAAIU,OAAO,GAAGd,cAAc,GAAGI,OAAO;EACxE,IAAI,CAACE,QAAQ,EAAE;IACX,OAAO,IAAI;;EAEf,OACIf,KAAA,CAAAU,aAAA,CAACmB,IAAI,EAAAC,QAAA;IAACd,SAAS,EAAEZ,IAAI,CAAC,WAAW,EAAEY,SAAS;EAAC,GAAMK,IAAI,GACnDrB,KAAA,CAAAU,aAAA,CAACF,KAAK;IACFY,KAAK,EAAEA,KAAK;IACZM,YAAY,EAAEA,YAAY;IAC1BK,aAAa,EAAE,GAAAC,MAAA,CAAGP,QAAQ;EAAa,EACzC,EACDG,YAAY,EACb5B,KAAA,CAAAU,aAAA;IACIM,SAAS,EAAEZ,IAAI,CAAC6B,WAAW,CAACC,IAAI,GAAAC,EAAA,OAC5BA,EAAA,CAACF,WAAW,CAACG,SAAS,IAAG,CAACR,YAAY,E;EACxC,GAEF5B,KAAA,CAAAU,aAAA,CAACS,OAAO;IAACH,SAAS,EAAEiB,WAAW,CAACI;EAAI,GAC/BV,MAAM,GAAGZ,QAAQ,GAAGf,KAAA,CAAAU,aAAA,CAACR,WAAW,iBAAqB,CAChD,EACTY,KAAK,CACJ,CACH;AAEf,CAAC;AAWD,IAAMwB,MAAM,GAAG,QAAQ;AAEvB,OAAO,IAAML,WAAW,GAAG;EACvBC,IAAI,EAAE,GAAAF,MAAA,CAAGM,MAAM,UAAO;EACtBF,SAAS,EAAE,GAAAJ,MAAA,CAAGM,MAAM,eAAY;EAChCD,IAAI,EAAE,GAAAL,MAAA,CAAGM,MAAM;CAClB;AAED,IAAMT,IAAI,GAAG1B,MAAM,CAAC,KAAK,EAAE;EACvBoC,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,SAAAA,CAAC5B,KAAK,EAAE6B,MAAM;IAAK,OAAAA,MAAM,CAACC,IAAI;EAAX;CACzC,CAAC,EAAAP,EAAA,OACEA,EAAA,CAAC,MAAAH,MAAA,CAAMC,WAAW,CAACC,IAAI,CAAE,IAAG;EACxBS,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE;CACf,EACDT,EAAA,CAAC,MAAAH,MAAA,CAAMC,WAAW,CAACG,SAAS,CAAE,IAAG;EAC7BS,SAAS,EAAE;CACd,EACDV,EAAA,CAAC,MAAAH,MAAA,CAAMC,WAAW,CAACI,IAAI,CAAE,IAAG;EACxBS,IAAI,EAAE;CACT,E,IACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}