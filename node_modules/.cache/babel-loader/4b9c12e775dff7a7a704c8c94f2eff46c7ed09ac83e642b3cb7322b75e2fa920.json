{"ast":null,"code":"import { useContext } from 'react';\nimport { CreateContext } from './CreateContext';\n/**\n * Hook to read the create controller props from the CreateContext.\n *\n * Used within a <CreateContextProvider> (e.g. as a descendent of <Create>).\n *\n * @returns {CreateControllerResult} create controller props\n *\n * @see useCreateController for how it is filled\n */\nexport var useCreateContext = function () {\n  var context = useContext(CreateContext);\n  if (!context) {\n    throw new Error('useCreateContext must be used inside a CreateContextProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["useContext","CreateContext","useCreateContext","context","Error"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/controller/create/useCreateContext.tsx"],"sourcesContent":["import { useContext } from 'react';\n\nimport { RaRecord } from '../../types';\nimport { CreateContext } from './CreateContext';\nimport { CreateControllerResult } from './useCreateController';\n\n/**\n * Hook to read the create controller props from the CreateContext.\n *\n * Used within a <CreateContextProvider> (e.g. as a descendent of <Create>).\n *\n * @returns {CreateControllerResult} create controller props\n *\n * @see useCreateController for how it is filled\n */\nexport const useCreateContext = <\n    RecordType extends RaRecord = RaRecord,\n>(): CreateControllerResult<RecordType> => {\n    const context = useContext(CreateContext);\n    if (!context) {\n        throw new Error(\n            'useCreateContext must be used inside a CreateContextProvider'\n        );\n    }\n    return context;\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAGlC,SAASC,aAAa,QAAQ,iBAAiB;AAG/C;;;;;;;;;AASA,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAAA;EAG5B,IAAMC,OAAO,GAAGH,UAAU,CAACC,aAAa,CAAC;EACzC,IAAI,CAACE,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CACX,8DAA8D,CACjE;;EAEL,OAAOD,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}