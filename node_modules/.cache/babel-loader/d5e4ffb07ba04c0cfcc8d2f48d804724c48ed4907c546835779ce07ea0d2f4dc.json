{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport { ArrayInputContext } from './ArrayInputContext';\n/**\n * A hook to access an array input methods as provided by react-hook-form.\n * Useful to create custom array input iterators.\n * @see {ArrayInput}\n * @see https://react-hook-form.com/docs/usefieldarray\n */\nexport var useArrayInput = function (props) {\n  var context = useContext(ArrayInputContext);\n  var memo = useMemo(function () {\n    return {\n      append: props === null || props === void 0 ? void 0 : props.append,\n      fields: props === null || props === void 0 ? void 0 : props.fields,\n      insert: props === null || props === void 0 ? void 0 : props.insert,\n      move: props === null || props === void 0 ? void 0 : props.move,\n      prepend: props === null || props === void 0 ? void 0 : props.prepend,\n      remove: props === null || props === void 0 ? void 0 : props.remove,\n      replace: props === null || props === void 0 ? void 0 : props.replace,\n      swap: props === null || props === void 0 ? void 0 : props.swap,\n      update: props === null || props === void 0 ? void 0 : props.update\n    };\n  }, [props]);\n  if (props === null || props === void 0 ? void 0 : props.fields) {\n    return memo;\n  }\n  if (!context) {\n    throw new Error('useArrayInput must be used inside an ArrayInputContextProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["useContext","useMemo","ArrayInputContext","useArrayInput","props","context","memo","append","fields","insert","move","prepend","remove","replace","swap","update","Error"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/input/ArrayInput/useArrayInput.ts"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { ArrayInputContext, ArrayInputContextValue } from './ArrayInputContext';\n\n/**\n * A hook to access an array input methods as provided by react-hook-form.\n * Useful to create custom array input iterators.\n * @see {ArrayInput}\n * @see https://react-hook-form.com/docs/usefieldarray\n */\nexport const useArrayInput = (\n    props?: Partial<ArrayInputContextValue>\n): ArrayInputContextValue => {\n    const context = useContext(ArrayInputContext);\n    const memo = useMemo(\n        () =>\n            ({\n                append: props?.append,\n                fields: props?.fields,\n                insert: props?.insert,\n                move: props?.move,\n                prepend: props?.prepend,\n                remove: props?.remove,\n                replace: props?.replace,\n                swap: props?.swap,\n                update: props?.update,\n            }) as ArrayInputContextValue,\n        [props]\n    );\n\n    if (props?.fields) {\n        return memo;\n    }\n    if (!context) {\n        throw new Error(\n            'useArrayInput must be used inside an ArrayInputContextProvider'\n        );\n    }\n\n    return context;\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,iBAAiB,QAAgC,qBAAqB;AAE/E;;;;;;AAMA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CACzBC,KAAuC;EAEvC,IAAMC,OAAO,GAAGL,UAAU,CAACE,iBAAiB,CAAC;EAC7C,IAAMI,IAAI,GAAGL,OAAO,CAChB;IACI,OAAC;MACGM,MAAM,EAAEH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,MAAM;MACrBC,MAAM,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,MAAM;MACrBC,MAAM,EAAEL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,MAAM;MACrBC,IAAI,EAAEN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,IAAI;MACjBC,OAAO,EAAEP,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,OAAO;MACvBC,MAAM,EAAER,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,MAAM;MACrBC,OAAO,EAAET,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES,OAAO;MACvBC,IAAI,EAAEV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,IAAI;MACjBC,MAAM,EAAEX,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW;KAClB;EAVD,CAU4B,EAChC,CAACX,KAAK,CAAC,CACV;EAED,IAAIA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,MAAM,EAAE;IACf,OAAOF,IAAI;;EAEf,IAAI,CAACD,OAAO,EAAE;IACV,MAAM,IAAIW,KAAK,CACX,gEAAgE,CACnE;;EAGL,OAAOX,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}