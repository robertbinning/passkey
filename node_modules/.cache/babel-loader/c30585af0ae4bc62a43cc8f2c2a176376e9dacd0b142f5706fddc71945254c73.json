{"ast":null,"code":"import { useContext } from 'react';\nimport { ListSortContext } from './ListSortContext';\n/**\n * Hook to read the list sort controller props from the ListSortContext.\n *\n * Must be used within a <ListSortContextProvider> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @returns {ListSortContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nexport var useListSortContext = function () {\n  var context = useContext(ListSortContext);\n  if (!context) {\n    throw new Error('useListSortContext must be used inside a ListSortContextProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["useContext","ListSortContext","useListSortContext","context","Error"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/controller/list/useListSortContext.ts"],"sourcesContent":["import { useContext } from 'react';\n\nimport { ListSortContext, ListSortContextValue } from './ListSortContext';\n\n/**\n * Hook to read the list sort controller props from the ListSortContext.\n *\n * Must be used within a <ListSortContextProvider> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @returns {ListSortContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nexport const useListSortContext = (): ListSortContextValue => {\n    const context = useContext(ListSortContext);\n    if (!context) {\n        throw new Error(\n            'useListSortContext must be used inside a ListSortContextProvider'\n        );\n    }\n    return context;\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SAASC,eAAe,QAA8B,mBAAmB;AAEzE;;;;;;;;;;AAUA,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAAA;EAC9B,IAAMC,OAAO,GAAGH,UAAU,CAACC,eAAe,CAAC;EAC3C,IAAI,CAACE,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CACX,kEAAkE,CACrE;;EAEL,OAAOD,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}