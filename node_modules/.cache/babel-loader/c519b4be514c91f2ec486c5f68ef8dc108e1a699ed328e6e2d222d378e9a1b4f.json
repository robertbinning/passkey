{"ast":null,"code":"import * as React from 'react';\nimport { FieldTitle, useResourceContext } from 'ra-core';\nimport { Switch, Typography } from '@mui/material';\nimport DragIcon from '@mui/icons-material/DragIndicator';\nimport { styled } from '@mui/material/styles';\n/**\n * UI to enable/disable a field\n */\nexport var FieldToggle = function (props) {\n  var selected = props.selected,\n    label = props.label,\n    onToggle = props.onToggle,\n    onMove = props.onMove,\n    source = props.source,\n    index = props.index;\n  var resource = useResourceContext();\n  var dropIndex = React.useRef(null);\n  var x = React.useRef(null);\n  var y = React.useRef(null);\n  var handleDocumentDragOver = React.useCallback(function (event) {\n    x.current = event.clientX;\n    y.current = event.clientY;\n  }, []);\n  var handleDragStart = function () {\n    document.addEventListener('dragover', handleDocumentDragOver);\n  };\n  var handleDrag = function (event) {\n    // imperative DOM manipulations using the native Drag API\n    var selectedItem = event.target;\n    selectedItem.classList.add('drag-active');\n    var list = selectedItem.closest('ul');\n    if (x.current == null || y.current == null) {\n      return;\n    }\n    var elementAtDragCoordinates = document.elementFromPoint(x.current, y.current);\n    var dropItem = elementAtDragCoordinates === null ? selectedItem : elementAtDragCoordinates.closest('li');\n    if (!dropItem) {\n      return;\n    }\n    if (dropItem.classList.contains('dragIcon')) {\n      dropItem = dropItem.parentNode;\n    }\n    if (dropItem === selectedItem) {\n      return;\n    }\n    if (list === dropItem.parentNode.closest('ul')) {\n      dropIndex.current = dropItem.dataset.index;\n      if (dropItem === selectedItem.nextSibling) {\n        dropItem = dropItem.nextSibling;\n      }\n      list.insertBefore(selectedItem, dropItem);\n    }\n  };\n  var handleDragEnd = function (event) {\n    var selectedItem = event.target;\n    var list = selectedItem.closest('ul');\n    var elementFromPoint = x.current != null && y.current != null ? document.elementFromPoint(x.current, y.current) : null;\n    var dropItem = x.current == null || y.current == null || elementFromPoint === null ? selectedItem : elementFromPoint.closest('li');\n    if (y.current !== null && list && !dropItem) {\n      var closestUL = selectedItem.closest('ul');\n      if (closestUL && y.current > closestUL.getBoundingClientRect().bottom) {\n        dropItem = list.lastChild;\n      } else {\n        dropItem = list.firstChild;\n      }\n    }\n    if (dropItem && list === dropItem.closest('ul')) {\n      onMove(selectedItem.dataset.index, dropIndex.current);\n    } else {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    selectedItem.classList.remove('drag-active');\n    document.removeEventListener('dragover', handleDocumentDragOver);\n  };\n  var handleDragOver = function (event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n  return React.createElement(Root, {\n    key: source,\n    draggable: onMove ? 'true' : undefined,\n    onDrag: onMove ? handleDrag : undefined,\n    onDragStart: onMove ? handleDragStart : undefined,\n    onDragEnd: onMove ? handleDragEnd : undefined,\n    onDragOver: onMove ? handleDragOver : undefined,\n    \"data-index\": index\n  }, React.createElement(\"label\", {\n    htmlFor: \"switch_\".concat(index)\n  }, React.createElement(Switch, {\n    checked: selected,\n    onChange: onToggle,\n    name: index,\n    id: \"switch_\".concat(index),\n    size: \"small\",\n    sx: {\n      mr: 0.5,\n      ml: -0.5\n    }\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\"\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource\n  }))), onMove && React.createElement(DragIcon, {\n    className: \"dragIcon\",\n    color: \"disabled\",\n    fontSize: \"small\"\n  }));\n};\nvar Root = styled('li', {\n  name: 'RaFieldToggle',\n  overridesResolver: function (_props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingLeft: 0,\n    '& svg': {\n      cursor: 'move'\n    },\n    '&.drag-active': {\n      background: 'transparent',\n      color: 'transparent',\n      outline: \"1px solid \".concat(theme.palette.action.selected),\n      '& .MuiSwitch-root, & svg': {\n        visibility: 'hidden'\n      }\n    }\n  };\n});","map":{"version":3,"names":["React","FieldTitle","useResourceContext","Switch","Typography","DragIcon","styled","FieldToggle","props","selected","label","onToggle","onMove","source","index","resource","dropIndex","useRef","x","y","handleDocumentDragOver","useCallback","event","current","clientX","clientY","handleDragStart","document","addEventListener","handleDrag","selectedItem","target","classList","add","list","closest","elementAtDragCoordinates","elementFromPoint","dropItem","contains","parentNode","dataset","nextSibling","insertBefore","handleDragEnd","closestUL","getBoundingClientRect","bottom","lastChild","firstChild","preventDefault","stopPropagation","remove","removeEventListener","handleDragOver","dataTransfer","dropEffect","createElement","Root","key","draggable","undefined","onDrag","onDragStart","onDragEnd","onDragOver","htmlFor","concat","checked","onChange","name","id","size","sx","mr","ml","variant","component","className","color","fontSize","overridesResolver","_props","styles","root","_a","theme","display","justifyContent","paddingLeft","cursor","background","outline","palette","action","visibility"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/preferences/FieldToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FieldTitle, useResourceContext } from 'ra-core';\nimport { Switch, Typography } from '@mui/material';\nimport DragIcon from '@mui/icons-material/DragIndicator';\nimport { styled } from '@mui/material/styles';\n\n/**\n * UI to enable/disable a field\n */\nexport const FieldToggle = props => {\n    const { selected, label, onToggle, onMove, source, index } = props;\n    const resource = useResourceContext();\n    const dropIndex = React.useRef<number | null>(null);\n    const x = React.useRef<number | null>(null);\n    const y = React.useRef<number | null>(null);\n\n    const handleDocumentDragOver = React.useCallback(event => {\n        x.current = event.clientX;\n        y.current = event.clientY;\n    }, []);\n\n    const handleDragStart = () => {\n        document.addEventListener('dragover', handleDocumentDragOver);\n    };\n\n    const handleDrag = event => {\n        // imperative DOM manipulations using the native Drag API\n        const selectedItem = event.target;\n        selectedItem.classList.add('drag-active');\n        const list = selectedItem.closest('ul');\n        if (x.current == null || y.current == null) {\n            return;\n        }\n        const elementAtDragCoordinates = document.elementFromPoint(\n            x.current,\n            y.current\n        );\n        let dropItem =\n            elementAtDragCoordinates === null\n                ? selectedItem\n                : elementAtDragCoordinates.closest('li');\n\n        if (!dropItem) {\n            return;\n        }\n        if (dropItem.classList.contains('dragIcon')) {\n            dropItem = dropItem.parentNode;\n        }\n        if (dropItem === selectedItem) {\n            return;\n        }\n        if (list === dropItem.parentNode.closest('ul')) {\n            dropIndex.current = dropItem.dataset.index;\n            if (dropItem === selectedItem.nextSibling) {\n                dropItem = dropItem.nextSibling;\n            }\n            list.insertBefore(selectedItem, dropItem);\n        }\n    };\n\n    const handleDragEnd = event => {\n        const selectedItem = event.target as HTMLElement;\n        const list = selectedItem.closest('ul');\n\n        const elementFromPoint =\n            x.current != null && y.current != null\n                ? document.elementFromPoint(x.current, y.current)\n                : null;\n\n        let dropItem =\n            x.current == null || y.current == null || elementFromPoint === null\n                ? selectedItem\n                : elementFromPoint.closest('li');\n\n        if (y.current !== null && list && !dropItem) {\n            const closestUL = selectedItem.closest('ul');\n            if (\n                closestUL &&\n                y.current > closestUL.getBoundingClientRect().bottom\n            ) {\n                dropItem = list.lastChild as HTMLElement;\n            } else {\n                dropItem = list.firstChild as HTMLElement;\n            }\n        }\n\n        if (dropItem && list === dropItem.closest('ul')) {\n            onMove(selectedItem.dataset.index, dropIndex.current);\n        } else {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        selectedItem.classList.remove('drag-active');\n        document.removeEventListener('dragover', handleDocumentDragOver);\n    };\n\n    const handleDragOver = event => {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'move';\n    };\n\n    return (\n        <Root\n            key={source}\n            draggable={onMove ? 'true' : undefined}\n            onDrag={onMove ? handleDrag : undefined}\n            onDragStart={onMove ? handleDragStart : undefined}\n            onDragEnd={onMove ? handleDragEnd : undefined}\n            onDragOver={onMove ? handleDragOver : undefined}\n            data-index={index}\n        >\n            <label htmlFor={`switch_${index}`}>\n                <Switch\n                    checked={selected}\n                    onChange={onToggle}\n                    name={index}\n                    id={`switch_${index}`}\n                    size=\"small\"\n                    sx={{ mr: 0.5, ml: -0.5 }}\n                />\n                <Typography variant=\"body2\" component=\"span\">\n                    <FieldTitle\n                        label={label}\n                        source={source}\n                        resource={resource}\n                    />\n                </Typography>\n            </label>\n            {onMove && (\n                <DragIcon\n                    className=\"dragIcon\"\n                    color=\"disabled\"\n                    fontSize=\"small\"\n                />\n            )}\n        </Root>\n    );\n};\n\nconst Root = styled('li', {\n    name: 'RaFieldToggle',\n    overridesResolver: (_props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    paddingLeft: 0,\n    '& svg': {\n        cursor: 'move',\n    },\n    '&.drag-active': {\n        background: 'transparent',\n        color: 'transparent',\n        outline: `1px solid ${theme.palette.action.selected}`,\n        '& .MuiSwitch-root, & svg': {\n            visibility: 'hidden',\n        },\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}