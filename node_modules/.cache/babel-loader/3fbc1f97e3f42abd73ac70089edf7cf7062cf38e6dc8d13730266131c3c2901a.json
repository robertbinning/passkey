{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { FormProvider } from 'react-hook-form';\nimport { UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext } from 'react-router';\nimport { FormGroupsProvider } from './FormGroupsProvider';\nimport { useRecordContext, OptionalRecordContextProvider } from '../controller';\nimport { SourceContextProvider, useResourceContext } from '../core';\nimport { WarnWhenUnsavedChanges } from './WarnWhenUnsavedChanges';\nimport { useAugmentedForm } from './useAugmentedForm';\n/**\n * Creates a form element, initialized with the current record, calling the saveContext on submit\n *\n * Wrapper around react-hook-form's useForm, FormContextProvider, and <form>.\n * Also sets up a FormGroupContext, and handles submission validation.\n *\n * @example\n *\n * const MyForm = ({ record, defaultValues, validate }) => (\n *    <Form record={record} defaultValues={defaultValues} validate={validate}>\n *        <Stack>\n *            <TextInput source=\"title\" />\n *            <SaveButton />\n *        </Stack>\n *    </Form>\n * );\n *\n * @typedef {Object} Props the props you can use\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {Function} save\n *\n * @see useForm\n * @see FormGroupContext\n *\n * @link https://react-hook-form.com/docs/useformcontext\n */\nexport function Form(props) {\n  var children = props.children,\n    id = props.id,\n    className = props.className,\n    _a = props.noValidate,\n    noValidate = _a === void 0 ? false : _a,\n    formRootPathname = props.formRootPathname,\n    warnWhenUnsavedChanges = props.warnWhenUnsavedChanges,\n    _b = props.WarnWhenUnsavedChangesComponent,\n    WarnWhenUnsavedChangesComponent = _b === void 0 ? WarnWhenUnsavedChanges : _b;\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n  var _c = useAugmentedForm(props),\n    form = _c.form,\n    formHandleSubmit = _c.formHandleSubmit;\n  var sourceContext = React.useMemo(function () {\n    return {\n      getSource: function (source) {\n        return source;\n      },\n      getLabel: function (source) {\n        return \"resources.\".concat(resource, \".fields.\").concat(source);\n      }\n    };\n  }, [resource]);\n  var dataRouterContext = useContext(UNSAFE_DataRouterContext);\n  var dataRouterStateContext = useContext(UNSAFE_DataRouterStateContext);\n  if (warnWhenUnsavedChanges && (!dataRouterContext || !dataRouterStateContext) && process.env.NODE_ENV === 'development') {\n    console.error('Cannot use the warnWhenUnsavedChanges feature outside of a DataRouter. ' + 'The warnWhenUnsavedChanges feature is disabled. ' + 'Remove the warnWhenUnsavedChanges prop or convert your custom router to a Data Router.');\n  }\n  return React.createElement(OptionalRecordContextProvider, {\n    value: record\n  }, React.createElement(SourceContextProvider, {\n    value: sourceContext\n  }, React.createElement(FormProvider, __assign({}, form), React.createElement(FormGroupsProvider, null, React.createElement(\"form\", {\n    onSubmit: formHandleSubmit,\n    noValidate: noValidate,\n    id: id,\n    className: className\n  }, children), warnWhenUnsavedChanges && dataRouterContext && dataRouterStateContext && React.createElement(WarnWhenUnsavedChangesComponent, {\n    enable: true,\n    formRootPathName: formRootPathname,\n    formControl: form.control\n  })))));\n}","map":{"version":3,"names":["React","useContext","FormProvider","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","FormGroupsProvider","useRecordContext","OptionalRecordContextProvider","SourceContextProvider","useResourceContext","WarnWhenUnsavedChanges","useAugmentedForm","Form","props","children","id","className","_a","noValidate","formRootPathname","warnWhenUnsavedChanges","_b","WarnWhenUnsavedChangesComponent","record","resource","_c","form","formHandleSubmit","sourceContext","useMemo","getSource","source","getLabel","concat","dataRouterContext","dataRouterStateContext","process","env","NODE_ENV","console","error","createElement","value","__assign","onSubmit","enable","formRootPathName","formControl","control"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/form/Form.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, useContext } from 'react';\nimport {\n    FormProvider,\n    FieldValues,\n    UseFormProps,\n    SubmitHandler,\n} from 'react-hook-form';\nimport {\n    UNSAFE_DataRouterContext,\n    UNSAFE_DataRouterStateContext,\n} from 'react-router';\n\nimport { FormGroupsProvider } from './FormGroupsProvider';\nimport { RaRecord } from '../types';\nimport {\n    useRecordContext,\n    OptionalRecordContextProvider,\n    SaveHandler,\n} from '../controller';\nimport {\n    SourceContextProvider,\n    SourceContextValue,\n    useResourceContext,\n} from '../core';\nimport { ValidateForm } from './getSimpleValidationResolver';\nimport { WarnWhenUnsavedChanges } from './WarnWhenUnsavedChanges';\nimport { useAugmentedForm } from './useAugmentedForm';\n\n/**\n * Creates a form element, initialized with the current record, calling the saveContext on submit\n *\n * Wrapper around react-hook-form's useForm, FormContextProvider, and <form>.\n * Also sets up a FormGroupContext, and handles submission validation.\n *\n * @example\n *\n * const MyForm = ({ record, defaultValues, validate }) => (\n *    <Form record={record} defaultValues={defaultValues} validate={validate}>\n *        <Stack>\n *            <TextInput source=\"title\" />\n *            <SaveButton />\n *        </Stack>\n *    </Form>\n * );\n *\n * @typedef {Object} Props the props you can use\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {Function} save\n *\n * @see useForm\n * @see FormGroupContext\n *\n * @link https://react-hook-form.com/docs/useformcontext\n */\nexport function Form<RecordType = any>(props: FormProps<RecordType>) {\n    const {\n        children,\n        id,\n        className,\n        noValidate = false,\n        formRootPathname,\n        warnWhenUnsavedChanges,\n        WarnWhenUnsavedChangesComponent = WarnWhenUnsavedChanges,\n    } = props;\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n    const { form, formHandleSubmit } = useAugmentedForm(props);\n    const sourceContext = React.useMemo<SourceContextValue>(\n        () => ({\n            getSource: (source: string) => source,\n            getLabel: (source: string) =>\n                `resources.${resource}.fields.${source}`,\n        }),\n        [resource]\n    );\n    const dataRouterContext = useContext(UNSAFE_DataRouterContext);\n    const dataRouterStateContext = useContext(UNSAFE_DataRouterStateContext);\n    if (\n        warnWhenUnsavedChanges &&\n        (!dataRouterContext || !dataRouterStateContext) &&\n        process.env.NODE_ENV === 'development'\n    ) {\n        console.error(\n            'Cannot use the warnWhenUnsavedChanges feature outside of a DataRouter. ' +\n                'The warnWhenUnsavedChanges feature is disabled. ' +\n                'Remove the warnWhenUnsavedChanges prop or convert your custom router to a Data Router.'\n        );\n    }\n\n    return (\n        <OptionalRecordContextProvider value={record}>\n            <SourceContextProvider value={sourceContext}>\n                <FormProvider {...form}>\n                    <FormGroupsProvider>\n                        <form\n                            onSubmit={formHandleSubmit}\n                            noValidate={noValidate}\n                            id={id}\n                            className={className}\n                        >\n                            {children}\n                        </form>\n                        {warnWhenUnsavedChanges &&\n                            dataRouterContext &&\n                            dataRouterStateContext && (\n                                <WarnWhenUnsavedChangesComponent\n                                    enable\n                                    formRootPathName={formRootPathname}\n                                    formControl={form.control}\n                                />\n                            )}\n                    </FormGroupsProvider>\n                </FormProvider>\n            </SourceContextProvider>\n        </OptionalRecordContextProvider>\n    );\n}\n\nexport type FormProps<RecordType = any> = FormOwnProps<RecordType> &\n    Omit<UseFormProps, 'onSubmit'> & {\n        validate?: ValidateForm;\n        noValidate?: boolean;\n        WarnWhenUnsavedChangesComponent?: React.ComponentType<{\n            enable?: boolean;\n            formRootPathName?: string;\n            formControl?: any;\n        }>;\n    };\n\nexport interface FormOwnProps<RecordType = any> {\n    children: ReactNode;\n    className?: string;\n    defaultValues?: any;\n    formRootPathname?: string;\n    id?: string;\n    record?: Partial<RaRecord>;\n    resource?: string;\n    onSubmit?: SubmitHandler<FieldValues> | SaveHandler<RecordType>;\n    warnWhenUnsavedChanges?: boolean;\n    sanitizeEmptyValues?: boolean;\n    disableInvalidFormNotification?: boolean;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}