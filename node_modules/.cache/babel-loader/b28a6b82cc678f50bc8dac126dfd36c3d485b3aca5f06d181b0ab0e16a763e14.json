{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useShowController() hook.\n *\n * Use the useShowContext() hook to read the context. That's what the Show components do in react-admin.\n *\n * @example\n *\n * import { useShowController, ShowContextProvider } from 'ra-core';\n *\n * const Show = props => {\n *     const controllerProps = useShowController(props);\n *     return (\n *         <ShowContextProvider value={controllerProps}>\n *             ...\n *         </ShowContextProvider>\n *     );\n * };\n */\nexport var ShowContext = createContext(null);\nShowContext.displayName = 'ShowContext';","map":{"version":3,"names":["createContext","ShowContext","displayName"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/controller/show/ShowContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { ShowControllerResult } from './useShowController';\n\n/**\n * Context to store the result of the useShowController() hook.\n *\n * Use the useShowContext() hook to read the context. That's what the Show components do in react-admin.\n *\n * @example\n *\n * import { useShowController, ShowContextProvider } from 'ra-core';\n *\n * const Show = props => {\n *     const controllerProps = useShowController(props);\n *     return (\n *         <ShowContextProvider value={controllerProps}>\n *             ...\n *         </ShowContextProvider>\n *     );\n * };\n */\nexport const ShowContext = createContext<ShowControllerResult | null>(null);\n\nShowContext.displayName = 'ShowContext';\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AAGrC;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,WAAW,GAAGD,aAAa,CAA8B,IAAI,CAAC;AAE3EC,WAAW,CAACC,WAAW,GAAG,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}