{"ast":null,"code":"import * as React from 'react';\nimport { localStorageStore } from 'ra-core';\nimport { AdminUI, AdminContext } from 'ra-ui-materialui';\nimport { defaultI18nProvider } from './defaultI18nProvider';\nvar defaultStore = localStorageStore();\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     defaultI18nProvider,\n *     localStorageStore,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const store = localStorageStore();\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider} i18nProvider={defaultI18nProvider} store={store}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\nexport var Admin = function (props) {\n  var authProvider = props.authProvider,\n    basename = props.basename,\n    catchAll = props.catchAll,\n    children = props.children,\n    dashboard = props.dashboard,\n    dataProvider = props.dataProvider,\n    disableTelemetry = props.disableTelemetry,\n    error = props.error,\n    _a = props.i18nProvider,\n    i18nProvider = _a === void 0 ? defaultI18nProvider : _a,\n    layout = props.layout,\n    loading = props.loading,\n    loginPage = props.loginPage,\n    authCallbackPage = props.authCallbackPage,\n    notification = props.notification,\n    queryClient = props.queryClient,\n    requireAuth = props.requireAuth,\n    _b = props.store,\n    store = _b === void 0 ? defaultStore : _b,\n    ready = props.ready,\n    theme = props.theme,\n    lightTheme = props.lightTheme,\n    darkTheme = props.darkTheme,\n    defaultTheme = props.defaultTheme,\n    _c = props.title,\n    title = _c === void 0 ? 'React Admin' : _c;\n  if (loginPage === true && process.env.NODE_ENV !== 'production') {\n    console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n  }\n  return React.createElement(AdminContext, {\n    authProvider: authProvider,\n    basename: basename,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    store: store,\n    queryClient: queryClient,\n    theme: theme,\n    lightTheme: lightTheme,\n    darkTheme: darkTheme,\n    defaultTheme: defaultTheme\n  }, React.createElement(AdminUI, {\n    layout: layout,\n    dashboard: dashboard,\n    disableTelemetry: disableTelemetry,\n    catchAll: catchAll,\n    error: error,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    authCallbackPage: authCallbackPage,\n    notification: notification,\n    requireAuth: requireAuth,\n    ready: ready\n  }, children));\n};\nexport default Admin;","map":{"version":3,"names":["React","localStorageStore","AdminUI","AdminContext","defaultI18nProvider","defaultStore","Admin","props","authProvider","basename","catchAll","children","dashboard","dataProvider","disableTelemetry","error","_a","i18nProvider","layout","loading","loginPage","authCallbackPage","notification","queryClient","requireAuth","_b","store","ready","theme","lightTheme","darkTheme","defaultTheme","_c","title","process","env","NODE_ENV","console","warn","createElement"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/src/Admin.tsx"],"sourcesContent":["import * as React from 'react';\nimport { localStorageStore } from 'ra-core';\nimport {\n    AdminUI,\n    AdminContext,\n    AdminContextProps,\n    AdminUIProps,\n} from 'ra-ui-materialui';\n\nimport { defaultI18nProvider } from './defaultI18nProvider';\nconst defaultStore = localStorageStore();\n\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import * as React from 'react';\nimport { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     defaultI18nProvider,\n *     localStorageStore,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const store = localStorageStore();\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider} i18nProvider={defaultI18nProvider} store={store}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\nexport const Admin = (props: AdminProps) => {\n    const {\n        authProvider,\n        basename,\n        catchAll,\n        children,\n        dashboard,\n        dataProvider,\n        disableTelemetry,\n        error,\n        i18nProvider = defaultI18nProvider,\n        layout,\n        loading,\n        loginPage,\n        authCallbackPage,\n        notification,\n        queryClient,\n        requireAuth,\n        store = defaultStore,\n        ready,\n        theme,\n        lightTheme,\n        darkTheme,\n        defaultTheme,\n        title = 'React Admin',\n    } = props;\n\n    if (loginPage === true && process.env.NODE_ENV !== 'production') {\n        console.warn(\n            'You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it'\n        );\n    }\n\n    return (\n        <AdminContext\n            authProvider={authProvider}\n            basename={basename}\n            dataProvider={dataProvider}\n            i18nProvider={i18nProvider}\n            store={store}\n            queryClient={queryClient}\n            theme={theme}\n            lightTheme={lightTheme}\n            darkTheme={darkTheme}\n            defaultTheme={defaultTheme}\n        >\n            <AdminUI\n                layout={layout}\n                dashboard={dashboard}\n                disableTelemetry={disableTelemetry}\n                catchAll={catchAll}\n                error={error}\n                title={title}\n                loading={loading}\n                loginPage={loginPage}\n                authCallbackPage={authCallbackPage}\n                notification={notification}\n                requireAuth={requireAuth}\n                ready={ready}\n            >\n                {children}\n            </AdminUI>\n        </AdminContext>\n    );\n};\n\nexport default Admin;\n\nexport interface AdminProps extends AdminContextProps, AdminUIProps {}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}