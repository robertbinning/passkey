{"ast":null,"code":"import { useContext } from 'react';\nimport { ListPaginationContext } from './ListPaginationContext';\n/**\n * Hook to read the list pagination controller props from the ListPaginationContext.\n *\n * Must be used within a <ListPaginationContext> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @returns {ListPaginationContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nexport var useListPaginationContext = function () {\n  var context = useContext(ListPaginationContext);\n  if (!context) {\n    throw new Error('useListPaginationContext must be used inside a ListPaginationContextProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["useContext","ListPaginationContext","useListPaginationContext","context","Error"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/controller/list/useListPaginationContext.ts"],"sourcesContent":["import { useContext } from 'react';\n\nimport {\n    ListPaginationContext,\n    ListPaginationContextValue,\n} from './ListPaginationContext';\n\n/**\n * Hook to read the list pagination controller props from the ListPaginationContext.\n *\n * Must be used within a <ListPaginationContext> (e.g. as a descendent of <List>\n * or <ListBase>).\n *\n * @returns {ListPaginationContextValue} list controller props\n *\n * @see useListController for how it is filled\n */\nexport const useListPaginationContext = (): ListPaginationContextValue => {\n    const context = useContext(ListPaginationContext);\n    if (!context) {\n        throw new Error(\n            'useListPaginationContext must be used inside a ListPaginationContextProvider'\n        );\n    }\n    return context;\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SACIC,qBAAqB,QAElB,yBAAyB;AAEhC;;;;;;;;;;AAUA,OAAO,IAAMC,wBAAwB,GAAG,SAAAA,CAAA;EACpC,IAAMC,OAAO,GAAGH,UAAU,CAACC,qBAAqB,CAAC;EACjD,IAAI,CAACE,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CACX,8EAA8E,CACjF;;EAEL,OAAOD,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}