{"ast":null,"code":"import * as React from 'react';\nimport { useEffect, isValidElement, createElement } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { CoreAdminRoutes } from './CoreAdminRoutes';\nimport { Ready } from '../util';\nvar DefaultLayout = function (_a) {\n  var children = _a.children;\n  return React.createElement(React.Fragment, null, children);\n};\nexport var CoreAdminUI = function (props) {\n  var _a = props.catchAll,\n    catchAll = _a === void 0 ? Noop : _a,\n    children = props.children,\n    dashboard = props.dashboard,\n    _b = props.disableTelemetry,\n    disableTelemetry = _b === void 0 ? false : _b,\n    _c = props.layout,\n    layout = _c === void 0 ? DefaultLayout : _c,\n    _d = props.loading,\n    loading = _d === void 0 ? Noop : _d,\n    _e = props.loginPage,\n    LoginPage = _e === void 0 ? false : _e,\n    _f = props.authCallbackPage,\n    LoginCallbackPage = _f === void 0 ? false : _f,\n    menu = props.menu,\n    // deprecated, use a custom layout instead\n    _g = props.ready,\n    // deprecated, use a custom layout instead\n    ready = _g === void 0 ? Ready : _g,\n    _h = props.title,\n    title = _h === void 0 ? 'React Admin' : _h,\n    _j = props.requireAuth,\n    requireAuth = _j === void 0 ? false : _j;\n  useEffect(function () {\n    if (disableTelemetry || process.env.NODE_ENV !== 'production' || typeof window === 'undefined' || typeof window.location === 'undefined' || typeof Image === 'undefined') {\n      return;\n    }\n    var img = new Image();\n    img.src = \"https://react-admin-telemetry.marmelab.com/react-admin-telemetry?domain=\".concat(window.location.hostname);\n  }, [disableTelemetry]);\n  return React.createElement(Routes, null, LoginPage !== false && LoginPage !== true ? React.createElement(Route, {\n    path: \"/login\",\n    element: createOrGetElement(LoginPage)\n  }) : null, LoginCallbackPage !== false && LoginCallbackPage !== true ? React.createElement(Route, {\n    path: \"/auth-callback\",\n    element: createOrGetElement(LoginCallbackPage)\n  }) : null, React.createElement(Route, {\n    path: \"/*\",\n    element: React.createElement(CoreAdminRoutes, {\n      catchAll: catchAll,\n      dashboard: dashboard,\n      layout: layout,\n      loading: loading,\n      menu: menu,\n      requireAuth: requireAuth,\n      ready: ready,\n      title: title\n    }, children)\n  }));\n};\nvar createOrGetElement = function (el) {\n  return isValidElement(el) ? el : createElement(el);\n};\nvar Noop = function () {\n  return null;\n};","map":{"version":3,"names":["React","useEffect","isValidElement","createElement","Routes","Route","CoreAdminRoutes","Ready","DefaultLayout","_a","children","Fragment","CoreAdminUI","props","catchAll","Noop","dashboard","_b","disableTelemetry","_c","layout","_d","loading","_e","loginPage","LoginPage","_f","authCallbackPage","LoginCallbackPage","menu","_g","ready","_h","title","_j","requireAuth","process","env","NODE_ENV","window","location","Image","img","src","concat","hostname","path","element","createOrGetElement","el"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/ra-core/src/core/CoreAdminUI.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ComponentType, useEffect, isValidElement, createElement } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport { CoreAdminRoutes } from './CoreAdminRoutes';\nimport { Ready } from '../util';\nimport {\n    TitleComponent,\n    LoginComponent,\n    LayoutComponent,\n    CoreLayoutProps,\n    AdminChildren,\n    CatchAllComponent,\n    DashboardComponent,\n    LoadingComponent,\n} from '../types';\n\nexport type ChildrenFunction = () => ComponentType[];\n\nconst DefaultLayout = ({ children }: CoreLayoutProps) => <>{children}</>;\n\nexport interface CoreAdminUIProps {\n    /**\n     * A catch-all react component to display when the URL does not match any\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#catchall\n     * @example\n     * // in src/NotFound.js\n     * import Card from '@mui/material/Card';\n     * import CardContent from '@mui/material/CardContent';\n     * import { Title } from 'react-admin';\n     *\n     * export const NotFound = () => (\n     *     <Card>\n     *         <Title title=\"Not Found\" />\n     *         <CardContent>\n     *             <h1>404: Page not found</h1>\n     *         </CardContent>\n     *     </Card>\n     * );\n     *\n     * // in src/App.js\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { NotFound } from './NotFound';\n     *\n     * const App = () => (\n     *     <Admin catchAll={NotFound} dataProvider={dataProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    catchAll?: CatchAllComponent;\n\n    children?: AdminChildren;\n\n    /**\n     * The component to use for the dashboard page (displayed on the `/` route).\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#dashboard\n     * @example\n     * import { Admin } from 'react-admin';\n     * import Dashboard from './Dashboard';\n     * import { dataProvider } from './dataProvider';\n     *\n     * const App = () => (\n     *     <Admin dashboard={Dashboard} dataProvider={dataProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    dashboard?: DashboardComponent;\n\n    /**\n     * Set to true to disable anonymous telemetry collection\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#disabletelemetry\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     *\n     * const App = () => (\n     *     <Admin disableTelemetry dataProvider={dataProvider}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    disableTelemetry?: boolean;\n\n    /**\n     * The main app layout component\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#layout\n     * @example\n     * import { Admin, Layout } from 'react-admin';\n     *\n     * const MyLayout = props => <Layout {...props} appBarAlwaysOn />;\n     *\n     * export const App = () => (\n     *     <Admin dataProvider={dataProvider} layout={MyLayout}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    layout?: LayoutComponent;\n\n    /**\n     * The component displayed while fetching the auth provider if the admin child is an async function\n     */\n    loading?: LoadingComponent;\n\n    /**\n     * The content displayed when the user visits the /auth-callback page, used for redirection by third-party authentication providers\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#authcallbackpage\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { authProvider } from './authProvider';\n     * import MyAuthCallbackPage from './MyAuthCallbackPage';\n     *\n     * const App = () => (\n     *     <Admin\n     *         authCallbackPage={MyAuthCallbackPage}\n     *         authProvider={authProvider}\n     *         dataProvider={dataProvider}\n     *     >\n     *         ...\n     *     </Admin>\n     * );\n     */\n    authCallbackPage?: ComponentType | boolean;\n\n    /**\n     * The component displayed when the user visits the /login page\n     * @see https://marmelab.com/react-admin/Admin.html#loginpage\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { authProvider } from './authProvider';\n     * import MyLoginPage from './MyLoginPage';\n     *\n     * const App = () => (\n     *     <Admin\n     *         loginPage={MyLoginPage}\n     *         authProvider={authProvider}\n     *         dataProvider={dataProvider}\n     *     >\n     *         ...\n     *     </Admin>\n     * );\n     */\n    loginPage?: LoginComponent | boolean;\n\n    /**\n     * @deprecated use a custom layout instead\n     * @see https://marmelab.com/react-admin/Admin.html#layout\n     */\n    menu?: ComponentType;\n\n    /**\n     * Flag to require authentication for all routes. Defaults to false.\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#requireauth\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     * import { authProvider } from './authProvider';\n     *\n     * const App = () => (\n     *     <Admin\n     *         requireAuth\n     *         authProvider={authProvider}\n     *         dataProvider={dataProvider}\n     *     >\n     *         ...\n     *     </Admin>\n     * );\n     */\n    requireAuth?: boolean;\n\n    /**\n     * The page to display when the admin has no Resource children\n     *\n     * @see https://marmelab.com/react-admin/Admin.html#ready\n     * @example\n     * import { Admin } from 'react-admin';\n     *\n     * const Ready = () => (\n     *     <div>\n     *         <h1>Admin ready</h1>\n     *         <p>You can now add resources</p>\n     *     </div>\n     * )\n     *\n     * const App = () => (\n     *     <Admin ready={Ready}>\n     *         ...\n     *     </Admin>\n     * );\n     */\n    ready?: ComponentType;\n\n    /**\n     * The title of the error page\n     * @see https://marmelab.com/react-admin/Admin.html#title\n     * @example\n     * import { Admin } from 'react-admin';\n     * import { dataProvider } from './dataProvider';\n     *\n     * const App = () => (\n     *    <Admin title=\"My Admin\" dataProvider={dataProvider}>\n     *       ...\n     *   </Admin>\n     * );\n     */\n    title?: TitleComponent;\n}\n\nexport const CoreAdminUI = (props: CoreAdminUIProps) => {\n    const {\n        catchAll = Noop,\n        children,\n        dashboard,\n        disableTelemetry = false,\n        layout = DefaultLayout,\n        loading = Noop,\n        loginPage: LoginPage = false,\n        authCallbackPage: LoginCallbackPage = false,\n        menu, // deprecated, use a custom layout instead\n        ready = Ready,\n        title = 'React Admin',\n        requireAuth = false,\n    } = props;\n\n    useEffect(() => {\n        if (\n            disableTelemetry ||\n            process.env.NODE_ENV !== 'production' ||\n            typeof window === 'undefined' ||\n            typeof window.location === 'undefined' ||\n            typeof Image === 'undefined'\n        ) {\n            return;\n        }\n        const img = new Image();\n        img.src = `https://react-admin-telemetry.marmelab.com/react-admin-telemetry?domain=${window.location.hostname}`;\n    }, [disableTelemetry]);\n\n    return (\n        <Routes>\n            {LoginPage !== false && LoginPage !== true ? (\n                <Route path=\"/login\" element={createOrGetElement(LoginPage)} />\n            ) : null}\n\n            {LoginCallbackPage !== false && LoginCallbackPage !== true ? (\n                <Route\n                    path=\"/auth-callback\"\n                    element={createOrGetElement(LoginCallbackPage)}\n                />\n            ) : null}\n\n            <Route\n                path=\"/*\"\n                element={\n                    <CoreAdminRoutes\n                        catchAll={catchAll}\n                        dashboard={dashboard}\n                        layout={layout}\n                        loading={loading}\n                        menu={menu}\n                        requireAuth={requireAuth}\n                        ready={ready}\n                        title={title}\n                    >\n                        {children}\n                    </CoreAdminRoutes>\n                }\n            />\n        </Routes>\n    );\n};\n\nconst createOrGetElement = el => (isValidElement(el) ? el : createElement(el));\n\nconst Noop = () => null;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}