{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport ActionCheck from '@mui/icons-material/CheckCircle';\nimport AlertError from '@mui/icons-material/ErrorOutline';\nimport clsx from 'clsx';\nimport { useTranslate } from 'ra-core';\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     ConfirmIcon=ActionCheck\n *     CancelIcon=AlertError\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nexport var Confirm = function (props) {\n  var _a;\n  var className = props.className,\n    _b = props.isOpen,\n    isOpen = _b === void 0 ? false : _b,\n    loading = props.loading,\n    title = props.title,\n    content = props.content,\n    _c = props.cancel,\n    cancel = _c === void 0 ? 'ra.action.cancel' : _c,\n    _d = props.confirm,\n    confirm = _d === void 0 ? 'ra.action.confirm' : _d,\n    _e = props.confirmColor,\n    confirmColor = _e === void 0 ? 'primary' : _e,\n    _f = props.ConfirmIcon,\n    ConfirmIcon = _f === void 0 ? ActionCheck : _f,\n    _g = props.CancelIcon,\n    CancelIcon = _g === void 0 ? AlertError : _g,\n    onClose = props.onClose,\n    onConfirm = props.onConfirm,\n    _h = props.translateOptions,\n    translateOptions = _h === void 0 ? {} : _h,\n    rest = __rest(props, [\"className\", \"isOpen\", \"loading\", \"title\", \"content\", \"cancel\", \"confirm\", \"confirmColor\", \"ConfirmIcon\", \"CancelIcon\", \"onClose\", \"onConfirm\", \"translateOptions\"]);\n  var translate = useTranslate();\n  var handleConfirm = useCallback(function (e) {\n    e.stopPropagation();\n    onConfirm(e);\n  }, [onConfirm]);\n  var handleClick = useCallback(function (e) {\n    e.stopPropagation();\n  }, []);\n  return React.createElement(StyledDialog, __assign({\n    className: className,\n    open: isOpen,\n    onClose: onClose,\n    onClick: handleClick,\n    \"aria-labelledby\": \"alert-dialog-title\"\n  }, rest), React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, typeof title === 'string' ? translate(title, __assign({\n    _: title\n  }, translateOptions)) : title), React.createElement(DialogContent, null, typeof content === 'string' ? React.createElement(DialogContentText, null, translate(content, __assign({\n    _: content\n  }, translateOptions))) : content), React.createElement(DialogActions, null, React.createElement(Button, {\n    disabled: loading,\n    onClick: onClose,\n    startIcon: React.createElement(CancelIcon, null)\n  }, translate(cancel, {\n    _: cancel\n  })), React.createElement(Button, {\n    disabled: loading,\n    onClick: handleConfirm,\n    className: clsx('ra-confirm', (_a = {}, _a[ConfirmClasses.confirmWarning] = confirmColor === 'warning', _a[ConfirmClasses.confirmPrimary] = confirmColor === 'primary', _a)),\n    autoFocus: true,\n    startIcon: React.createElement(ConfirmIcon, null)\n  }, translate(confirm, {\n    _: confirm\n  }))));\n};\nvar PREFIX = 'RaConfirm';\nexport var ConfirmClasses = {\n  confirmPrimary: \"\".concat(PREFIX, \"-confirmPrimary\"),\n  confirmWarning: \"\".concat(PREFIX, \"-confirmWarning\")\n};\nvar StyledDialog = styled(Dialog, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(ConfirmClasses.confirmPrimary)] = {\n    color: theme.palette.primary.main\n  }, _b[\"& .\".concat(ConfirmClasses.confirmWarning)] = {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, _b;\n});","map":{"version":3,"names":["React","styled","useCallback","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","alpha","ActionCheck","AlertError","clsx","useTranslate","Confirm","props","className","_b","isOpen","loading","title","content","_c","cancel","_d","confirm","_e","confirmColor","_f","ConfirmIcon","_g","CancelIcon","onClose","onConfirm","_h","translateOptions","rest","__rest","translate","handleConfirm","e","stopPropagation","handleClick","createElement","StyledDialog","__assign","open","onClick","id","_","disabled","startIcon","_a","ConfirmClasses","confirmWarning","confirmPrimary","autoFocus","PREFIX","concat","name","overridesResolver","styles","root","theme","color","palette","primary","main","error","backgroundColor"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/layout/Confirm.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback, MouseEventHandler, ComponentType } from 'react';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport ActionCheck from '@mui/icons-material/CheckCircle';\nimport AlertError from '@mui/icons-material/ErrorOutline';\nimport clsx from 'clsx';\nimport { useTranslate } from 'ra-core';\n\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     ConfirmIcon=ActionCheck\n *     CancelIcon=AlertError\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nexport const Confirm = (props: ConfirmProps) => {\n    const {\n        className,\n        isOpen = false,\n        loading,\n        title,\n        content,\n        cancel = 'ra.action.cancel',\n        confirm = 'ra.action.confirm',\n        confirmColor = 'primary',\n        ConfirmIcon = ActionCheck,\n        CancelIcon = AlertError,\n        onClose,\n        onConfirm,\n        translateOptions = {},\n        ...rest\n    } = props;\n\n    const translate = useTranslate();\n\n    const handleConfirm = useCallback(\n        e => {\n            e.stopPropagation();\n            onConfirm(e);\n        },\n        [onConfirm]\n    );\n\n    const handleClick = useCallback(e => {\n        e.stopPropagation();\n    }, []);\n\n    return (\n        <StyledDialog\n            className={className}\n            open={isOpen}\n            onClose={onClose}\n            onClick={handleClick}\n            aria-labelledby=\"alert-dialog-title\"\n            {...rest}\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {typeof title === 'string'\n                    ? translate(title, { _: title, ...translateOptions })\n                    : title}\n            </DialogTitle>\n            <DialogContent>\n                {typeof content === 'string' ? (\n                    <DialogContentText>\n                        {translate(content, {\n                            _: content,\n                            ...translateOptions,\n                        })}\n                    </DialogContentText>\n                ) : (\n                    content\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={loading}\n                    onClick={onClose}\n                    startIcon={<CancelIcon />}\n                >\n                    {translate(cancel, { _: cancel })}\n                </Button>\n                <Button\n                    disabled={loading}\n                    onClick={handleConfirm}\n                    className={clsx('ra-confirm', {\n                        [ConfirmClasses.confirmWarning]:\n                            confirmColor === 'warning',\n                        [ConfirmClasses.confirmPrimary]:\n                            confirmColor === 'primary',\n                    })}\n                    autoFocus\n                    startIcon={<ConfirmIcon />}\n                >\n                    {translate(confirm, { _: confirm })}\n                </Button>\n            </DialogActions>\n        </StyledDialog>\n    );\n};\n\nexport interface ConfirmProps\n    extends Omit<DialogProps, 'open' | 'onClose' | 'title' | 'content'> {\n    cancel?: string;\n    className?: string;\n    confirm?: string;\n    confirmColor?: 'primary' | 'warning';\n    ConfirmIcon?: ComponentType;\n    CancelIcon?: ComponentType;\n    content: React.ReactNode;\n    isOpen?: boolean;\n    loading?: boolean;\n    onClose: MouseEventHandler;\n    onConfirm: MouseEventHandler;\n    title: React.ReactNode;\n    translateOptions?: object;\n}\n\nconst PREFIX = 'RaConfirm';\n\nexport const ConfirmClasses = {\n    confirmPrimary: `${PREFIX}-confirmPrimary`,\n    confirmWarning: `${PREFIX}-confirmWarning`,\n};\n\nconst StyledDialog = styled(Dialog, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${ConfirmClasses.confirmPrimary}`]: {\n        color: theme.palette.primary.main,\n    },\n\n    [`& .${ConfirmClasses.confirmWarning}`]: {\n        color: theme.palette.error.main,\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.error.main, 0.12),\n            // Reset on mouse devices\n            '@media (hover: none)': {\n                backgroundColor: 'transparent',\n            },\n        },\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}