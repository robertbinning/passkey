{"ast":null,"code":"import { useContext } from 'react';\nimport { ThemesContext } from './ThemesContext';\nexport var useThemesContext = function (params) {\n  var _a = params || {},\n    lightTheme = _a.lightTheme,\n    darkTheme = _a.darkTheme,\n    defaultTheme = _a.defaultTheme;\n  var context = useContext(ThemesContext);\n  return {\n    lightTheme: lightTheme || context.lightTheme,\n    darkTheme: darkTheme || context.darkTheme,\n    defaultTheme: defaultTheme !== null && defaultTheme !== void 0 ? defaultTheme : context.defaultTheme\n  };\n};","map":{"version":3,"names":["useContext","ThemesContext","useThemesContext","params","_a","lightTheme","darkTheme","defaultTheme","context"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/theme/useThemesContext.ts"],"sourcesContent":["import { useContext } from 'react';\n\nimport { ThemesContext } from './ThemesContext';\nimport { RaThemeOptions } from './types';\n\nexport const useThemesContext = (params?: UseThemesContextParams) => {\n    const { lightTheme, darkTheme, defaultTheme } = params || {};\n    const context = useContext(ThemesContext);\n    return {\n        lightTheme: lightTheme || context.lightTheme,\n        darkTheme: darkTheme || context.darkTheme,\n        defaultTheme: defaultTheme ?? context.defaultTheme,\n    };\n};\n\nexport interface UseThemesContextParams {\n    lightTheme?: RaThemeOptions;\n    darkTheme?: RaThemeOptions;\n    defaultTheme?: 'dark' | 'light';\n    [key: string]: any;\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SAASC,aAAa,QAAQ,iBAAiB;AAG/C,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAACC,MAA+B;EACtD,IAAAC,EAAA,GAA0CD,MAAM,IAAI,EAAE;IAApDE,UAAU,GAAAD,EAAA,CAAAC,UAAA;IAAEC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IAAEC,YAAY,GAAAH,EAAA,CAAAG,YAAiB;EAC5D,IAAMC,OAAO,GAAGR,UAAU,CAACC,aAAa,CAAC;EACzC,OAAO;IACHI,UAAU,EAAEA,UAAU,IAAIG,OAAO,CAACH,UAAU;IAC5CC,SAAS,EAAEA,SAAS,IAAIE,OAAO,CAACF,SAAS;IACzCC,YAAY,EAAEA,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAIC,OAAO,CAACD;GACzC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}