{"ast":null,"code":"var _jsxFileName = \"/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/pages/wizard/test/test.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./test.css\"; // Import the CSS file\nimport ChatMessage from \"./chatMessage.tsx\"; // Import the ChatMessage component\nimport PrimaryButton from \"../../../components/buttons/primaryButton/primaryButton.tsx\"; // Import the PrimaryButton component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSend = () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: inputValue\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputValue(\"\");\n    setLoading(true);\n    setTimeout(() => {\n      const aiMessage = {\n        sender: \"ai\",\n        text: \"This is the AI response.\"\n      };\n      setMessages(prevMessages => [...prevMessages, aiMessage]);\n      setLoading(false);\n    }, 1000); // Simulate loading time\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        sender: message.sender,\n        text: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(ChatMessage, {\n        sender: \"ai\",\n        text: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"chat-textarea\",\n        rows: 3,\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        text: \"Send\",\n        onClick: handleSend,\n        enabled: !loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"WLkZNmqGWjeWEV//hgO+xiETnhs=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","ChatMessage","PrimaryButton","jsxDEV","_jsxDEV","Test","_s","messages","setMessages","inputValue","setInputValue","loading","setLoading","handleSend","trim","userMessage","sender","text","prevMessages","setTimeout","aiMessage","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","e","target","onClick","enabled","_c","$RefreshReg$"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/pages/wizard/test/test.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./test.css\";  // Import the CSS file\nimport ChatMessage from \"./chatMessage.tsx\";  // Import the ChatMessage component\nimport PrimaryButton from \"../../../components/buttons/primaryButton/primaryButton.tsx\"; // Import the PrimaryButton component\n\ninterface Message {\n  sender: \"user\" | \"ai\";\n  text: string;\n}\n\nconst Test: React.FC = () => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSend = () => {\n    if (!inputValue.trim()) return;\n\n    const userMessage: Message = { sender: \"user\", text: inputValue };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setInputValue(\"\");\n\n    setLoading(true);\n    setTimeout(() => {\n      const aiMessage: Message = { sender: \"ai\", text: \"This is the AI response.\" };\n      setMessages((prevMessages) => [...prevMessages, aiMessage]);\n      setLoading(false);\n    }, 1000); // Simulate loading time\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-history\">\n        {messages.map((message, index) => (\n          <ChatMessage\n            key={index}\n            sender={message.sender}\n            text={message.text}\n          />\n        ))}\n        {loading && (\n          <ChatMessage sender=\"ai\" text=\"Loading...\" />\n        )}\n      </div>\n      <div className=\"chat-input-container\">\n        <textarea\n          className=\"chat-textarea\"\n          rows={3}\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <PrimaryButton\n          text=\"Send\"\n          onClick={handleSend}\n          enabled={!loading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}