{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { useTranslate, useExpandAll, useResourceContext } from 'ra-core';\nimport { DatagridClasses } from './useDatagridStyles';\nimport clsx from 'clsx';\nvar ExpandAllButton = function (_a) {\n  var _b;\n  var ids = _a.ids;\n  var translate = useTranslate();\n  var resource = useResourceContext();\n  var _c = useExpandAll(resource || '', ids),\n    expanded = _c[0],\n    toggleExpanded = _c[1];\n  if (!resource) return null;\n  return React.createElement(IconButton, {\n    className: clsx(DatagridClasses.expandIcon, (_b = {}, _b[DatagridClasses.expanded] = expanded, _b)),\n    \"aria-label\": translate(expanded ? 'ra.action.close' : 'ra.action.expand'),\n    \"aria-expanded\": expanded,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    onClick: toggleExpanded,\n    size: \"small\"\n  }, React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\"\n  }));\n};\nexport default memo(ExpandAllButton);","map":{"version":3,"names":["React","memo","IconButton","ExpandMoreIcon","useTranslate","useExpandAll","useResourceContext","DatagridClasses","clsx","ExpandAllButton","_a","ids","translate","resource","_c","expanded","toggleExpanded","createElement","className","expandIcon","_b","tabIndex","onClick","size","fontSize"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/datagrid/ExpandAllButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { useTranslate, useExpandAll, useResourceContext } from 'ra-core';\nimport { DatagridClasses } from './useDatagridStyles';\nimport clsx from 'clsx';\n\ninterface ExpandAllButtonProps {\n    ids: string[] | number[];\n}\n\nconst ExpandAllButton = ({ ids }: ExpandAllButtonProps) => {\n    const translate = useTranslate();\n    const resource = useResourceContext();\n    const [expanded, toggleExpanded] = useExpandAll(resource || '', ids);\n\n    if (!resource) return null;\n    return (\n        <IconButton\n            className={clsx(DatagridClasses.expandIcon, {\n                [DatagridClasses.expanded]: expanded,\n            })}\n            aria-label={translate(\n                expanded ? 'ra.action.close' : 'ra.action.expand'\n            )}\n            aria-expanded={expanded}\n            tabIndex={-1}\n            aria-hidden=\"true\"\n            onClick={toggleExpanded}\n            size=\"small\"\n        >\n            <ExpandMoreIcon fontSize=\"inherit\" />\n        </IconButton>\n    );\n};\n\nexport default memo(ExpandAllButton);\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAQ,OAAO;AAC5B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,YAAY,EAAEC,YAAY,EAAEC,kBAAkB,QAAQ,SAAS;AACxE,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,IAAI,MAAM,MAAM;AAMvB,IAAMC,eAAe,GAAG,SAAAA,CAACC,EAA6B;;MAA3BC,GAAG,GAAAD,EAAA,CAAAC,GAAA;EAC1B,IAAMC,SAAS,GAAGR,YAAY,EAAE;EAChC,IAAMS,QAAQ,GAAGP,kBAAkB,EAAE;EAC/B,IAAAQ,EAAA,GAA6BT,YAAY,CAACQ,QAAQ,IAAI,EAAE,EAAEF,GAAG,CAAC;IAA7DI,QAAQ,GAAAD,EAAA;IAAEE,cAAc,GAAAF,EAAA,GAAqC;EAEpE,IAAI,CAACD,QAAQ,EAAE,OAAO,IAAI;EAC1B,OACIb,KAAA,CAAAiB,aAAA,CAACf,UAAU;IACPgB,SAAS,EAAEV,IAAI,CAACD,eAAe,CAACY,UAAU,GAAAC,EAAA,OACtCA,EAAA,CAACb,eAAe,CAACQ,QAAQ,IAAGA,QAAQ,E,IACtC;IAAA,cACUH,SAAS,CACjBG,QAAQ,GAAG,iBAAiB,GAAG,kBAAkB,CACpD;IAAA,iBACcA,QAAQ;IACvBM,QAAQ,EAAE,CAAC,CAAC;IAAA,eACA,MAAM;IAClBC,OAAO,EAAEN,cAAc;IACvBO,IAAI,EAAC;EAAO,GAEZvB,KAAA,CAAAiB,aAAA,CAACd,cAAc;IAACqB,QAAQ,EAAC;EAAS,EAAG,CAC5B;AAErB,CAAC;AAED,eAAevB,IAAI,CAACQ,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}