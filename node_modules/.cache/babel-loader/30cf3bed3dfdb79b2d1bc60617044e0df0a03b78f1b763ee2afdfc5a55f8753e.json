{"ast":null,"code":"import { useCallback } from 'react';\nimport { useRecordSelection } from './useRecordSelection';\n/**\n * Hook to Unselect the rows of a datagrid\n *\n * @example\n *\n * const unselect = useUnselect('posts');\n * unselect([123, 456]);\n */\nexport var useUnselect = function (resource) {\n  var _a = useRecordSelection(resource ? {\n      resource: resource\n    } : {\n      disableSyncWithStore: true\n    }),\n    unselect = _a[1].unselect;\n  return useCallback(function (ids) {\n    unselect(ids);\n  }, [unselect]);\n};","map":{"version":3,"names":["useCallback","useRecordSelection","useUnselect","resource","_a","disableSyncWithStore","unselect","ids"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/controller/list/useUnselect.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { useRecordSelection } from './useRecordSelection';\nimport { Identifier } from '../../types';\n\n/**\n * Hook to Unselect the rows of a datagrid\n *\n * @example\n *\n * const unselect = useUnselect('posts');\n * unselect([123, 456]);\n */\nexport const useUnselect = (resource?: string) => {\n    const [, { unselect }] = useRecordSelection(\n        resource ? { resource } : { disableSyncWithStore: true }\n    );\n    return useCallback(\n        (ids: Identifier[]) => {\n            unselect(ids);\n        },\n        [unselect]\n    );\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,SAASC,kBAAkB,QAAQ,sBAAsB;AAGzD;;;;;;;;AAQA,OAAO,IAAMC,WAAW,GAAG,SAAAA,CAACC,QAAiB;EACnC,IAAAC,EAAA,GAAmBH,kBAAkB,CACvCE,QAAQ,GAAG;MAAEA,QAAQ,EAAAA;IAAA,CAAE,GAAG;MAAEE,oBAAoB,EAAE;IAAI,CAAE,CAC3D;IAFUC,QAAQ,GAAAF,EAAA,IAAAE,QAElB;EACD,OAAON,WAAW,CACd,UAACO,GAAiB;IACdD,QAAQ,CAACC,GAAG,CAAC;EACjB,CAAC,EACD,CAACD,QAAQ,CAAC,CACb;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}