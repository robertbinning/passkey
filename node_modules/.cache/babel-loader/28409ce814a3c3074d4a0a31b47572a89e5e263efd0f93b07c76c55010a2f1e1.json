{"ast":null,"code":"import { useContext } from 'react';\nimport { InfinitePaginationContext } from './InfinitePaginationContext';\n/**\n * Hook to read the infinite pagination callbacks from the InfinitePaginationContext.\n *\n * Must be used within a <InfinitePaginationContext.Provider> (e.g. as a descendent of <InfiniteList>\n * or <InfiniteListBase>).\n *\n * @typedef {Object} InfinitePaginationContextValue\n * @prop {Function} fetchNextPage a callback to fetch the next page\n * @prop {Function} fetchPreviousPage a callback to fetch the previous page\n *\n * @returns {InfinitePaginationContextValue} infinite pagination callbacks\n *\n * @see useInfiniteListController for how the callbacks are built\n */\nexport var useInfinitePaginationContext = function () {\n  return useContext(InfinitePaginationContext);\n};","map":{"version":3,"names":["useContext","InfinitePaginationContext","useInfinitePaginationContext"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/ra-core/src/controller/list/useInfinitePaginationContext.ts"],"sourcesContent":["import { useContext } from 'react';\n\nimport {\n    InfinitePaginationContext,\n    InfinitePaginationContextValue,\n} from './InfinitePaginationContext';\n\n/**\n * Hook to read the infinite pagination callbacks from the InfinitePaginationContext.\n *\n * Must be used within a <InfinitePaginationContext.Provider> (e.g. as a descendent of <InfiniteList>\n * or <InfiniteListBase>).\n *\n * @typedef {Object} InfinitePaginationContextValue\n * @prop {Function} fetchNextPage a callback to fetch the next page\n * @prop {Function} fetchPreviousPage a callback to fetch the previous page\n *\n * @returns {InfinitePaginationContextValue} infinite pagination callbacks\n *\n * @see useInfiniteListController for how the callbacks are built\n */\nexport const useInfinitePaginationContext = (): InfinitePaginationContextValue =>\n    useContext(InfinitePaginationContext);\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SACIC,yBAAyB,QAEtB,6BAA6B;AAEpC;;;;;;;;;;;;;;AAcA,OAAO,IAAMC,4BAA4B,GAAG,SAAAA,CAAA;EACxC,OAAAF,UAAU,CAACC,yBAAyB,CAAC;AAArC,CAAqC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}