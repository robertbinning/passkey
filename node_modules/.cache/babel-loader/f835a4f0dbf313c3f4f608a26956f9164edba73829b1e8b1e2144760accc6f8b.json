{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CloseIcon from '@mui/icons-material/RemoveCircleOutline';\nimport clsx from 'clsx';\nimport { IconButtonWithTooltip } from '../../button';\nimport { useSimpleFormIteratorItem } from './useSimpleFormIteratorItem';\nimport { useSimpleFormIterator } from './useSimpleFormIterator';\nexport var RemoveItemButton = function (props) {\n  var _a = useSimpleFormIteratorItem(),\n    remove = _a.remove,\n    index = _a.index;\n  var source = useSimpleFormIterator().source;\n  var className = props.className,\n    rest = __rest(props, [\"className\"]);\n  return React.createElement(IconButtonWithTooltip, __assign({\n    label: \"ra.action.remove\",\n    size: \"small\",\n    onClick: function () {\n      return remove();\n    },\n    color: \"warning\",\n    className: clsx(\"button-remove button-remove-\".concat(source, \"-\").concat(index), className)\n  }, rest), React.createElement(CloseIcon, {\n    fontSize: \"small\"\n  }));\n};","map":{"version":3,"names":["React","CloseIcon","clsx","IconButtonWithTooltip","useSimpleFormIteratorItem","useSimpleFormIterator","RemoveItemButton","props","_a","remove","index","source","className","rest","__rest","createElement","__assign","label","size","onClick","color","concat","fontSize"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/input/ArrayInput/RemoveItemButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport CloseIcon from '@mui/icons-material/RemoveCircleOutline';\nimport clsx from 'clsx';\n\nimport { IconButtonWithTooltip, ButtonProps } from '../../button';\nimport { useSimpleFormIteratorItem } from './useSimpleFormIteratorItem';\nimport { useSimpleFormIterator } from './useSimpleFormIterator';\n\nexport const RemoveItemButton = (props: Omit<ButtonProps, 'onClick'>) => {\n    const { remove, index } = useSimpleFormIteratorItem();\n    const { source } = useSimpleFormIterator();\n    const { className, ...rest } = props;\n\n    return (\n        <IconButtonWithTooltip\n            label=\"ra.action.remove\"\n            size=\"small\"\n            onClick={() => remove()}\n            color=\"warning\"\n            className={clsx(\n                `button-remove button-remove-${source}-${index}`,\n                className\n            )}\n            {...rest}\n        >\n            <CloseIcon fontSize=\"small\" />\n        </IconButtonWithTooltip>\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,yCAAyC;AAC/D,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,qBAAqB,QAAqB,cAAc;AACjE,SAASC,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,qBAAqB,QAAQ,yBAAyB;AAE/D,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAACC,KAAmC;EAC1D,IAAAC,EAAA,GAAoBJ,yBAAyB,EAAE;IAA7CK,MAAM,GAAAD,EAAA,CAAAC,MAAA;IAAEC,KAAK,GAAAF,EAAA,CAAAE,KAAgC;EAC7C,IAAAC,MAAM,GAAKN,qBAAqB,EAAE,CAAAM,MAA5B;EACN,IAAAC,SAAS,GAAcL,KAAK,CAAAK,SAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKP,KAAK,EAA9B,aAAsB,CAAF;EAE1B,OACIP,KAAA,CAAAe,aAAA,CAACZ,qBAAqB,EAAAa,QAAA;IAClBC,KAAK,EAAC,kBAAkB;IACxBC,IAAI,EAAC,OAAO;IACZC,OAAO,EAAE,SAAAA,CAAA;MAAM,OAAAV,MAAM,EAAE;IAAR,CAAQ;IACvBW,KAAK,EAAC,SAAS;IACfR,SAAS,EAAEV,IAAI,CACX,+BAAAmB,MAAA,CAA+BV,MAAM,OAAAU,MAAA,CAAIX,KAAK,CAAE,EAChDE,SAAS;EACZ,GACGC,IAAI,GAERb,KAAA,CAAAe,aAAA,CAACd,SAAS;IAACqB,QAAQ,EAAC;EAAO,EAAG,CACV;AAEhC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}