{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { CreateBase, useCheckMinimumRequiredProps } from 'ra-core';\nimport { CreateView } from './CreateView';\n/**\n * Page component for the Create view\n *\n * The `<Create>` component renders the page title and actions.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleForm>`),\n * to which it passes the `record` as prop.\n *\n * The <Create> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - mutationOptions\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Create, SimpleForm, TextInput } from 'react-admin';\n *\n * export const PostCreate = () => (\n *     <Create>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostCreate } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" create={PostCreate} />\n *     </Admin>\n * );\n * export default App;\n */\nexport var Create = function (props) {\n  useCheckMinimumRequiredProps('Create', ['children'], props);\n  var resource = props.resource,\n    record = props.record,\n    redirect = props.redirect,\n    transform = props.transform,\n    mutationOptions = props.mutationOptions,\n    disableAuthentication = props.disableAuthentication,\n    hasEdit = props.hasEdit,\n    hasShow = props.hasShow,\n    rest = __rest(props, [\"resource\", \"record\", \"redirect\", \"transform\", \"mutationOptions\", \"disableAuthentication\", \"hasEdit\", \"hasShow\"]);\n  return React.createElement(CreateBase, {\n    resource: resource,\n    record: record,\n    redirect: redirect,\n    transform: transform,\n    mutationOptions: mutationOptions,\n    disableAuthentication: disableAuthentication,\n    hasEdit: hasEdit,\n    hasShow: hasShow\n  }, React.createElement(CreateView, __assign({}, rest)));\n};","map":{"version":3,"names":["React","CreateBase","useCheckMinimumRequiredProps","CreateView","Create","props","resource","record","redirect","transform","mutationOptions","disableAuthentication","hasEdit","hasShow","rest","__rest","createElement","__assign"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/detail/Create.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\nimport {\n    CreateBase,\n    CreateControllerProps,\n    Identifier,\n    RaRecord,\n    useCheckMinimumRequiredProps,\n} from 'ra-core';\n\nimport { CreateView, CreateViewProps } from './CreateView';\n\n/**\n * Page component for the Create view\n *\n * The `<Create>` component renders the page title and actions.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleForm>`),\n * to which it passes the `record` as prop.\n *\n * The <Create> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - mutationOptions\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Create, SimpleForm, TextInput } from 'react-admin';\n *\n * export const PostCreate = () => (\n *     <Create>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostCreate } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" create={PostCreate} />\n *     </Admin>\n * );\n * export default App;\n */\nexport const Create = <\n    RecordType extends Omit<RaRecord, 'id'> = any,\n    ResultRecordType extends RaRecord = RecordType & { id: Identifier },\n>(\n    props: CreateProps<RecordType, Error, ResultRecordType>\n): ReactElement => {\n    useCheckMinimumRequiredProps('Create', ['children'], props);\n    const {\n        resource,\n        record,\n        redirect,\n        transform,\n        mutationOptions,\n        disableAuthentication,\n        hasEdit,\n        hasShow,\n        ...rest\n    } = props;\n    return (\n        <CreateBase<RecordType, ResultRecordType>\n            resource={resource}\n            record={record}\n            redirect={redirect}\n            transform={transform}\n            mutationOptions={mutationOptions}\n            disableAuthentication={disableAuthentication}\n            hasEdit={hasEdit}\n            hasShow={hasShow}\n        >\n            <CreateView {...rest} />\n        </CreateBase>\n    );\n};\n\nexport interface CreateProps<\n    RecordType extends Omit<RaRecord, 'id'> = any,\n    MutationOptionsError = Error,\n    ResultRecordType extends RaRecord = RecordType & { id: Identifier },\n> extends CreateControllerProps<\n            RecordType,\n            MutationOptionsError,\n            ResultRecordType\n        >,\n        CreateViewProps {}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SACIC,UAAU,EAIVC,4BAA4B,QACzB,SAAS;AAEhB,SAASC,UAAU,QAAyB,cAAc;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAO,IAAMC,MAAM,GAAG,SAAAA,CAIlBC,KAAuD;EAEvDH,4BAA4B,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,EAAEG,KAAK,CAAC;EAEvD,IAAAC,QAAQ,GASRD,KAAK,CAAAC,QATG;IACRC,MAAM,GAQNF,KAAK,CAAAE,MARC;IACNC,QAAQ,GAORH,KAAK,CAAAG,QAPG;IACRC,SAAS,GAMTJ,KAAK,CAAAI,SANI;IACTC,eAAe,GAKfL,KAAK,CAAAK,eALU;IACfC,qBAAqB,GAIrBN,KAAK,CAAAM,qBAJgB;IACrBC,OAAO,GAGPP,KAAK,CAAAO,OAHE;IACPC,OAAO,GAEPR,KAAK,CAAAQ,OAFE;IACJC,IAAI,GAAAC,MAAA,CACPV,KAAK,EAVH,iHAUL,CADU;EAEX,OACIL,KAAA,CAAAgB,aAAA,CAACf,UAAU;IACPK,QAAQ,EAAEA,QAAQ;IAClBC,MAAM,EAAEA,MAAM;IACdC,QAAQ,EAAEA,QAAQ;IAClBC,SAAS,EAAEA,SAAS;IACpBC,eAAe,EAAEA,eAAe;IAChCC,qBAAqB,EAAEA,qBAAqB;IAC5CC,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA;EAAO,GAEhBb,KAAA,CAAAgB,aAAA,CAACb,UAAU,EAAAc,QAAA,KAAKH,IAAI,EAAI,CACf;AAErB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}