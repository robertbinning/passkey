{"ast":null,"code":"var _jsxFileName = \"/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/Register.js\";\nimport React from 'react';\nimport { createCredential } from './webauthn';\nimport './Register.css';\nimport logo from './kwaai.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  const handleRegister = async () => {\n    const email = document.getElementById('email').value;\n    if (!email) {\n      alert('Please enter an email address.');\n      return;\n    }\n    try {\n      const credential = await createCredential(email);\n      console.log('Credential created:', credential);\n      const response = await fetch('https://localhost/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: credential.id,\n          rawId: btoa(String.fromCharCode(...new Uint8Array(credential.rawId))),\n          // Encode rawId to Base64\n          response: {\n            attestationObject: btoa(String.fromCharCode(...new Uint8Array(credential.response.attestationObject))),\n            // Encode to Base64\n            clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(credential.response.clientDataJSON))) // Encode to Base64\n          },\n          type: credential.type,\n          email: email // Include email in the request\n        })\n      });\n      if (response.ok) {\n        console.log('Registered successfully');\n      } else {\n        console.error('Registration failed');\n      }\n    } catch (error) {\n      console.error('Error creating credential:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Kwaai Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"auth-button\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"auth-link\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","createCredential","logo","jsxDEV","_jsxDEV","Register","handleRegister","email","document","getElementById","value","alert","credential","console","log","response","fetch","method","headers","body","JSON","stringify","id","rawId","btoa","String","fromCharCode","Uint8Array","attestationObject","clientDataJSON","type","ok","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","href","_c","$RefreshReg$"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/Register.js"],"sourcesContent":["import React from 'react';\nimport { createCredential } from './webauthn';\nimport './Register.css';\nimport logo from './kwaai.png';\n\nconst Register = () => {\n    const handleRegister = async () => {\n        const email = document.getElementById('email').value;\n        \n        if (!email) {\n            alert('Please enter an email address.');\n            return;\n        }\n\n        try {\n            const credential = await createCredential(email);\n            console.log('Credential created:', credential);\n\n            const response = await fetch('https://localhost/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: credential.id,\n                    rawId: btoa(String.fromCharCode(...new Uint8Array(credential.rawId))), // Encode rawId to Base64\n                    response: {\n                        attestationObject: btoa(String.fromCharCode(...new Uint8Array(credential.response.attestationObject))), // Encode to Base64\n                        clientDataJSON: btoa(String.fromCharCode(...new Uint8Array(credential.response.clientDataJSON))), // Encode to Base64\n                    },\n                    type: credential.type,\n                    email: email, // Include email in the request\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Registered successfully');\n            } else {\n                console.error('Registration failed');\n            }\n        } catch (error) {\n            console.error('Error creating credential:', error);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <img src={logo} alt=\"Kwaai Logo\" className=\"logo\" />\n            <h1>Register</h1>\n            <input type=\"email\" id=\"email\" placeholder=\"Email\" className=\"input-field\" />\n            <button onClick={handleRegister} className=\"auth-button\">Register</button>\n            <p className=\"auth-link\">Already have an account? <a href=\"/login\">Login here</a></p>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;IAEpD,IAAI,CAACH,KAAK,EAAE;MACRI,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACJ;IAEA,IAAI;MACA,MAAMC,UAAU,GAAG,MAAMX,gBAAgB,CAACM,KAAK,CAAC;MAChDM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,UAAU,CAAC;MAE9C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,EAAE,EAAEV,UAAU,CAACU,EAAE;UACjBC,KAAK,EAAEC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACf,UAAU,CAACW,KAAK,CAAC,CAAC,CAAC;UAAE;UACvER,QAAQ,EAAE;YACNa,iBAAiB,EAAEJ,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACf,UAAU,CAACG,QAAQ,CAACa,iBAAiB,CAAC,CAAC,CAAC;YAAE;YACxGC,cAAc,EAAEL,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACf,UAAU,CAACG,QAAQ,CAACc,cAAc,CAAC,CAAC,CAAC,CAAE;UACtG,CAAC;UACDC,IAAI,EAAElB,UAAU,CAACkB,IAAI;UACrBvB,KAAK,EAAEA,KAAK,CAAE;QAClB,CAAC;MACL,CAAC,CAAC;MAEF,IAAIQ,QAAQ,CAACgB,EAAE,EAAE;QACblB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAC1C,CAAC,MAAM;QACHD,OAAO,CAACmB,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZnB,OAAO,CAACmB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B9B,OAAA;MAAK+B,GAAG,EAAEjC,IAAK;MAACkC,GAAG,EAAC,YAAY;MAACH,SAAS,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpDpC,OAAA;MAAA8B,QAAA,EAAI;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpC,OAAA;MAAO0B,IAAI,EAAC,OAAO;MAACR,EAAE,EAAC,OAAO;MAACmB,WAAW,EAAC,OAAO;MAACR,SAAS,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EpC,OAAA;MAAQsC,OAAO,EAAEpC,cAAe;MAAC2B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1EpC,OAAA;MAAG6B,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,2BAAyB,eAAA9B,OAAA;QAAGuC,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEd,CAAC;AAACI,EAAA,GAjDIvC,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}