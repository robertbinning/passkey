{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport ImageEye from '@mui/icons-material/RemoveRedEye';\nimport { Link } from 'react-router-dom';\nimport { useResourceContext, useRecordContext, useCreatePath } from 'ra-core';\nimport { Button } from './Button';\n/**\n * Opens the Show view of a given record\n *\n * @example // basic usage\n * import { ShowButton, useRecordContext } from 'react-admin';\n *\n * const CommentShowButton = () => {\n *     const record = useRecordContext();\n *     return (\n *         <ShowButton label=\"Show comment\" record={record} />\n *     );\n * };\n */\nvar ShowButton = function (props) {\n  var _a = props.icon,\n    icon = _a === void 0 ? defaultIcon : _a,\n    _b = props.label,\n    label = _b === void 0 ? 'ra.action.show' : _b,\n    recordProp = props.record,\n    resourceProp = props.resource,\n    _c = props.scrollToTop,\n    scrollToTop = _c === void 0 ? true : _c,\n    rest = __rest(props, [\"icon\", \"label\", \"record\", \"resource\", \"scrollToTop\"]);\n  var resource = useResourceContext(props);\n  var record = useRecordContext(props);\n  var createPath = useCreatePath();\n  if (!record) return null;\n  return React.createElement(Button, __assign({\n    component: Link,\n    to: createPath({\n      type: 'show',\n      resource: resource,\n      id: record.id\n    }),\n    state: scrollStates[String(scrollToTop)],\n    label: label,\n    onClick: stopPropagation\n  }, rest), icon);\n};\n// avoids using useMemo to get a constant value for the link state\nvar scrollStates = {\n  true: {\n    _scrollToTop: true\n  },\n  false: {}\n};\nvar defaultIcon = React.createElement(ImageEye, null);\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\nvar PureShowButton = memo(ShowButton, function (prevProps, nextProps) {\n  return prevProps.resource === nextProps.resource && (prevProps.record && nextProps.record ? prevProps.record.id === nextProps.record.id : prevProps.record == nextProps.record) &&\n  // eslint-disable-line eqeqeq\n  prevProps.label === nextProps.label && prevProps.disabled === nextProps.disabled;\n});\nexport default PureShowButton;","map":{"version":3,"names":["React","memo","ImageEye","Link","useResourceContext","useRecordContext","useCreatePath","Button","ShowButton","props","_a","icon","defaultIcon","_b","label","recordProp","record","resourceProp","resource","_c","scrollToTop","rest","__rest","createPath","createElement","__assign","component","to","type","id","state","scrollStates","String","onClick","stopPropagation","true","_scrollToTop","false","e","PureShowButton","prevProps","nextProps","disabled"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/button/ShowButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo, ReactElement } from 'react';\nimport ImageEye from '@mui/icons-material/RemoveRedEye';\nimport { Link } from 'react-router-dom';\nimport {\n    RaRecord,\n    useResourceContext,\n    useRecordContext,\n    useCreatePath,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the Show view of a given record\n *\n * @example // basic usage\n * import { ShowButton, useRecordContext } from 'react-admin';\n *\n * const CommentShowButton = () => {\n *     const record = useRecordContext();\n *     return (\n *         <ShowButton label=\"Show comment\" record={record} />\n *     );\n * };\n */\nconst ShowButton = <RecordType extends RaRecord = any>(\n    props: ShowButtonProps<RecordType>\n) => {\n    const {\n        icon = defaultIcon,\n        label = 'ra.action.show',\n        record: recordProp,\n        resource: resourceProp,\n        scrollToTop = true,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n    if (!record) return null;\n    return (\n        <Button\n            component={Link}\n            to={createPath({ type: 'show', resource, id: record.id })}\n            state={scrollStates[String(scrollToTop)]}\n            label={label}\n            onClick={stopPropagation}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ImageEye />;\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\ninterface Props<RecordType extends RaRecord = any> {\n    icon?: ReactElement;\n    label?: string;\n    record?: RecordType;\n    resource?: string;\n    scrollToTop?: boolean;\n}\n\nexport type ShowButtonProps<RecordType extends RaRecord = any> =\n    Props<RecordType> & Omit<ButtonProps<typeof Link>, 'to'>;\n\nconst PureShowButton = memo(\n    ShowButton,\n    (prevProps, nextProps) =>\n        prevProps.resource === nextProps.resource &&\n        (prevProps.record && nextProps.record\n            ? prevProps.record.id === nextProps.record.id\n            : prevProps.record == nextProps.record) && // eslint-disable-line eqeqeq\n        prevProps.label === nextProps.label &&\n        prevProps.disabled === nextProps.disabled\n);\n\nexport default PureShowButton;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAsB,OAAO;AAC1C,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAEIC,kBAAkB,EAClBC,gBAAgB,EAChBC,aAAa,QACV,SAAS;AAEhB,SAASC,MAAM,QAAqB,UAAU;AAE9C;;;;;;;;;;;;;AAaA,IAAMC,UAAU,GAAG,SAAAA,CACfC,KAAkC;EAG9B,IAAAC,EAAA,GAMAD,KAAK,CAAAE,IANa;IAAlBA,IAAI,GAAAD,EAAA,cAAGE,WAAW,GAAAF,EAAA;IAClBG,EAAA,GAKAJ,KAAK,CAAAK,KALmB;IAAxBA,KAAK,GAAAD,EAAA,cAAG,gBAAgB,GAAAA,EAAA;IAChBE,UAAU,GAIlBN,KAAK,CAAAO,MAJa;IACRC,YAAY,GAGtBR,KAAK,CAAAS,QAHiB;IACtBC,EAAA,GAEAV,KAAK,CAAAW,WAFa;IAAlBA,WAAW,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;IACfE,IAAI,GAAAC,MAAA,CACPb,KAAK,EAPH,sDAOL,CADU;EAEX,IAAMS,QAAQ,GAAGd,kBAAkB,CAACK,KAAK,CAAC;EAC1C,IAAMO,MAAM,GAAGX,gBAAgB,CAACI,KAAK,CAAC;EACtC,IAAMc,UAAU,GAAGjB,aAAa,EAAE;EAClC,IAAI,CAACU,MAAM,EAAE,OAAO,IAAI;EACxB,OACIhB,KAAA,CAAAwB,aAAA,CAACjB,MAAM,EAAAkB,QAAA;IACHC,SAAS,EAAEvB,IAAI;IACfwB,EAAE,EAAEJ,UAAU,CAAC;MAAEK,IAAI,EAAE,MAAM;MAAEV,QAAQ,EAAAA,QAAA;MAAEW,EAAE,EAAEb,MAAM,CAACa;IAAE,CAAE,CAAC;IACzDC,KAAK,EAAEC,YAAY,CAACC,MAAM,CAACZ,WAAW,CAAC,CAAC;IACxCN,KAAK,EAAEA,KAAK;IACZmB,OAAO,EAAEC;EAAe,GACnBb,IAAY,GAEhBV,IAAI,CACA;AAEjB,CAAC;AAED;AACA,IAAMoB,YAAY,GAAG;EACjBI,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAI,CAAE;EAC5BC,KAAK,EAAE;CACV;AAED,IAAMzB,WAAW,GAAGZ,KAAA,CAAAwB,aAAA,CAACtB,QAAQ,OAAG;AAEhC;AACA,IAAMgC,eAAe,GAAG,SAAAA,CAAAI,CAAC;EAAI,OAAAA,CAAC,CAACJ,eAAe,EAAE;AAAnB,CAAmB;AAahD,IAAMK,cAAc,GAAGtC,IAAI,CACvBO,UAAU,EACV,UAACgC,SAAS,EAAEC,SAAS;EACjB,OAAAD,SAAS,CAACtB,QAAQ,KAAKuB,SAAS,CAACvB,QAAQ,KACxCsB,SAAS,CAACxB,MAAM,IAAIyB,SAAS,CAACzB,MAAM,GAC/BwB,SAAS,CAACxB,MAAM,CAACa,EAAE,KAAKY,SAAS,CAACzB,MAAM,CAACa,EAAE,GAC3CW,SAAS,CAACxB,MAAM,IAAIyB,SAAS,CAACzB,MAAM,CAAC;EAAI;EAC/CwB,SAAS,CAAC1B,KAAK,KAAK2B,SAAS,CAAC3B,KAAK,IACnC0B,SAAS,CAACE,QAAQ,KAAKD,SAAS,CAACC,QAAQ;AALzC,CAKyC,CAChD;AAED,eAAeH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}