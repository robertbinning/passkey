{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport { IconButton, ListItem, ListItemButton, ListItemText, ListItemSecondaryAction, styled } from '@mui/material';\nimport CancelIcon from '@mui/icons-material/CancelOutlined';\nimport isEqual from 'lodash/isEqual';\nimport { useNavigate } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport { useListContext } from 'ra-core';\nvar arePropsEqual = function (prevProps, nextProps) {\n  return prevProps.label === nextProps.label && isEqual(prevProps.value, nextProps.value);\n};\nexport var SavedQueryFilterListItem = memo(function (props) {\n  var className = props.className,\n    label = props.label,\n    sx = props.sx,\n    value = props.value;\n  var _a = useListContext(),\n    filterValues = _a.filterValues,\n    sort = _a.sort,\n    perPage = _a.perPage,\n    displayedFilters = _a.displayedFilters;\n  var navigate = useNavigate();\n  var isSelected = isEqual(value, {\n    filter: filterValues,\n    sort: sort,\n    perPage: perPage,\n    displayedFilters: displayedFilters\n  });\n  var addFilter = function () {\n    var _a, _b, _c;\n    navigate({\n      search: stringify({\n        filter: JSON.stringify(value.filter),\n        sort: (_a = value.sort) === null || _a === void 0 ? void 0 : _a.field,\n        order: (_b = value.sort) === null || _b === void 0 ? void 0 : _b.order,\n        page: 1,\n        perPage: (_c = value.perPage) !== null && _c !== void 0 ? _c : perPage,\n        displayedFilters: JSON.stringify(value.displayedFilters)\n      })\n    });\n  };\n  var removeFilter = function () {\n    navigate({\n      search: stringify({\n        filter: JSON.stringify({})\n      })\n    });\n  };\n  var toggleFilter = function () {\n    return isSelected ? removeFilter() : addFilter();\n  };\n  return (\n    // @ts-ignore\n    React.createElement(StyledListItem, {\n      onClick: toggleFilter,\n      selected: isSelected,\n      className: className,\n      sx: sx,\n      disablePadding: true\n    }, React.createElement(ListItemButton, {\n      disableGutters: true,\n      className: SavedQueryFilterListItemClasses.listItemButton\n    }, React.createElement(ListItemText, {\n      primary: label,\n      className: SavedQueryFilterListItemClasses.listItemText\n    }), isSelected && React.createElement(ListItemSecondaryAction, null, React.createElement(IconButton, {\n      size: \"small\",\n      onClick: toggleFilter\n    }, React.createElement(CancelIcon, null)))))\n  );\n}, arePropsEqual);\nvar PREFIX = 'RaSavedQueryFilterListItem';\nexport var SavedQueryFilterListItemClasses = {\n  listItemButton: \"\".concat(PREFIX, \"-listItemButton\"),\n  listItemText: \"\".concat(PREFIX, \"-listItemText\")\n};\nvar StyledListItem = styled(ListItem, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function () {\n  var _a;\n  return _a = {}, _a[\"& .\".concat(SavedQueryFilterListItemClasses.listItemButton)] = {\n    paddingRight: '2em',\n    paddingLeft: '2em'\n  }, _a[\"& .\".concat(SavedQueryFilterListItemClasses.listItemText)] = {\n    margin: 0\n  }, _a;\n});","map":{"version":3,"names":["React","memo","IconButton","ListItem","ListItemButton","ListItemText","ListItemSecondaryAction","styled","CancelIcon","isEqual","useNavigate","stringify","useListContext","arePropsEqual","prevProps","nextProps","label","value","SavedQueryFilterListItem","props","className","sx","_a","filterValues","sort","perPage","displayedFilters","navigate","isSelected","filter","addFilter","search","JSON","field","order","_b","page","_c","removeFilter","toggleFilter","createElement","StyledListItem","onClick","selected","disablePadding","disableGutters","SavedQueryFilterListItemClasses","listItemButton","primary","listItemText","size","PREFIX","concat","name","overridesResolver","styles","root","paddingRight","paddingLeft","margin"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/filter/SavedQueryFilterListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, memo } from 'react';\nimport {\n    IconButton,\n    ListItem,\n    ListItemButton,\n    ListItemProps,\n    ListItemText,\n    ListItemSecondaryAction,\n    styled,\n} from '@mui/material';\nimport CancelIcon from '@mui/icons-material/CancelOutlined';\nimport isEqual from 'lodash/isEqual';\nimport { useNavigate } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport { useListContext } from 'ra-core';\n\nimport { SavedQuery } from './useSavedQueries';\n\nconst arePropsEqual = (\n    prevProps: SavedQueryFilterListItemProps,\n    nextProps: SavedQueryFilterListItemProps\n): boolean =>\n    prevProps.label === nextProps.label &&\n    isEqual(prevProps.value, nextProps.value);\n\nexport const SavedQueryFilterListItem = memo(\n    (props: SavedQueryFilterListItemProps): ReactElement => {\n        const { className, label, sx, value } = props;\n        const { filterValues, sort, perPage, displayedFilters } =\n            useListContext();\n        const navigate = useNavigate();\n\n        const isSelected = isEqual(value, {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        });\n\n        const addFilter = (): void => {\n            navigate({\n                search: stringify({\n                    filter: JSON.stringify(value.filter),\n                    sort: value.sort?.field,\n                    order: value.sort?.order,\n                    page: 1,\n                    perPage: value.perPage ?? perPage,\n                    displayedFilters: JSON.stringify(value.displayedFilters),\n                }),\n            });\n        };\n\n        const removeFilter = (): void => {\n            navigate({\n                search: stringify({\n                    filter: JSON.stringify({}),\n                }),\n            });\n        };\n\n        const toggleFilter = (): void =>\n            isSelected ? removeFilter() : addFilter();\n\n        return (\n            // @ts-ignore\n            <StyledListItem\n                onClick={toggleFilter}\n                selected={isSelected}\n                className={className}\n                sx={sx}\n                disablePadding\n            >\n                <ListItemButton\n                    disableGutters\n                    className={SavedQueryFilterListItemClasses.listItemButton}\n                >\n                    <ListItemText\n                        primary={label}\n                        className={SavedQueryFilterListItemClasses.listItemText}\n                    />\n                    {isSelected && (\n                        <ListItemSecondaryAction>\n                            <IconButton size=\"small\" onClick={toggleFilter}>\n                                <CancelIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    )}\n                </ListItemButton>\n            </StyledListItem>\n        );\n    },\n    arePropsEqual\n);\n\nconst PREFIX = 'RaSavedQueryFilterListItem';\nexport const SavedQueryFilterListItemClasses = {\n    listItemButton: `${PREFIX}-listItemButton`,\n    listItemText: `${PREFIX}-listItemText`,\n};\n\nconst StyledListItem = styled(ListItem, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(() => ({\n    [`& .${SavedQueryFilterListItemClasses.listItemButton}`]: {\n        paddingRight: '2em',\n        paddingLeft: '2em',\n    },\n    [`& .${SavedQueryFilterListItemClasses.listItemText}`]: {\n        margin: 0,\n    },\n}));\n\nexport interface SavedQueryFilterListItemProps\n    extends SavedQuery,\n        Omit<ListItemProps, 'value'> {}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}