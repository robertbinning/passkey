{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport mediaQuery from 'css-mediaquery';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nfunction createMatchMedia(width) {\n  return function (query) {\n    return {\n      matches: mediaQuery.match(query, {\n        width: width\n      }),\n      addListener: function () {},\n      removeListener: function () {}\n    };\n  };\n}\n/**\n * Test utility to simulate a device form factor for server-side mediaQueries\n *\n * Do not use inside a browser.\n *\n * @example\n *\n * <DeviceTestWrapper width=\"sm\">\n *     <MyResponsiveComponent />\n * <DeviceTestWrapper>\n */\nexport var DeviceTestWrapper = function (_a) {\n  var _b = _a.width,\n    width = _b === void 0 ? 'md' : _b,\n    children = _a.children;\n  var theme = createTheme();\n  // Use https://github.com/ericf/css-mediaquery as polyfill.\n  var ssrMatchMedia = createMatchMedia(theme.breakpoints.values[width]);\n  return React.createElement(ThemeProvider, {\n    theme: __assign(__assign({}, theme), {\n      components: {\n        MuiUseMediaQuery: {\n          defaultProps: {\n            ssrMatchMedia: ssrMatchMedia,\n            matchMedia: ssrMatchMedia\n          }\n        }\n      }\n    })\n  }, children);\n};","map":{"version":3,"names":["React","mediaQuery","createTheme","ThemeProvider","createMatchMedia","width","query","matches","match","addListener","removeListener","DeviceTestWrapper","_a","_b","children","theme","ssrMatchMedia","breakpoints","values","createElement","__assign","components","MuiUseMediaQuery","defaultProps","matchMedia"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/layout/DeviceTestWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport mediaQuery from 'css-mediaquery';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nfunction createMatchMedia(width) {\n    return query => ({\n        matches: mediaQuery.match(query, {\n            width,\n        }),\n        addListener: () => {},\n        removeListener: () => {},\n    });\n}\n\n/**\n * Test utility to simulate a device form factor for server-side mediaQueries\n *\n * Do not use inside a browser.\n *\n * @example\n *\n * <DeviceTestWrapper width=\"sm\">\n *     <MyResponsiveComponent />\n * <DeviceTestWrapper>\n */\nexport const DeviceTestWrapper = ({\n    width = 'md',\n    children,\n}: DeviceTestWrapperProps): JSX.Element => {\n    const theme = createTheme();\n    // Use https://github.com/ericf/css-mediaquery as polyfill.\n    const ssrMatchMedia = createMatchMedia(theme.breakpoints.values[width]);\n\n    return (\n        <ThemeProvider\n            theme={{\n                ...theme,\n                components: {\n                    MuiUseMediaQuery: {\n                        defaultProps: {\n                            ssrMatchMedia,\n                            matchMedia: ssrMatchMedia,\n                        },\n                    },\n                },\n            }}\n        >\n            {children}\n        </ThemeProvider>\n    );\n};\n\nexport interface DeviceTestWrapperProps {\n    width: 'md' | 'xs' | 'sm' | 'lg' | 'xl';\n    children: JSX.Element;\n}\n"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,gBAAgB;AACvC,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AAEjE,SAASC,gBAAgBA,CAACC,KAAK;EAC3B,OAAO,UAAAC,KAAK;IAAI,OAAC;MACbC,OAAO,EAAEN,UAAU,CAACO,KAAK,CAACF,KAAK,EAAE;QAC7BD,KAAK,EAAAA;OACR,CAAC;MACFI,WAAW,EAAE,SAAAA,CAAA,GAAO,CAAC;MACrBC,cAAc,EAAE,SAAAA,CAAA,GAAO;KAC1B;EANe,CAMd;AACN;AAEA;;;;;;;;;;;AAWA,OAAO,IAAMC,iBAAiB,GAAG,SAAAA,CAACC,EAGT;MAFrBC,EAAA,GAAAD,EAAA,CAAAP,KAAY;IAAZA,KAAK,GAAAQ,EAAA,cAAG,IAAI,GAAAA,EAAA;IACZC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;EAER,IAAMC,KAAK,GAAGb,WAAW,EAAE;EAC3B;EACA,IAAMc,aAAa,GAAGZ,gBAAgB,CAACW,KAAK,CAACE,WAAW,CAACC,MAAM,CAACb,KAAK,CAAC,CAAC;EAEvE,OACIL,KAAA,CAAAmB,aAAA,CAAChB,aAAa;IACVY,KAAK,EAAAK,QAAA,CAAAA,QAAA,KACEL,KAAK;MACRM,UAAU,EAAE;QACRC,gBAAgB,EAAE;UACdC,YAAY,EAAE;YACVP,aAAa,EAAAA,aAAA;YACbQ,UAAU,EAAER;;;;IAGvB;EAAA,GAGJF,QAAQ,CACG;AAExB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}