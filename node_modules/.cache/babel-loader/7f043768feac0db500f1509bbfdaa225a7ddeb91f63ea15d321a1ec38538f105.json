{"ast":null,"code":"import * as React from 'react';\nimport { useState, useEffect, Children } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { WithPermissions, useCheckAuth, LogoutOnMount } from '../auth';\nimport { useScrollToTop, useCreatePath } from '../routing';\nimport { useConfigureAdminRouterFromChildren } from './useConfigureAdminRouterFromChildren';\nimport { HasDashboardContextProvider } from './HasDashboardContext';\nexport var CoreAdminRoutes = function (props) {\n  useScrollToTop();\n  var createPath = useCreatePath();\n  var _a = useConfigureAdminRouterFromChildren(props.children),\n    customRoutesWithLayout = _a.customRoutesWithLayout,\n    customRoutesWithoutLayout = _a.customRoutesWithoutLayout,\n    status = _a.status,\n    resources = _a.resources;\n  var Layout = props.layout,\n    CatchAll = props.catchAll,\n    dashboard = props.dashboard,\n    LoadingPage = props.loading,\n    requireAuth = props.requireAuth,\n    Ready = props.ready;\n  var _b = useState(requireAuth),\n    onlyAnonymousRoutes = _b[0],\n    setOnlyAnonymousRoutes = _b[1];\n  var _c = useState(requireAuth),\n    checkAuthLoading = _c[0],\n    setCheckAuthLoading = _c[1];\n  var checkAuth = useCheckAuth();\n  useEffect(function () {\n    if (requireAuth) {\n      // do not log the user out on failure to allow access to custom routes with no layout\n      // for other routes, the LogoutOnMount component will log the user out\n      checkAuth(undefined, false).then(function () {\n        setOnlyAnonymousRoutes(false);\n      }).catch(function () {}).finally(function () {\n        setCheckAuthLoading(false);\n      });\n    }\n  }, [checkAuth, requireAuth]);\n  if (status === 'empty') {\n    if (!Ready) {\n      throw new Error('The admin is empty. Please provide an empty component, or pass Resource or CustomRoutes as children.');\n    }\n    return React.createElement(Ready, null);\n  }\n  // Note: custom routes with no layout are always rendered, regardless of the auth status\n  if (status === 'loading' || checkAuthLoading) {\n    return React.createElement(Routes, null, customRoutesWithoutLayout, React.createElement(Route, {\n      path: \"*\",\n      element: React.createElement(\"div\", {\n        style: {\n          height: '100vh'\n        }\n      }, React.createElement(LoadingPage, null))\n    }));\n  }\n  if (onlyAnonymousRoutes) {\n    return React.createElement(Routes, null, customRoutesWithoutLayout, React.createElement(Route, {\n      path: \"*\",\n      element: React.createElement(LogoutOnMount, null)\n    }));\n  }\n  return React.createElement(Routes, null, customRoutesWithoutLayout, React.createElement(Route, {\n    path: \"/*\",\n    element: React.createElement(HasDashboardContextProvider, {\n      value: !!dashboard\n    }, React.createElement(Layout, null, React.createElement(Routes, null, customRoutesWithLayout, Children.map(resources, function (resource) {\n      return React.createElement(Route, {\n        key: resource.props.name,\n        path: \"\".concat(resource.props.name, \"/*\"),\n        element: resource\n      });\n    }), React.createElement(Route, {\n      path: \"/\",\n      element: dashboard ? React.createElement(WithPermissions, {\n        authParams: defaultAuthParams,\n        component: dashboard\n      }) : resources.length > 0 ? React.createElement(Navigate, {\n        to: createPath({\n          resource: resources[0].props.name,\n          type: 'list'\n        })\n      }) : null\n    }), React.createElement(Route, {\n      path: \"*\",\n      element: React.createElement(CatchAll, null)\n    }))))\n  }));\n};\nvar defaultAuthParams = {\n  params: {\n    route: 'dashboard'\n  }\n};","map":{"version":3,"names":["React","useState","useEffect","Children","Navigate","Route","Routes","WithPermissions","useCheckAuth","LogoutOnMount","useScrollToTop","useCreatePath","useConfigureAdminRouterFromChildren","HasDashboardContextProvider","CoreAdminRoutes","props","createPath","_a","children","customRoutesWithLayout","customRoutesWithoutLayout","status","resources","Layout","layout","CatchAll","catchAll","dashboard","LoadingPage","loading","requireAuth","Ready","ready","_b","onlyAnonymousRoutes","setOnlyAnonymousRoutes","_c","checkAuthLoading","setCheckAuthLoading","checkAuth","undefined","then","catch","finally","Error","createElement","path","element","style","height","value","map","resource","key","name","concat","authParams","defaultAuthParams","component","length","to","type","params","route"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/core/CoreAdminRoutes.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useEffect, Children, ComponentType } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { WithPermissions, useCheckAuth, LogoutOnMount } from '../auth';\nimport { useScrollToTop, useCreatePath } from '../routing';\nimport {\n    AdminChildren,\n    CatchAllComponent,\n    DashboardComponent,\n    LayoutComponent,\n    LoadingComponent,\n} from '../types';\nimport { useConfigureAdminRouterFromChildren } from './useConfigureAdminRouterFromChildren';\nimport { HasDashboardContextProvider } from './HasDashboardContext';\n\nexport const CoreAdminRoutes = (props: CoreAdminRoutesProps) => {\n    useScrollToTop();\n    const createPath = useCreatePath();\n\n    const {\n        customRoutesWithLayout,\n        customRoutesWithoutLayout,\n        status,\n        resources,\n    } = useConfigureAdminRouterFromChildren(props.children);\n\n    const {\n        layout: Layout,\n        catchAll: CatchAll,\n        dashboard,\n        loading: LoadingPage,\n        requireAuth,\n        ready: Ready,\n    } = props;\n\n    const [onlyAnonymousRoutes, setOnlyAnonymousRoutes] = useState(requireAuth);\n    const [checkAuthLoading, setCheckAuthLoading] = useState(requireAuth);\n    const checkAuth = useCheckAuth();\n\n    useEffect(() => {\n        if (requireAuth) {\n            // do not log the user out on failure to allow access to custom routes with no layout\n            // for other routes, the LogoutOnMount component will log the user out\n            checkAuth(undefined, false)\n                .then(() => {\n                    setOnlyAnonymousRoutes(false);\n                })\n                .catch(() => {})\n                .finally(() => {\n                    setCheckAuthLoading(false);\n                });\n        }\n    }, [checkAuth, requireAuth]);\n\n    if (status === 'empty') {\n        if (!Ready) {\n            throw new Error(\n                'The admin is empty. Please provide an empty component, or pass Resource or CustomRoutes as children.'\n            );\n        }\n        return <Ready />;\n    }\n\n    // Note: custom routes with no layout are always rendered, regardless of the auth status\n\n    if (status === 'loading' || checkAuthLoading) {\n        return (\n            <Routes>\n                {customRoutesWithoutLayout}\n                <Route\n                    path=\"*\"\n                    element={\n                        <div style={{ height: '100vh' }}>\n                            <LoadingPage />\n                        </div>\n                    }\n                />\n            </Routes>\n        );\n    }\n\n    if (onlyAnonymousRoutes) {\n        return (\n            <Routes>\n                {customRoutesWithoutLayout}\n                <Route path=\"*\" element={<LogoutOnMount />} />\n            </Routes>\n        );\n    }\n\n    return (\n        <Routes>\n            {/*\n                Render the custom routes that were outside the child function.\n            */}\n            {customRoutesWithoutLayout}\n            <Route\n                path=\"/*\"\n                element={\n                    <HasDashboardContextProvider value={!!dashboard}>\n                        <Layout>\n                            <Routes>\n                                {customRoutesWithLayout}\n                                {Children.map(resources, resource => (\n                                    <Route\n                                        key={resource.props.name}\n                                        path={`${resource.props.name}/*`}\n                                        element={resource}\n                                    />\n                                ))}\n                                <Route\n                                    path=\"/\"\n                                    element={\n                                        dashboard ? (\n                                            <WithPermissions\n                                                authParams={defaultAuthParams}\n                                                component={dashboard}\n                                            />\n                                        ) : resources.length > 0 ? (\n                                            <Navigate\n                                                to={createPath({\n                                                    resource:\n                                                        resources[0].props.name,\n                                                    type: 'list',\n                                                })}\n                                            />\n                                        ) : null\n                                    }\n                                />\n                                <Route path=\"*\" element={<CatchAll />} />\n                            </Routes>\n                        </Layout>\n                    </HasDashboardContextProvider>\n                }\n            />\n        </Routes>\n    );\n};\n\nexport interface CoreAdminRoutesProps {\n    dashboard?: DashboardComponent;\n    layout: LayoutComponent;\n    catchAll: CatchAllComponent;\n    children?: AdminChildren;\n    loading: LoadingComponent;\n    requireAuth?: boolean;\n    ready?: ComponentType;\n}\n\nconst defaultAuthParams = { params: { route: 'dashboard' } };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}