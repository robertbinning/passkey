{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useRecordContext } from 'ra-core';\nimport Typography from '@mui/material/Typography';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\n/**\n * Field using a render function\n *\n * @example\n * <FunctionField\n *     source=\"last_name\" // used for sorting\n *     label=\"Name\"\n *     render={record => `${record.first_name} ${record.last_name}`}\n * />\n */\nexport var FunctionField = function (props) {\n  var className = props.className,\n    _a = props.source,\n    source = _a === void 0 ? '' : _a,\n    render = props.render,\n    rest = __rest(props, [\"className\", \"source\", \"render\"]);\n  var record = useRecordContext(props);\n  return useMemo(function () {\n    return record ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), render(record, source)) : null;\n  }, [className, record, source, render, rest]);\n};","map":{"version":3,"names":["React","useMemo","useRecordContext","Typography","sanitizeFieldRestProps","FunctionField","props","className","_a","source","render","rest","__rest","record","createElement","__assign","component","variant"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/field/FunctionField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMemo, ReactNode } from 'react';\nimport { useRecordContext } from 'ra-core';\nimport Typography, { TypographyProps } from '@mui/material/Typography';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { FieldProps } from './types';\n\n/**\n * Field using a render function\n *\n * @example\n * <FunctionField\n *     source=\"last_name\" // used for sorting\n *     label=\"Name\"\n *     render={record => `${record.first_name} ${record.last_name}`}\n * />\n */\n\nexport const FunctionField = <RecordType extends Record<string, any> = any>(\n    props: FunctionFieldProps<RecordType>\n) => {\n    const { className, source = '', render, ...rest } = props;\n    const record = useRecordContext(props);\n    return useMemo(\n        () =>\n            record ? (\n                <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={className}\n                    {...sanitizeFieldRestProps(rest)}\n                >\n                    {render(record, source)}\n                </Typography>\n            ) : null,\n        [className, record, source, render, rest]\n    );\n};\n\nexport interface FunctionFieldProps<\n    RecordType extends Record<string, any> = any,\n> extends Omit<FieldProps<RecordType>, 'source'>,\n        Omit<TypographyProps, 'textAlign'> {\n    source?: string;\n    render: (record: RecordType, source?: string) => ReactNode;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAmB,OAAO;AAC1C,SAASC,gBAAgB,QAAQ,SAAS;AAC1C,OAAOC,UAA+B,MAAM,0BAA0B;AAEtE,SAASC,sBAAsB,QAAQ,0BAA0B;AAGjE;;;;;;;;;;AAWA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CACzBC,KAAqC;EAE7B,IAAAC,SAAS,GAAmCD,KAAK,CAAAC,SAAxC;IAAEC,EAAA,GAAiCF,KAAK,CAAAG,MAA3B;IAAXA,MAAM,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IAAEE,MAAM,GAAcJ,KAAK,CAAAI,MAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKN,KAAK,EAAnD,iCAA2C,CAAF;EAC/C,IAAMO,MAAM,GAAGX,gBAAgB,CAACI,KAAK,CAAC;EACtC,OAAOL,OAAO,CACV;IACI,OAAAY,MAAM,GACFb,KAAA,CAAAc,aAAA,CAACX,UAAU,EAAAY,QAAA;MACPC,SAAS,EAAC,MAAM;MAChBC,OAAO,EAAC,OAAO;MACfV,SAAS,EAAEA;IAAS,GAChBH,sBAAsB,CAACO,IAAI,CAAC,GAE/BD,MAAM,CAACG,MAAM,EAAEJ,MAAM,CAAC,CACd,GACb,IAAI;EATR,CASQ,EACZ,CAACF,SAAS,EAAEM,MAAM,EAAEJ,MAAM,EAAEC,MAAM,EAAEC,IAAI,CAAC,CAC5C;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}