{"ast":null,"code":"import { createContext, useContext } from 'react';\nexport var HasDashboardContext = createContext(false);\nexport var HasDashboardContextProvider = HasDashboardContext.Provider;\n/**\n * Returns true if the app has a dashboard defined at the <Admin> level.\n *\n * @private\n * @example\n * import { useHasDashboard } from 'react-admin';\n *\n * const MyMenu = () => {\n *    const hasDashboard = useHasDashboard();\n *    return (\n *       <Menu>\n *          {hasDashboard && <DashboardMenuItem />}\n *          <MenuItemLink to=\"/posts\" />\n *          <MenuItemLink to=\"/comments\" />\n *       </Menu>\n *     );\n * }\n */\nexport var useHasDashboard = function () {\n  return useContext(HasDashboardContext);\n};","map":{"version":3,"names":["createContext","useContext","HasDashboardContext","HasDashboardContextProvider","Provider","useHasDashboard"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-core/src/core/HasDashboardContext.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const HasDashboardContext = createContext<boolean>(false);\n\nexport const HasDashboardContextProvider = HasDashboardContext.Provider;\n\n/**\n * Returns true if the app has a dashboard defined at the <Admin> level.\n *\n * @private\n * @example\n * import { useHasDashboard } from 'react-admin';\n *\n * const MyMenu = () => {\n *    const hasDashboard = useHasDashboard();\n *    return (\n *       <Menu>\n *          {hasDashboard && <DashboardMenuItem />}\n *          <MenuItemLink to=\"/posts\" />\n *          <MenuItemLink to=\"/comments\" />\n *       </Menu>\n *     );\n * }\n */\nexport const useHasDashboard = () => useContext(HasDashboardContext);\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAEjD,OAAO,IAAMC,mBAAmB,GAAGF,aAAa,CAAU,KAAK,CAAC;AAEhE,OAAO,IAAMG,2BAA2B,GAAGD,mBAAmB,CAACE,QAAQ;AAEvE;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,eAAe,GAAG,SAAAA,CAAA;EAAM,OAAAJ,UAAU,CAACC,mBAAmB,CAAC;AAA/B,CAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}