{"ast":null,"code":"import * as React from 'react';\nimport { Children } from 'react';\nimport { FilterForm } from './FilterForm';\nimport { FilterButton } from './FilterButton';\nimport { FilterContext } from '../FilterContext';\n/**\n * Filter button/form combo\n *\n * @example\n *\n * const PostFilter = (props) => (\n *     <Filter {...props}>\n *         <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *         <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n *     </Filter>\n * );\n *\n * export const PostList = () => (\n *     <List filters={<PostFilter />}>\n *         ...\n *     </List>\n * );\n *\n */\nexport var Filter = function (props) {\n  var children = props.children;\n  var renderButton = function () {\n    return React.createElement(FilterButton, {\n      className: FilterClasses.button\n    });\n  };\n  var renderForm = function () {\n    return React.createElement(FilterForm, {\n      className: FilterClasses.form\n    });\n  };\n  return React.createElement(FilterContext.Provider, {\n    value: Children.toArray(children)\n  }, props.context === 'button' ? renderButton() : renderForm());\n};\nvar PREFIX = 'RaFilter';\nexport var FilterClasses = {\n  button: \"\".concat(PREFIX, \"-button\"),\n  form: \"\".concat(PREFIX, \"-form\")\n};","map":{"version":3,"names":["React","Children","FilterForm","FilterButton","FilterContext","Filter","props","children","renderButton","createElement","className","FilterClasses","button","renderForm","form","Provider","value","toArray","context","PREFIX","concat"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/filter/Filter.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Children, ReactNode } from 'react';\n\nimport { FilterForm } from './FilterForm';\nimport { FilterButton } from './FilterButton';\nimport { FilterContext } from '../FilterContext';\n\n/**\n * Filter button/form combo\n *\n * @example\n *\n * const PostFilter = (props) => (\n *     <Filter {...props}>\n *         <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *         <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n *     </Filter>\n * );\n *\n * export const PostList = () => (\n *     <List filters={<PostFilter />}>\n *         ...\n *     </List>\n * );\n *\n */\nexport const Filter = (props: FilterProps) => {\n    const { children } = props;\n    const renderButton = () => {\n        return <FilterButton className={FilterClasses.button} />;\n    };\n\n    const renderForm = () => {\n        return <FilterForm className={FilterClasses.form} />;\n    };\n\n    return (\n        <FilterContext.Provider value={Children.toArray(children)}>\n            {props.context === 'button' ? renderButton() : renderForm()}\n        </FilterContext.Provider>\n    );\n};\n\nconst PREFIX = 'RaFilter';\n\nexport const FilterClasses = {\n    button: `${PREFIX}-button`,\n    form: `${PREFIX}-form`,\n};\n\nexport interface FilterProps {\n    children: ReactNode;\n    context?: 'form' | 'button';\n    variant?: string;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAmB,OAAO;AAE3C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,aAAa,QAAQ,kBAAkB;AAEhD;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,IAAMC,MAAM,GAAG,SAAAA,CAACC,KAAkB;EAC7B,IAAAC,QAAQ,GAAKD,KAAK,CAAAC,QAAV;EAChB,IAAMC,YAAY,GAAG,SAAAA,CAAA;IACjB,OAAOR,KAAA,CAAAS,aAAA,CAACN,YAAY;MAACO,SAAS,EAAEC,aAAa,CAACC;IAAM,EAAI;EAC5D,CAAC;EAED,IAAMC,UAAU,GAAG,SAAAA,CAAA;IACf,OAAOb,KAAA,CAAAS,aAAA,CAACP,UAAU;MAACQ,SAAS,EAAEC,aAAa,CAACG;IAAI,EAAI;EACxD,CAAC;EAED,OACId,KAAA,CAAAS,aAAA,CAACL,aAAa,CAACW,QAAQ;IAACC,KAAK,EAAEf,QAAQ,CAACgB,OAAO,CAACV,QAAQ;EAAC,GACpDD,KAAK,CAACY,OAAO,KAAK,QAAQ,GAAGV,YAAY,EAAE,GAAGK,UAAU,EAAE,CACtC;AAEjC,CAAC;AAED,IAAMM,MAAM,GAAG,UAAU;AAEzB,OAAO,IAAMR,aAAa,GAAG;EACzBC,MAAM,EAAE,GAAAQ,MAAA,CAAGD,MAAM,YAAS;EAC1BL,IAAI,EAAE,GAAAM,MAAA,CAAGD,MAAM;CAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}