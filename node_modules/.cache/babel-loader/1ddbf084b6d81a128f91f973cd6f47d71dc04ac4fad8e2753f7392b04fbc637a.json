{"ast":null,"code":"import { fetchUtils } from 'ra-core';\nimport { stringify } from 'query-string';\nconst apiUrl = 'https://localhost:443';\nconst httpClient = fetchUtils.fetchJson;\nconst dataProvider = {\n  getList: (resource, params) => {\n    const {\n      page,\n      perPage\n    } = params.pagination;\n    const {\n      field,\n      order\n    } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify(params.filter)\n    };\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\n    return httpClient(url).then(({\n      headers,\n      json\n    }) => ({\n      data: json,\n      total: json.length\n    }));\n  },\n  getOne: (resource, params) => httpClient(`${apiUrl}/${resource}/${params.id}`).then(({\n    json\n  }) => ({\n    data: json\n  })),\n  getMany: (resource, params) => {\n    const query = {\n      filter: JSON.stringify({\n        id: params.ids\n      })\n    };\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\n    return httpClient(url).then(({\n      json\n    }) => ({\n      data: json\n    }));\n  },\n  getManyReference: (resource, params) => {\n    const {\n      page,\n      perPage\n    } = params.pagination;\n    const {\n      field,\n      order\n    } = params.sort;\n    const query = {\n      sort: JSON.stringify([field, order]),\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n      filter: JSON.stringify({\n        ...params.filter,\n        [params.target]: params.id\n      })\n    };\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\n    return httpClient(url).then(({\n      headers,\n      json\n    }) => ({\n      data: json,\n      total: json.length\n    }));\n  },\n  update: (resource, params) => httpClient(`${apiUrl}/${resource}/${params.id}`, {\n    method: 'PUT',\n    body: JSON.stringify(params.data)\n  }).then(({\n    json\n  }) => ({\n    data: json\n  })),\n  updateMany: (resource, params) => {\n    const query = {\n      filter: JSON.stringify({\n        id: params.ids\n      })\n    };\n    return httpClient(`${apiUrl}/${resource}`, {\n      method: 'PUT',\n      body: JSON.stringify(params.data)\n    }).then(({\n      json\n    }) => ({\n      data: json\n    }));\n  },\n  create: (resource, params) => httpClient(`${apiUrl}/${resource}`, {\n    method: 'POST',\n    body: JSON.stringify(params.data)\n  }).then(({\n    json\n  }) => ({\n    data: {\n      ...params.data,\n      id: json.id\n    }\n  })),\n  delete: (resource, params) => httpClient(`${apiUrl}/${resource}/${params.id}`, {\n    method: 'DELETE'\n  }).then(({\n    json\n  }) => ({\n    data: json\n  })),\n  deleteMany: (resource, params) => {\n    const query = {\n      filter: JSON.stringify({\n        id: params.ids\n      })\n    };\n    return httpClient(`${apiUrl}/${resource}`, {\n      method: 'DELETE',\n      body: JSON.stringify(params.data)\n    }).then(({\n      json\n    }) => ({\n      data: json\n    }));\n  }\n};\nexport default dataProvider;","map":{"version":3,"names":["fetchUtils","stringify","apiUrl","httpClient","fetchJson","dataProvider","getList","resource","params","page","perPage","pagination","field","order","sort","query","JSON","range","filter","url","then","headers","json","data","total","length","getOne","id","getMany","ids","getManyReference","target","update","method","body","updateMany","create","delete","deleteMany"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/dataProvider.js"],"sourcesContent":["import { fetchUtils } from 'ra-core';\nimport { stringify } from 'query-string';\n\nconst apiUrl = 'https://localhost:443';\nconst httpClient = fetchUtils.fetchJson;\n\nconst dataProvider = {\n    getList: (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            sort: JSON.stringify([field, order]),\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n            filter: JSON.stringify(params.filter),\n        };\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n        return httpClient(url).then(({ headers, json }) => ({\n            data: json,\n            total: json.length,\n        }));\n    },\n    getOne: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => ({\n            data: json,\n        })),\n    getMany: (resource, params) => {\n        const query = {\n            filter: JSON.stringify({ id: params.ids }),\n        };\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\n        return httpClient(url).then(({ json }) => ({ data: json }));\n    },\n    getManyReference: (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            sort: JSON.stringify([field, order]),\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n            filter: JSON.stringify({\n                ...params.filter,\n                [params.target]: params.id,\n            }),\n        };\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\n\n        return httpClient(url).then(({ headers, json }) => ({\n            data: json,\n            total: json.length,\n        }));\n    },\n    update: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}/${params.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json })),\n    updateMany: (resource, params) => {\n        const query = {\n            filter: JSON.stringify({ id: params.ids }),\n        };\n        return httpClient(`${apiUrl}/${resource}`, {\n            method: 'PUT',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }));\n    },\n    create: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}`, {\n            method: 'POST',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({\n            data: { ...params.data, id: json.id },\n        })),\n    delete: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}/${params.id}`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json })),\n    deleteMany: (resource, params) => {\n        const query = {\n            filter: JSON.stringify({ id: params.ids }),\n        };\n        return httpClient(`${apiUrl}/${resource}`, {\n            method: 'DELETE',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }));\n    },\n};\n\nexport default dataProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}