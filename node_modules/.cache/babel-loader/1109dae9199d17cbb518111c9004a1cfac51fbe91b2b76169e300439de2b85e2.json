{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { cloneElement, useMemo, useContext } from 'react';\nimport { sanitizeListRestProps, useListContext, useResourceContext, useResourceDefinition } from 'ra-core';\nimport TopToolbar from '../layout/TopToolbar';\nimport { CreateButton, ExportButton } from '../button';\nimport { FilterContext } from './FilterContext';\nimport { FilterButton } from './filter';\n/**\n * Action Toolbar for the List view\n *\n * Internal component. If you want to add or remove actions for a List view,\n * write your own ListActions Component. Then, in the <List> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n * import { cloneElement } from 'react';\n * import Button from '@mui/material/Button';\n * import { TopToolbar, List, CreateButton, ExportButton } from 'react-admin';\n *\n * const PostListActions = ({ filters }) => (\n *     <TopToolbar>\n *         { cloneElement(filters, { context: 'button' }) }\n *         <CreateButton/>\n *         <ExportButton/>\n *         // Add your custom actions here //\n *         <Button onClick={customAction}>Custom Action</Button>\n *     </TopToolbar>\n * );\n *\n * export const PostList = () => (\n *     <List actions={<PostListActions />}>\n *         ...\n *     </List>\n * );\n */\nexport var ListActions = function (props) {\n  var className = props.className,\n    filtersProp = props.filters,\n    _ = props.hasCreate,\n    rest = __rest(props, [\"className\", \"filters\", \"hasCreate\"]);\n  var _a = useListContext(),\n    displayedFilters = _a.displayedFilters,\n    filterValues = _a.filterValues,\n    exporter = _a.exporter,\n    showFilter = _a.showFilter,\n    total = _a.total;\n  var resource = useResourceContext(props);\n  var hasCreate = useResourceDefinition(props).hasCreate;\n  var filters = useContext(FilterContext) || filtersProp;\n  return useMemo(function () {\n    return React.createElement(TopToolbar, __assign({\n      className: className\n    }, sanitizeListRestProps(rest)), filtersProp ? cloneElement(filtersProp, {\n      resource: resource,\n      showFilter: showFilter,\n      displayedFilters: displayedFilters,\n      filterValues: filterValues,\n      context: 'button'\n    }) : filters && React.createElement(FilterButton, null), hasCreate && React.createElement(CreateButton, null), exporter !== false && React.createElement(ExportButton, {\n      disabled: total === 0,\n      resource: resource\n    }));\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [resource, displayedFilters, filterValues, filtersProp, showFilter, filters, total, className, exporter, hasCreate]);\n};","map":{"version":3,"names":["React","cloneElement","useMemo","useContext","sanitizeListRestProps","useListContext","useResourceContext","useResourceDefinition","TopToolbar","CreateButton","ExportButton","FilterContext","FilterButton","ListActions","props","className","filtersProp","filters","_","hasCreate","rest","__rest","_a","displayedFilters","filterValues","exporter","showFilter","total","resource","createElement","__assign","context","disabled"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/ListActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cloneElement, useMemo, useContext, ReactElement } from 'react';\nimport {\n    sanitizeListRestProps,\n    Exporter,\n    useListContext,\n    useResourceContext,\n    useResourceDefinition,\n} from 'ra-core';\nimport { ToolbarProps } from '@mui/material';\n\nimport TopToolbar from '../layout/TopToolbar';\nimport { CreateButton, ExportButton } from '../button';\nimport { FilterContext } from './FilterContext';\nimport { FilterButton } from './filter';\n\n/**\n * Action Toolbar for the List view\n *\n * Internal component. If you want to add or remove actions for a List view,\n * write your own ListActions Component. Then, in the <List> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n * import { cloneElement } from 'react';\n * import Button from '@mui/material/Button';\n * import { TopToolbar, List, CreateButton, ExportButton } from 'react-admin';\n *\n * const PostListActions = ({ filters }) => (\n *     <TopToolbar>\n *         { cloneElement(filters, { context: 'button' }) }\n *         <CreateButton/>\n *         <ExportButton/>\n *         // Add your custom actions here //\n *         <Button onClick={customAction}>Custom Action</Button>\n *     </TopToolbar>\n * );\n *\n * export const PostList = () => (\n *     <List actions={<PostListActions />}>\n *         ...\n *     </List>\n * );\n */\nexport const ListActions = (props: ListActionsProps) => {\n    const { className, filters: filtersProp, hasCreate: _, ...rest } = props;\n\n    const { displayedFilters, filterValues, exporter, showFilter, total } =\n        useListContext();\n    const resource = useResourceContext(props);\n    const { hasCreate } = useResourceDefinition(props);\n    const filters = useContext(FilterContext) || filtersProp;\n    return useMemo(\n        () => (\n            <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n                {filtersProp\n                    ? cloneElement(filtersProp, {\n                          resource,\n                          showFilter,\n                          displayedFilters,\n                          filterValues,\n                          context: 'button',\n                      })\n                    : filters && <FilterButton />}\n                {hasCreate && <CreateButton />}\n                {exporter !== false && (\n                    <ExportButton disabled={total === 0} resource={resource} />\n                )}\n            </TopToolbar>\n        ),\n        /* eslint-disable react-hooks/exhaustive-deps */\n        [\n            resource,\n            displayedFilters,\n            filterValues,\n            filtersProp,\n            showFilter,\n            filters,\n            total,\n            className,\n            exporter,\n            hasCreate,\n        ]\n    );\n};\n\nexport interface ListActionsProps extends ToolbarProps {\n    className?: string;\n    resource?: string;\n    filters?: ReactElement<any>;\n    displayedFilters?: any;\n    exporter?: Exporter | boolean;\n    filterValues?: any;\n    permanentFilter?: any;\n    hasCreate?: boolean;\n    showFilter?: (filterName: string, defaultValue: any) => void;\n    total?: number;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,EAAEC,OAAO,EAAEC,UAAU,QAAsB,OAAO;AACvE,SACIC,qBAAqB,EAErBC,cAAc,EACdC,kBAAkB,EAClBC,qBAAqB,QAClB,SAAS;AAGhB,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,YAAY,EAAEC,YAAY,QAAQ,WAAW;AACtD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,YAAY,QAAQ,UAAU;AAEvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAO,IAAMC,WAAW,GAAG,SAAAA,CAACC,KAAuB;EACvC,IAAAC,SAAS,GAAkDD,KAAK,CAAAC,SAAvD;IAAWC,WAAW,GAA4BF,KAAK,CAAAG,OAAjC;IAAaC,CAAC,GAAcJ,KAAK,CAAAK,SAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKP,KAAK,EAAlE,qCAA0D,CAAF;EAExD,IAAAQ,EAAA,GACFjB,cAAc,EAAE;IADZkB,gBAAgB,GAAAD,EAAA,CAAAC,gBAAA;IAAEC,YAAY,GAAAF,EAAA,CAAAE,YAAA;IAAEC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IAAEC,UAAU,GAAAJ,EAAA,CAAAI,UAAA;IAAEC,KAAK,GAAAL,EAAA,CAAAK,KAC/C;EACpB,IAAMC,QAAQ,GAAGtB,kBAAkB,CAACQ,KAAK,CAAC;EAClC,IAAAK,SAAS,GAAKZ,qBAAqB,CAACO,KAAK,CAAC,CAAAK,SAAjC;EACjB,IAAMF,OAAO,GAAGd,UAAU,CAACQ,aAAa,CAAC,IAAIK,WAAW;EACxD,OAAOd,OAAO,CACV;IAAM,OACFF,KAAA,CAAA6B,aAAA,CAACrB,UAAU,EAAAsB,QAAA;MAACf,SAAS,EAAEA;IAAS,GAAMX,qBAAqB,CAACgB,IAAI,CAAC,GAC5DJ,WAAW,GACNf,YAAY,CAACe,WAAW,EAAE;MACtBY,QAAQ,EAAAA,QAAA;MACRF,UAAU,EAAAA,UAAA;MACVH,gBAAgB,EAAAA,gBAAA;MAChBC,YAAY,EAAAA,YAAA;MACZO,OAAO,EAAE;KACZ,CAAC,GACFd,OAAO,IAAIjB,KAAA,CAAA6B,aAAA,CAACjB,YAAY,OAAG,EAChCO,SAAS,IAAInB,KAAA,CAAA6B,aAAA,CAACpB,YAAY,OAAG,EAC7BgB,QAAQ,KAAK,KAAK,IACfzB,KAAA,CAAA6B,aAAA,CAACnB,YAAY;MAACsB,QAAQ,EAAEL,KAAK,KAAK,CAAC;MAAEC,QAAQ,EAAEA;IAAQ,EAC1D,CACQ;EAfX,CAgBL,EACD;EACA,CACIA,QAAQ,EACRL,gBAAgB,EAChBC,YAAY,EACZR,WAAW,EACXU,UAAU,EACVT,OAAO,EACPU,KAAK,EACLZ,SAAS,EACTU,QAAQ,EACRN,SAAS,CACZ,CACJ;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}