{"ast":null,"code":"import { createContext } from 'react';\n/**\n * This context provides access to a function for closing the user menu.\n *\n * @example\n * import { Logout, MenuItemLink, UserMenu, useUserMenu } from 'react-admin';\n *\n * const ConfigurationMenu = () => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItemLink\n *             to=\"/configuration\"\n *             primaryText=\"pos.configuration\"\n *             leftIcon={<SettingsIcon />}\n *             sidebarIsOpen\n *             onClick={onClose}\n *         />\n *     );\n * };\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n */\nexport var UserMenuContext = createContext(undefined);","map":{"version":3,"names":["createContext","UserMenuContext","undefined"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/layout/UserMenuContext.ts"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * This context provides access to a function for closing the user menu.\n *\n * @example\n * import { Logout, MenuItemLink, UserMenu, useUserMenu } from 'react-admin';\n *\n * const ConfigurationMenu = () => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItemLink\n *             to=\"/configuration\"\n *             primaryText=\"pos.configuration\"\n *             leftIcon={<SettingsIcon />}\n *             sidebarIsOpen\n *             onClick={onClose}\n *         />\n *     );\n * };\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n */\nexport const UserMenuContext = createContext<UserMenuContextValue | undefined>(\n    undefined\n);\n\nexport type UserMenuContextValue = {\n    /**\n     * Closes the user menu\n     * @see UserMenu\n     */\n    onClose: () => void;\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AAErC;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAO,IAAMC,eAAe,GAAGD,aAAa,CACxCE,SAAS,CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}