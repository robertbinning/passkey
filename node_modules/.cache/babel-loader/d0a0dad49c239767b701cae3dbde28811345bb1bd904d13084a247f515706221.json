{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport clsx from 'clsx';\nimport { useListContext } from 'ra-core';\nimport { Title } from '../layout/Title';\nimport { ListToolbar } from './ListToolbar';\nimport { Pagination as DefaultPagination } from './pagination';\nimport { ListActions as DefaultActions } from './ListActions';\nimport { Empty } from './Empty';\nvar defaultActions = React.createElement(DefaultActions, null);\nvar defaultPagination = React.createElement(DefaultPagination, null);\nvar defaultEmpty = React.createElement(Empty, null);\nvar DefaultComponent = Card;\nexport var ListView = function (props) {\n  var _a = props.actions,\n    actions = _a === void 0 ? defaultActions : _a,\n    aside = props.aside,\n    filters = props.filters,\n    emptyWhileLoading = props.emptyWhileLoading,\n    _b = props.pagination,\n    pagination = _b === void 0 ? defaultPagination : _b,\n    children = props.children,\n    className = props.className,\n    _c = props.component,\n    Content = _c === void 0 ? DefaultComponent : _c,\n    title = props.title,\n    _d = props.empty,\n    empty = _d === void 0 ? defaultEmpty : _d,\n    rest = __rest(props, [\"actions\", \"aside\", \"filters\", \"emptyWhileLoading\", \"pagination\", \"children\", \"className\", \"component\", \"title\", \"empty\"]);\n  var _e = useListContext(),\n    defaultTitle = _e.defaultTitle,\n    data = _e.data,\n    error = _e.error,\n    isPending = _e.isPending,\n    filterValues = _e.filterValues,\n    resource = _e.resource;\n  if (!children || !data && isPending && emptyWhileLoading) {\n    return null;\n  }\n  var renderList = function () {\n    return React.createElement(\"div\", {\n      className: ListClasses.main\n    }, (filters || actions) && React.createElement(ListToolbar, {\n      className: ListClasses.actions,\n      filters: filters,\n      actions: actions\n    }), React.createElement(Content, {\n      className: ListClasses.content\n    }, children), !error && pagination !== false && pagination);\n  };\n  var renderEmpty = function () {\n    return empty !== false && React.createElement(\"div\", {\n      className: ListClasses.noResults\n    }, empty);\n  };\n  var shouldRenderEmptyPage = !isPending && (data === null || data === void 0 ? void 0 : data.length) === 0 && !Object.keys(filterValues).length && empty !== false;\n  return React.createElement(Root, __assign({\n    className: clsx('list-page', className)\n  }, rest), React.createElement(Title, {\n    title: title,\n    defaultTitle: defaultTitle,\n    preferenceKey: \"\".concat(resource, \".list.title\")\n  }), shouldRenderEmptyPage ? renderEmpty() : renderList(), aside);\n};\nvar PREFIX = 'RaList';\nexport var ListClasses = {\n  main: \"\".concat(PREFIX, \"-main\"),\n  content: \"\".concat(PREFIX, \"-content\"),\n  actions: \"\".concat(PREFIX, \"-actions\"),\n  noResults: \"\".concat(PREFIX, \"-noResults\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b, _c;\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex'\n  }, _b[\"& .\".concat(ListClasses.main)] = {\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column'\n  }, _b[\"& .\".concat(ListClasses.content)] = (_c = {\n    position: 'relative'\n  }, _c[theme.breakpoints.down('sm')] = {\n    boxShadow: 'none'\n  }, _c.overflow = 'inherit', _c), _b[\"& .\".concat(ListClasses.actions)] = {}, _b[\"& .\".concat(ListClasses.noResults)] = {\n    flex: 1\n  }, _b;\n});","map":{"version":3,"names":["React","styled","Card","clsx","useListContext","Title","ListToolbar","Pagination","DefaultPagination","ListActions","DefaultActions","Empty","defaultActions","createElement","defaultPagination","defaultEmpty","DefaultComponent","ListView","props","_a","actions","aside","filters","emptyWhileLoading","_b","pagination","children","className","_c","component","Content","title","_d","empty","rest","__rest","_e","defaultTitle","data","error","isPending","filterValues","resource","renderList","ListClasses","main","content","renderEmpty","noResults","shouldRenderEmptyPage","length","Object","keys","Root","__assign","preferenceKey","concat","PREFIX","name","overridesResolver","styles","root","theme","display","flex","flexDirection","position","breakpoints","down","boxShadow","overflow"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/list/ListView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, ReactNode, ElementType } from 'react';\nimport { SxProps } from '@mui/system';\nimport Card from '@mui/material/Card';\nimport clsx from 'clsx';\nimport { useListContext, RaRecord } from 'ra-core';\n\nimport { Title } from '../layout/Title';\nimport { ListToolbar } from './ListToolbar';\nimport { Pagination as DefaultPagination } from './pagination';\nimport { ListActions as DefaultActions } from './ListActions';\nimport { Empty } from './Empty';\n\nconst defaultActions = <DefaultActions />;\nconst defaultPagination = <DefaultPagination />;\nconst defaultEmpty = <Empty />;\nconst DefaultComponent = Card;\n\nexport const ListView = <RecordType extends RaRecord = any>(\n    props: ListViewProps\n) => {\n    const {\n        actions = defaultActions,\n        aside,\n        filters,\n        emptyWhileLoading,\n        pagination = defaultPagination,\n        children,\n        className,\n        component: Content = DefaultComponent,\n        title,\n        empty = defaultEmpty,\n        ...rest\n    } = props;\n    const { defaultTitle, data, error, isPending, filterValues, resource } =\n        useListContext<RecordType>();\n\n    if (!children || (!data && isPending && emptyWhileLoading)) {\n        return null;\n    }\n\n    const renderList = () => (\n        <div className={ListClasses.main}>\n            {(filters || actions) && (\n                <ListToolbar\n                    className={ListClasses.actions}\n                    filters={filters}\n                    actions={actions}\n                />\n            )}\n            <Content className={ListClasses.content}>{children}</Content>\n            {!error && pagination !== false && pagination}\n        </div>\n    );\n\n    const renderEmpty = () =>\n        empty !== false && <div className={ListClasses.noResults}>{empty}</div>;\n\n    const shouldRenderEmptyPage =\n        !isPending &&\n        data?.length === 0 &&\n        !Object.keys(filterValues).length &&\n        empty !== false;\n\n    return (\n        <Root className={clsx('list-page', className)} {...rest}>\n            <Title\n                title={title}\n                defaultTitle={defaultTitle}\n                preferenceKey={`${resource}.list.title`}\n            />\n            {shouldRenderEmptyPage ? renderEmpty() : renderList()}\n            {aside}\n        </Root>\n    );\n};\n\nexport interface ListViewProps {\n    /**\n     * The actions to display in the toolbar. defaults to Filter + Create + Export.\n     *\n     * @see https://marmelab.com/react-admin/List.html#actions\n     * @example\n     * import {\n     *     CreateButton,\n     *     DatagridConfigurable,\n     *     ExportButton,\n     *     FilterButton,\n     *     List,\n     *     SelectColumnsButton,\n     *     TopToolbar,\n     * } from 'react-admin';\n     * import IconEvent from '@mui/icons-material/Event';\n     *\n     * const ListActions = () => (\n     *     <TopToolbar>\n     *         <SelectColumnsButton />\n     *         <FilterButton/>\n     *         <CreateButton/>\n     *         <ExportButton/>\n     *     </TopToolbar>\n     * );\n     *\n     * export const PostList = () => (\n     *     <List actions={<ListActions/>}>\n     *         <DatagridConfigurable>\n     *             ...\n     *         </DatagridConfigurable>\n     *     </List>\n     * );\n     */\n    actions?: ReactElement | false;\n\n    /**\n     * The content to render as a sidebar.\n     * @see https://marmelab.com/react-admin/List.html#aside\n     * @example\n     * import { List, useListContext } from 'react-admin';\n     * import { Typography } from '@mui/material';\n     *\n     * const Aside = () => {\n     *     const { data, isPending } = useListContext();\n     *     if (isPending) return null;\n     *     return (\n     *         <div style={{ width: 200, margin: '4em 1em' }}>\n     *             <Typography variant=\"h6\">Posts stats</Typography>\n     *             <Typography variant=\"body2\">\n     *                 Total views: {data.reduce((sum, post) => sum + post.views, 0)}\n     *             </Typography>\n     *         </div>\n     *     );\n     * };\n     *\n     * const PostList = () => (\n     *     <List aside={<Aside />}>\n     *         ...\n     *     </List>\n     * );\n     */\n    aside?: ReactElement;\n\n    /**\n     * A class name to apply to the root div element\n     */\n    className?: string;\n\n    /**\n     * The components rendering the list of records. Usually a <Datagrid> or <SimpleList>.\n     *\n     * @see https://marmelab.com/react-admin/List.html#children\n     * @example\n     * import { List, Datagrid, TextField, DateField, NumberField, BooleanField, ReferenceManyCount } from 'react-admin';\n     *\n     * export const BookList = () => (\n     *     <List>\n     *         <Datagrid rowClick=\"edit\">\n     *             <TextField source=\"id\" />\n     *             <TextField source=\"title\" />\n     *             <DateField source=\"published_at\" />\n     *             <ReferenceManyCount label=\"Nb comments\" reference=\"comments\" target=\"post_id\" link />\n     *             <BooleanField source=\"commentable\" label=\"Com.\" />\n     *             <NumberField source=\"nb_views\" label=\"Views\" />\n     *         </Datagrid>\n     *     </List>\n     * );\n     */\n    children: ReactNode;\n\n    /**\n     * The component used to display the list. Defaults to <Card>.\n     *\n     * @see https://marmelab.com/react-admin/List.html#component\n     * @example\n     * import { List } from 'react-admin';\n     *\n     * const PostList = () => (\n     *     <List component=\"div\">\n     *         ...\n     *     </List>\n     * );\n     */\n    component?: ElementType;\n\n    /**\n     * The component to display when the list is empty.\n     *\n     * @see https://marmelab.com/react-admin/List.html#empty\n     * @example\n     * import { CreateButton, List } from 'react-admin';\n     * import { Box, Button, Typography } from '@mui/material';\n     *\n     * const Empty = () => (\n     *     <Box textAlign=\"center\" m={1}>\n     *         <Typography variant=\"h4\" paragraph>\n     *             No products available\n     *         </Typography>\n     *         <Typography variant=\"body1\">\n     *             Create one or import products from a file\n     *         </Typography>\n     *         <CreateButton />\n     *         <Button onClick={...}>Import</Button>\n     *     </Box>\n     * );\n     *\n     * const ProductList = () => (\n     *     <List empty={<Empty />}>\n     *         ...\n     *     </List>\n     * );\n     */\n    empty?: ReactElement | false;\n\n    /**\n     * Set to true to return null while the list is loading.\n     *\n     * @see https://marmelab.com/react-admin/List.html#emptywhileloading\n     * @example\n     * import { List } from 'react-admin';\n     * import { SimpleBookList } from './BookList';\n     *\n     * const BookList = () => (\n     *     <List emptyWhileLoading>\n     *         <SimpleBookList />\n     *     </List>\n     * );\n     */\n    emptyWhileLoading?: boolean;\n\n    /**\n     * The filter inputs to display in the toolbar.\n     *\n     * @see https://marmelab.com/react-admin/List.html#filters\n     * @example\n     * import { List, TextInput } from 'react-admin';\n     *\n     * const postFilters = [\n     *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n     *     <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />,\n     * ];\n     *\n     * export const PostList = () => (\n     *     <List filters={postFilters}>\n     *         ...\n     *     </List>\n     * );\n     */\n    filters?: ReactElement | ReactElement[];\n\n    /**\n     * The pagination component to display. defaults to <Pagination />\n     *\n     * @see https://marmelab.com/react-admin/List.html#pagination\n     * @example\n     * import { Pagination, List } from 'react-admin';\n     *\n     * const PostPagination = props => <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />;\n     *\n     * export const PostList = () => (\n     *     <List pagination={<PostPagination />}>\n     *         ...\n     *     </List>\n     * );\n     */\n    pagination?: ReactElement | false;\n\n    /**\n     * The page title (main title) to display above the data. Defaults to the humanized resource name.\n     *\n     * @see https://marmelab.com/react-admin/List.html#title\n     * @example\n     * import { List } from 'react-admin';\n     *\n     * export const PostList = () => (\n     *     <List title=\"List of posts\">\n     *         ...\n     *     </List>\n     * );\n     */\n    title?: string | ReactElement;\n\n    /**\n     * The CSS styles to apply to the component.\n     *\n     * @see https://marmelab.com/react-admin/List.html#sx-css-api\n     * @example\n     * const PostList = () => (\n     *     <List\n     *         sx={{\n     *             backgroundColor: 'yellow',\n     *             '& .RaList-content': {\n     *                 backgroundColor: 'red',\n     *             },\n     *         }}\n     *     >\n     *             ...\n     *     </List>\n     * );\n     */\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaList';\n\nexport const ListClasses = {\n    main: `${PREFIX}-main`,\n    content: `${PREFIX}-content`,\n    actions: `${PREFIX}-actions`,\n    noResults: `${PREFIX}-noResults`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n\n    [`& .${ListClasses.main}`]: {\n        flex: '1 1 auto',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n\n    [`& .${ListClasses.content}`]: {\n        position: 'relative',\n        [theme.breakpoints.down('sm')]: {\n            boxShadow: 'none',\n        },\n        overflow: 'inherit',\n    },\n\n    [`& .${ListClasses.actions}`]: {},\n\n    [`& .${ListClasses.noResults}`]: {\n        flex: 1,\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}