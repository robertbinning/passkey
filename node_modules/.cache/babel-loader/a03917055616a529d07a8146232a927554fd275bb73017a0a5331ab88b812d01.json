{"ast":null,"code":"// webauthn.js\nexport const createCredential = async () => {\n  const publicKeyCredentialCreationOptions = {\n    challenge: new Uint8Array(32),\n    rp: {\n      name: \"Kwaai\"\n    },\n    user: {\n      id: new Uint8Array(32),\n      name: \"user@example.com\",\n      displayName: \"User\"\n    },\n    pubKeyCredParams: [{\n      type: \"public-key\",\n      alg: -7\n    }],\n    authenticatorSelection: {\n      authenticatorAttachment: \"platform\"\n    },\n    timeout: 60000,\n    attestation: \"direct\"\n  };\n  const credential = await navigator.credentials.create({\n    publicKey: publicKeyCredentialCreationOptions\n  });\n  return credential;\n};\nexport const getCredential = async () => {\n  const publicKeyCredentialRequestOptions = {\n    challenge: new Uint8Array(32),\n    timeout: 60000,\n    rpId: \"localhost\",\n    allowCredentials: [{\n      type: \"public-key\",\n      id: new Uint8Array(32),\n      transports: [\"internal\"]\n    }]\n  };\n  const assertion = await navigator.credentials.get({\n    publicKey: publicKeyCredentialRequestOptions\n  });\n  return assertion;\n};","map":{"version":3,"names":["createCredential","publicKeyCredentialCreationOptions","challenge","Uint8Array","rp","name","user","id","displayName","pubKeyCredParams","type","alg","authenticatorSelection","authenticatorAttachment","timeout","attestation","credential","navigator","credentials","create","publicKey","getCredential","publicKeyCredentialRequestOptions","rpId","allowCredentials","transports","assertion","get"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/src/webauthn.js"],"sourcesContent":["// webauthn.js\nexport const createCredential = async () => {\n    const publicKeyCredentialCreationOptions = {\n        challenge: new Uint8Array(32),\n        rp: {\n            name: \"Kwaai\"\n        },\n        user: {\n            id: new Uint8Array(32),\n            name: \"user@example.com\",\n            displayName: \"User\"\n        },\n        pubKeyCredParams: [\n            {\n                type: \"public-key\",\n                alg: -7\n            }\n        ],\n        authenticatorSelection: {\n            authenticatorAttachment: \"platform\"\n        },\n        timeout: 60000,\n        attestation: \"direct\"\n    };\n\n    const credential = await navigator.credentials.create({\n        publicKey: publicKeyCredentialCreationOptions\n    });\n\n    return credential;\n};\n\nexport const getCredential = async () => {\n    const publicKeyCredentialRequestOptions = {\n        challenge: new Uint8Array(32),\n        timeout: 60000,\n        rpId: \"localhost\",\n        allowCredentials: [\n            {\n                type: \"public-key\",\n                id: new Uint8Array(32),\n                transports: [\"internal\"]\n            }\n        ]\n    };\n\n    const assertion = await navigator.credentials.get({\n        publicKey: publicKeyCredentialRequestOptions\n    });\n\n    return assertion;\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMC,kCAAkC,GAAG;IACvCC,SAAS,EAAE,IAAIC,UAAU,CAAC,EAAE,CAAC;IAC7BC,EAAE,EAAE;MACAC,IAAI,EAAE;IACV,CAAC;IACDC,IAAI,EAAE;MACFC,EAAE,EAAE,IAAIJ,UAAU,CAAC,EAAE,CAAC;MACtBE,IAAI,EAAE,kBAAkB;MACxBG,WAAW,EAAE;IACjB,CAAC;IACDC,gBAAgB,EAAE,CACd;MACIC,IAAI,EAAE,YAAY;MAClBC,GAAG,EAAE,CAAC;IACV,CAAC,CACJ;IACDC,sBAAsB,EAAE;MACpBC,uBAAuB,EAAE;IAC7B,CAAC;IACDC,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE;EACjB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAMC,SAAS,CAACC,WAAW,CAACC,MAAM,CAAC;IAClDC,SAAS,EAAEnB;EACf,CAAC,CAAC;EAEF,OAAOe,UAAU;AACrB,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,iCAAiC,GAAG;IACtCpB,SAAS,EAAE,IAAIC,UAAU,CAAC,EAAE,CAAC;IAC7BW,OAAO,EAAE,KAAK;IACdS,IAAI,EAAE,WAAW;IACjBC,gBAAgB,EAAE,CACd;MACId,IAAI,EAAE,YAAY;MAClBH,EAAE,EAAE,IAAIJ,UAAU,CAAC,EAAE,CAAC;MACtBsB,UAAU,EAAE,CAAC,UAAU;IAC3B,CAAC;EAET,CAAC;EAED,MAAMC,SAAS,GAAG,MAAMT,SAAS,CAACC,WAAW,CAACS,GAAG,CAAC;IAC9CP,SAAS,EAAEE;EACf,CAAC,CAAC;EAEF,OAAOI,SAAS;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}