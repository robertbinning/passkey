{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Tooltip, Typography } from '@mui/material';\nimport { useTranslate, useFieldValue } from 'ra-core';\nimport { genericMemo } from './genericMemo';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nvar BooleanFieldImpl = function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    valueLabelTrue = props.valueLabelTrue,\n    valueLabelFalse = props.valueLabelFalse,\n    _a = props.TrueIcon,\n    TrueIcon = _a === void 0 ? DoneIcon : _a,\n    _b = props.FalseIcon,\n    FalseIcon = _b === void 0 ? ClearIcon : _b,\n    _c = props.looseValue,\n    looseValue = _c === void 0 ? false : _c,\n    rest = __rest(props, [\"className\", \"emptyText\", \"valueLabelTrue\", \"valueLabelFalse\", \"TrueIcon\", \"FalseIcon\", \"looseValue\"]);\n  var translate = useTranslate();\n  var value = useFieldValue(props);\n  var isTruthyValue = value === true || looseValue && value;\n  var ariaLabel = value ? valueLabelTrue : valueLabelFalse;\n  if (!ariaLabel) {\n    ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\n  }\n  if (looseValue || value === false || value === true) {\n    return React.createElement(StyledTypography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), React.createElement(Tooltip, {\n      title: translate(ariaLabel, {\n        _: ariaLabel\n      })\n    }, isTruthyValue ? TrueIcon ? React.createElement(TrueIcon, {\n      \"data-testid\": \"true\",\n      fontSize: \"small\",\n      className: classes.trueIcon\n    }) : React.createElement(React.Fragment, null) : FalseIcon ? React.createElement(FalseIcon, {\n      \"data-testid\": \"false\",\n      fontSize: \"small\",\n      className: classes.falseIcon\n    }) : React.createElement(React.Fragment, null)));\n  }\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\",\n    className: className\n  }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n    _: emptyText\n  }));\n};\nBooleanFieldImpl.displayName = 'BooleanFieldImpl';\nexport var BooleanField = genericMemo(BooleanFieldImpl);\nvar PREFIX = 'RaBooleanField';\nvar classes = {\n  trueIcon: \"\".concat(PREFIX, \"-trueIcon\"),\n  falseIcon: \"\".concat(PREFIX, \"-falseIcon\")\n};\nvar StyledTypography = styled(Typography, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {\n  display: 'inline-flex',\n  verticalAlign: 'middle',\n  lineHeight: 0\n}, _a[\"& .\".concat(classes.trueIcon)] = {}, _a[\"& .\".concat(classes.falseIcon)] = {}, _a));","map":{"version":3,"names":["React","styled","DoneIcon","ClearIcon","Tooltip","Typography","useTranslate","useFieldValue","genericMemo","sanitizeFieldRestProps","BooleanFieldImpl","props","className","emptyText","valueLabelTrue","valueLabelFalse","_a","TrueIcon","_b","FalseIcon","_c","looseValue","rest","__rest","translate","value","isTruthyValue","ariaLabel","createElement","StyledTypography","__assign","component","variant","title","_","fontSize","classes","trueIcon","Fragment","falseIcon","displayName","BooleanField","PREFIX","concat","name","overridesResolver","styles","root","display","verticalAlign","lineHeight"],"sources":["/Users/robertbinning/Documents/GitHub/robertbinning/passkey/node_modules/react-admin/node_modules/ra-ui-materialui/src/field/BooleanField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Tooltip, Typography, TypographyProps, SvgIcon } from '@mui/material';\nimport { useTranslate, useFieldValue } from 'ra-core';\nimport { genericMemo } from './genericMemo';\nimport { FieldProps } from './types';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\n\nconst BooleanFieldImpl = <\n    RecordType extends Record<string, any> = Record<string, any>,\n>(\n    props: BooleanFieldProps<RecordType>\n) => {\n    const {\n        className,\n        emptyText,\n        valueLabelTrue,\n        valueLabelFalse,\n        TrueIcon = DoneIcon,\n        FalseIcon = ClearIcon,\n        looseValue = false,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const value = useFieldValue(props);\n    const isTruthyValue = value === true || (looseValue && value);\n    let ariaLabel = value ? valueLabelTrue : valueLabelFalse;\n\n    if (!ariaLabel) {\n        ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\n    }\n\n    if (looseValue || value === false || value === true) {\n        return (\n            <StyledTypography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                <Tooltip title={translate(ariaLabel, { _: ariaLabel })}>\n                    {isTruthyValue ? (\n                        TrueIcon ? (\n                            <TrueIcon\n                                data-testid=\"true\"\n                                fontSize=\"small\"\n                                className={classes.trueIcon}\n                            />\n                        ) : (\n                            <></>\n                        )\n                    ) : FalseIcon ? (\n                        <FalseIcon\n                            data-testid=\"false\"\n                            fontSize=\"small\"\n                            className={classes.falseIcon}\n                        />\n                    ) : (\n                        <></>\n                    )}\n                </Tooltip>\n            </StyledTypography>\n        );\n    }\n\n    return (\n        <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={className}\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {emptyText && translate(emptyText, { _: emptyText })}\n        </Typography>\n    );\n};\nBooleanFieldImpl.displayName = 'BooleanFieldImpl';\n\nexport const BooleanField = genericMemo(BooleanFieldImpl);\n\nexport interface BooleanFieldProps<\n    RecordType extends Record<string, any> = Record<string, any>,\n> extends FieldProps<RecordType>,\n        Omit<TypographyProps, 'textAlign'> {\n    valueLabelTrue?: string;\n    valueLabelFalse?: string;\n    TrueIcon?: typeof SvgIcon | null;\n    FalseIcon?: typeof SvgIcon | null;\n    looseValue?: boolean;\n}\n\nconst PREFIX = 'RaBooleanField';\n\nconst classes = {\n    trueIcon: `${PREFIX}-trueIcon`,\n    falseIcon: `${PREFIX}-falseIcon`,\n};\n\nconst StyledTypography = styled(Typography, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    display: 'inline-flex',\n    verticalAlign: 'middle',\n    lineHeight: 0,\n    [`& .${classes.trueIcon}`]: {},\n    [`& .${classes.falseIcon}`]: {},\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}